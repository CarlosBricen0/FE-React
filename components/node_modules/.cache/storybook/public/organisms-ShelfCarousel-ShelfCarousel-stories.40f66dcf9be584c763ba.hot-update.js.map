{"version":3,"file":"organisms-ShelfCarousel-ShelfCarousel-stories.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AAGA","sources":["webpack://components/./stories/organisms/Carousel/Arrows/CustomButtonGroup.tsx"],"sourcesContent":["import classNames from 'classnames'\nimport { getGlobalStyle } from '../../../../helpers'\nimport { Icon } from '../../../atoms'\nimport styles from './arrow.module.css'\n\nexport interface ArrowProps {\n  customClass?: string;\n  isRight?: boolean,\n  marginArrows?: string;\n  opacity?: boolean;\n  showArrows?: boolean,\n  goToSlide?: (param: unknown) => void;\n  next?: () => void;\n  onClick?: (isRight?: boolean) => void;\n  previous?: () => void;\n}\n\nexport const CustomButtonGroup = ({\n  customClass,\n  opacity,\n  showArrows,\n  next,\n  onClick,\n  previous\n}: ArrowProps) => {\n\n  const Arrow = ({ isRight = false }) => {\n    const arrowSide = isRight ? 'ArrowRightNavigate' : 'ArrowBackNavigate'\n    const nameStyle = isRight ? 'right' : 'left'\n    const styleArrow = isRight ? '' : '0'\n\n    const handleClick = () => {\n      if (typeof onClick === 'function') onClick(isRight)\n      return isRight ? next() : previous()\n    }\n\n    return (\n      <button\n        className={\n          classNames(\n            styles.arrow,\n            customClass,\n            {\n              [styles.opacity]: opacity,\n              [styles.rightArrow]: isRight,\n              [styles.leftArrow]: !isRight\n            }\n          )\n        }\n        onClick={handleClick}\n        style={{ [nameStyle]: styleArrow }}\n      >\n        <Icon\n          clickable='pointer'\n          color={getGlobalStyle('--color-icons-gray')}\n          name={arrowSide}\n        />\n      </button>\n    )\n  }\n\n  return (\n    <>\n      {showArrows && (\n        <div>\n          <Arrow />\n          <Arrow isRight />\n        </div>\n      )}\n    </>\n  )\n}\n"],"names":[],"sourceRoot":""}