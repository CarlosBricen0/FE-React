{"version":3,"file":"molecules-Toast-Toast-stories.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AAmBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AA1GA","sources":["webpack://components/./stories/molecules/Toast/Toast.tsx"],"sourcesContent":["import classNames from 'classnames'\nimport { useEffect, useState } from 'react'\nimport { getGlobalStyle } from '../../../helpers'\nimport {\n  Button,\n  Icon,\n  Picture,\n  Text\n} from '../../atoms'\nimport { Column, Row } from '../../layout'\nimport styles from './Toast.module.css'\n\nexport interface ToastProps {\n  button?: {\n    target?: string;\n    title?: string;\n    url?: string;\n  },\n  fixedPosition?: 'top' | 'bottom';\n  hideOnScroll?: boolean;\n  iconUrl?: string;\n  isFixed?: boolean;\n  message?: string;\n  showClose?: boolean;\n  title?: string;\n  onClose?: () => void;\n  onBlurButton?: () => void;\n}\n\nconst HIDE_SCROLL_OFFSET = 100\n\nexport const Toast = ({\n  button,\n  fixedPosition = 'top',\n  hideOnScroll = true,\n  iconUrl,\n  isFixed = false,\n  message,\n  showClose,\n  title,\n  onBlurButton,\n  onClose\n}: ToastProps): React.ReactElement<ToastProps> => {\n  const [isHidden, setHidden] = useState(false)\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY\n      if (currentScrollY > HIDE_SCROLL_OFFSET) {\n        setHidden(true)\n      } else {\n        setHidden(false)\n      }\n    }\n\n    if (hideOnScroll) {\n      window.addEventListener('scroll', handleScroll)\n    }\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll)\n    }\n  }, [])\n\n  const handleClickButton = () => {\n    if (button?.url) {\n      window.open(button.url, button.target)\n    }\n    return onBlurButton && onBlurButton()\n  }\n\n  return (\n    <Row\n      absoluteDefault={fixedPosition === 'bottom' ? 'bottomLeft' : 'topLeft'}\n      alignItems='center'\n      aria-hidden={isHidden}\n      backgroundColor={getGlobalStyle('--color-base-white')}\n      customClassName={classNames(styles.toast, {\n        [styles[`toast--${fixedPosition}`]]: fixedPosition,\n        [styles['toast--hidden']]: isHidden\n      })}\n      data-testid='toast'\n      padding='4px 20px'\n      position={isFixed ? 'fixed' : 'initial'}\n      zIndex={getGlobalStyle('--z-index-5')}\n    >\n      <Column\n        padding='0 8px 0 0'\n        width='fit-content'\n      >\n        {showClose && (\n          <Icon\n            clickable='pointer'\n            color={getGlobalStyle('--color-neutral-gray-dark')}\n            name='Close'\n            onClick={onClose}\n          />\n        )}\n      </Column>\n      <Column>\n        <Row alignItems='center'>\n          <Column width='fit-content'>\n            {iconUrl && (\n              <Picture\n                alt={title}\n                height='40'\n                objectFit='contain'\n                src={iconUrl}\n                width='40'\n              />\n            )}\n          </Column>\n          <Column padding='10px'>\n            <Row>\n              <Text fontSize='sm' fontWeight='semibold'>{title}</Text>\n            </Row>\n            <Row>\n              <Text fontSize='xs'>{message}</Text>\n            </Row>\n          </Column>\n        </Row>\n      </Column>\n      <Column width='fit-content'>\n        {button && (\n          <Button\n            borderRadius={getGlobalStyle('--border-radius-full')}\n            fontSize={getGlobalStyle('--font-size-xs')}\n            height='auto'\n            label={button.title}\n            minWidth='100%'\n            onClick={handleClickButton}\n            padding={'6px 10px'}\n          />\n        )}\n      </Column>\n    </Row>\n  )\n}"],"names":[],"sourceRoot":""}