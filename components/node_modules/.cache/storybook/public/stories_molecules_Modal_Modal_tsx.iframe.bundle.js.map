{"version":3,"file":"stories_molecules_Modal_Modal_tsx.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAOA;AAOA;AAAA;AAAA;AAAA;AAuDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAGA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAMA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;;ACzXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://components/./stories/molecules/Modal/Modal.tsx","webpack://components/./stories/molecules/Modal/Modal.module.css","webpack://components/./stories/molecules/Modal/Modal.module.css?b3a4"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { getGlobalStyle } from '../../../helpers'\nimport {\n  FontSize,\n  Icon,\n  IconProps,\n  Text\n} from '../../atoms'\nimport { JustifyContent, Position } from '../../layout/BaseContainer/BaseContainer'\nimport {\n  Column,\n  Container,\n  Row,\n  Spacer\n} from '../../layout'\nimport { Site } from '../../../shared/interfaces/Site'\nimport styles from './Modal.module.css'\n\ninterface ModalProps {\n  adjusted?: boolean;\n  backgroundColor?: string;\n  borderRadius?: string;\n  children: React.ReactNode;\n  className?: string;\n  color?: string;\n  colorButtonDrag?: string;\n  customCssFullScreen?: boolean;\n  customIcon?:IconProps['name'];\n  customIconPadding?: string;\n  dragRatio?: number;\n  errorModal?: boolean;\n  fontSizeMobile?: FontSize;\n  fullScreen?: boolean;\n  halfScreen?: boolean;\n  height?: string;\n  hiddenX?: boolean;\n  hideOverlay?: boolean;\n  iconPadding?: string;\n  iconProps?: Omit<IconProps, 'name'>;\n  iconSize?: IconProps['customSize'];\n  isCloseIcon?: boolean;\n  isDraggable?: boolean;\n  isOpen: boolean;\n  justifyContent?: JustifyContent;\n  level?: '1' | '2' | '3';\n  marginFullScreen?: string;\n  maxHeight?: string;\n  maxHeightFullScreen?: string;\n  maxWidth?: string;\n  minFullscreenTranslation?: number;\n  minHeight?: string;\n  minHeightFullScreen?: string;\n  modalTitle?: string;\n  padding?: string;\n  position?: Position;\n  site?: Site;\n  sizeIconClose?: number;\n  titleModalMobile?: boolean;\n  top?: string;\n  widthButtonDrag?: string;\n  toggle?: () => void;\n  toggleOutside?: () => void;\n}\n\ninterface DragProps {\n  dragStartLeft: number;\n  dragStartTop: number;\n  dragStartX: number;\n  dragStartY: number;\n  transalteY: number;\n}\nexport const ID_MODAL_HANDLER = 'modal_handler'\nexport const ID_MODAL_ACTION = 'modal_handler_action'\n\nexport const Modal = ({\n  adjusted,\n  backgroundColor = getGlobalStyle('--color-base-white'),\n  borderRadius = getGlobalStyle('--border-radius-md'),\n  children,\n  className,\n  color='white',\n  colorButtonDrag = getGlobalStyle('--color-neutral-gray-silver'),\n  customCssFullScreen,\n  customIcon = 'AlertIcon',\n  customIconPadding = '0px',\n  dragRatio = 0.5,\n  errorModal,\n  fontSizeMobile,\n  fullScreen,\n  halfScreen = false,\n  height = 'initial',\n  hiddenX = false,\n  hideOverlay = false,\n  iconPadding,\n  iconProps,\n  iconSize = 26.5,\n  isCloseIcon = true,\n  isDraggable = true,\n  isOpen = false,\n  justifyContent,\n  level,\n  marginFullScreen = '60px 0 0 0',\n  maxHeight = 'initial',\n  maxHeightFullScreen,\n  maxWidth = '315px',\n  minFullscreenTranslation = 0,\n  minHeight = '20%',\n  minHeightFullScreen = 'calc(100vh - 60px)',\n  modalTitle = '',\n  padding = '20px',\n  position = null,\n  site = 'unimarc',\n  sizeIconClose = 14,\n  titleModalMobile = false,\n  top,\n  widthButtonDrag = '45px',\n  toggle,\n  toggleOutside = () => { return }\n}: ModalProps): React.ReactElement => {\n  const modalRef = useRef<HTMLDivElement>(null)\n  const dragProps = useRef<DragProps>()\n\n  const handleDragStart = (e: React.TouchEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    const { clientX, clientY } = e.touches[0]\n    const { offsetTop, offsetLeft } = modalRef.current\n    const { left, top } = modalRef.current.getBoundingClientRect()\n\n    dragProps.current = {\n      dragStartLeft: left - offsetLeft,\n      dragStartTop: top - offsetTop,\n      dragStartX: clientX,\n      dragStartY: clientY,\n      transalteY: 0\n    }\n\n    window.addEventListener('touchmove', handleDrag, false)\n    window.addEventListener('touchend', handleDragEnd, false)\n  }\n\n  const handleDragEnd = () => {\n    const translateAmount = dragProps.current.transalteY\n    const bodyHeight = halfScreen ? document.body.clientHeight / 4 : document.body.clientHeight\n    const maxTranslation = dragRatio * bodyHeight\n\n    if (minFullscreenTranslation && translateAmount > maxTranslation) {\n      const originTranslateAmount = minFullscreenTranslation !== 0 ? translateAmount : minFullscreenTranslation\n\n      const animation = modalRef.current.animate(\n        [\n          { transform: `translateY(${originTranslateAmount}px)` },\n          { transform: `translateY(${minFullscreenTranslation}px)` }\n        ],\n        {\n          duration: 200\n        }\n      )\n\n      animation.addEventListener('finish', () => {\n        dragProps.current.transalteY = minFullscreenTranslation\n        modalRef.current.style.transform = `translateY(${minFullscreenTranslation}px)`\n      })\n\n      animation.addEventListener('finish', () => {\n        toggleOutside()\n      })\n    }\n\n    if (translateAmount < maxTranslation && translateAmount > 0) {\n      const animation = modalRef.current.animate(\n        [\n          { transform: `translateY(${translateAmount}px)` },\n          { transform: `translateY(0px)` }\n        ],\n        {\n          duration: 200\n        }\n      )\n      animation.addEventListener('finish', () => {\n        dragProps.current.transalteY = 0\n        modalRef.current.style.transform = 'translateY(0px)'\n      })\n    }\n\n    window.removeEventListener('touchmove', handleDrag, false)\n    window.removeEventListener('touchend', handleDragEnd, false)\n  }\n\n  const handleDrag = (e: TouchEvent) => {\n    e.preventDefault()\n    if (!e.touches?.length) return\n\n    const { clientY } = e.touches[0]\n    dragProps.current.transalteY =\n      dragProps.current.dragStartTop + clientY - dragProps.current.dragStartY\n\n    if (dragProps.current.transalteY < 0) dragProps.current.transalteY = 0\n\n    modalRef.current.style.transform = `translateY(${dragProps.current.transalteY}px)`\n  }\n\n  const modalIconName = customIcon\n  const modalIconSize = iconSize\n  const isUnimarc: boolean = site === 'unimarc'\n  const classes = `${isUnimarc ? classNames(styles.error_icon) : classNames(styles.error_icon_alvi)}`\n\n  useEffect(() => {\n    if (isOpen && typeof toggleOutside === 'function') window.addEventListener('keyup', e => { return e.code === 'Escape' && toggleOutside() })\n    return () => { return isOpen && window.removeEventListener('keyup', () => { return }) }\n  }, [isOpen])\n\n  return (\n    <>\n      {isOpen ? (\n        <>\n          {/* overlay */}\n          <Container\n            className={classNames(\n              styles.modalBg,\n              'modal__bg',\n              {\n                [styles['modal__customCssFullScreen']]: customCssFullScreen,\n                [styles['modal__fullScreen']]: fullScreen,\n                [styles['modal__hideOverlay']]: hideOverlay,\n                [styles[`modal__level-${level}`]]: !!level\n              }\n            )}\n            maxHeight={null}\n            maxWidth={null}\n            position={position}\n            top={top}\n          >\n            {/* Icon on top of modal */}\n            {\n              (errorModal && isUnimarc) &&\n              <>\n                <div className={classes}>\n                  <Container justifyContent='center' padding={customIconPadding}>\n                    <Icon\n                      color={color}\n                      customSize={modalIconSize}\n                      name={modalIconName}\n                    />\n                  </Container>\n                </div>\n              </>\n            }\n            {\n              (errorModal && !isUnimarc) &&\n              <>\n                <div className={classes}>\n                  <Container justifyContent='center' padding={customIconPadding}>\n                    <Icon\n                      color={color}\n                      customSize={modalIconSize}\n                      name={modalIconName}\n                    />\n                  </Container>\n                </div>\n              </>\n            }\n            <Container\n              customHeight='100%'\n              customWidth='100%'\n              onClick={toggleOutside}\n              position='absolute'\n            />\n            {/* modal container */}\n            <Container\n              alignItems='center'\n              backgroundColor={backgroundColor}\n              borderRadius={borderRadius}\n              customHeight={height}\n              height={height}\n              justifyContent='center'\n              maxHeight={maxHeight}\n              maxWidth={maxWidth}\n              minHeight={minHeight}\n              overflow='hidden'\n              padding={padding}\n              position='relative'\n              ref={modalRef}\n              {...(fullScreen && {\n                width: '100%',\n                margin: marginFullScreen,\n                minHeight: minHeightFullScreen,\n                maxHeight: maxHeightFullScreen,\n                maxWidth: '100%'\n              })}\n              className={\n                classNames(\n                  styles.overflow,\n                  className,\n                  {[styles['modal__adjusted']]: adjusted}\n                )}\n            >\n              {fullScreen && (\n                <Column\n                  id={ID_MODAL_HANDLER}\n                  onTouchStart={isDraggable && handleDragStart}\n                  position='absolute'\n                  top='0'\n                  touchAction={'none'}\n                >\n                  <Container\n                    alignSelf='center'\n                    backgroundColor={colorButtonDrag}\n                    borderRadius={getGlobalStyle('--border-radius-sm')}\n                    clickable={'grab'}\n                    customHeight='6px'\n                    id={ID_MODAL_ACTION}\n                    margin='10px'\n                    width={widthButtonDrag}\n                    zIndex='3'\n                  />\n                  {\n                    titleModalMobile &&\n                    (<>\n                      <Spacer.Horizontal size={12} />\n                      <Row\n                        alignItems='center'\n                        justifyContent={justifyContent}\n                        width='100%'\n                      >\n                        <Text\n                          fontSize={fontSizeMobile}\n                          fontWeight='semibold'\n                          lineHeight='25px'\n                        >\n                          {modalTitle}\n                        </Text>\n                      </Row>\n                      <Spacer.Horizontal size={24} />\n                    </>)\n                  }\n                </Column>\n              )}\n              {/* X button */}\n              {!hiddenX &&\n                <Container\n                  absoluteDefault='topRight'\n                  alignItems='start'\n                  justifyContent='end'\n                  maxWidth='max-content'\n                  onClick={toggle}\n                  padding={iconPadding ?? padding}\n                  position='absolute'\n                  zIndex={'1'}\n                >\n                  {isCloseIcon &&\n                      <div className={classNames({[styles['icon__adjusted']]: adjusted})}>\n                        <Icon\n                          clickable='pointer'\n                          color={getGlobalStyle('--color-icons-gray')}\n                          customSize={sizeIconClose}\n                          name='Close'\n                          {...iconProps}\n                        />\n                      </div>\n                  }\n                </Container>\n              }\n              {/* content */}\n              <Column\n                alignItems='center'\n                customHeight={height}\n                justifyContent={justifyContent}\n              >\n                {children}\n              </Column>\n            </Container>\n          </Container>\n        </>\n      ) : null}\n    </>\n  )\n}","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".yh83OV57ILdPjdWcyTex {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  padding: var(--spacing-xl);\\n  background-color: var(--color-alvi-primary-black-opacity);\\n  z-index: var(--z-index-99999);\\n  overflow: hidden auto;\\n  opacity: 1;\\n}\\n\\n.WiuJIiuylMd60J8xCmdW {\\n  overflow: hidden !important;\\n  background: transparent !important;\\n}\\n\\n.HCZXKBEPlojqSAAquAQw {\\n  background-color: var(--color-neutral-gray-light);\\n  border-radius: 40px;\\n  padding: 8px;\\n  margin: 15px;\\n}\\n\\n.tTzBC5tfeEsCf2x7tyJn {\\n  padding: 0;\\n  display: block;\\n}\\n\\n.DQxqEixoeYaeedIuW5FB {\\n  pointer-events: none;\\n  background-color: transparent;\\n}\\n\\n.DE4miiGvQAHrC7o1U5wL {\\n  display: flex;\\n}\\n\\n.m9c1I7ONOF5Aqal4jq8L {\\n  overflow-y: auto;\\n  pointer-events: auto;\\n}\\n\\n.dp5hTarPcY9hnDKhK2OL {\\n  align-items: center;\\n  background: var(--color-primary-red-qty-button);\\n  border-radius: 55px;\\n  display: flex;\\n  height: 60px;\\n  justify-content: center;\\n  min-height: 60px;\\n  min-width: 60px;\\n  position: relative;\\n  top: 30px;\\n  width: 60px;\\n  z-index: 1;\\n}\\n\\n.sN5E_ZF6QncSYi32wN1w {\\n  align-items: center;\\n  background: var(--color-alvi-primary-blue-gradient);\\n  border-radius: 55px;\\n  color: var(--color-alvi-icons-white);\\n  display: flex;\\n  height: 60px;\\n  justify-content: center;\\n  min-height: 60px;\\n  min-width: 60px;\\n  position: relative;\\n  top: 22px;\\n  width: 60px;\\n  z-index: 1;\\n}\\n\\n.rp_gviYovUTZzatlzqCM {\\n  color: var(--color-alvi-icons-white);\\n  font-size: 30px;\\n  font-weight: 500;\\n}\\n\\n.dmturEssEB13dlJkBSx1 {\\n  z-index: var(--z-index-999);\\n}\\n\\n.looEt8ylOnvIrK9aDyCE {\\n  z-index: var(--z-index-9999);\\n}\\n\\n.qolEQNjycWqpAS0LGurT {\\n  z-index: var(--z-index-99999);\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./stories/molecules/Modal/Modal.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;EACf,MAAM;EACN,QAAQ;EACR,OAAO;EACP,SAAS;EACT,0BAA0B;EAC1B,yDAAyD;EACzD,6BAA6B;EAC7B,qBAAqB;EACrB,UAAU;AACZ;;AAEA;EACE,2BAA2B;EAC3B,kCAAkC;AACpC;;AAEA;EACE,iDAAiD;EACjD,mBAAmB;EACnB,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,UAAU;EACV,cAAc;AAChB;;AAEA;EACE,oBAAoB;EACpB,6BAA6B;AAC/B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;AACtB;;AAEA;EACE,mBAAmB;EACnB,+CAA+C;EAC/C,mBAAmB;EACnB,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,gBAAgB;EAChB,eAAe;EACf,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,mBAAmB;EACnB,mDAAmD;EACnD,mBAAmB;EACnB,oCAAoC;EACpC,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,gBAAgB;EAChB,eAAe;EACf,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,oCAAoC;EACpC,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,6BAA6B;AAC/B\",\"sourcesContent\":[\".modalBg {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  padding: var(--spacing-xl);\\n  background-color: var(--color-alvi-primary-black-opacity);\\n  z-index: var(--z-index-99999);\\n  overflow: hidden auto;\\n  opacity: 1;\\n}\\n\\n.modal__adjusted {\\n  overflow: hidden !important;\\n  background: transparent !important;\\n}\\n\\n.icon__adjusted {\\n  background-color: var(--color-neutral-gray-light);\\n  border-radius: 40px;\\n  padding: 8px;\\n  margin: 15px;\\n}\\n\\n.modal__fullScreen {\\n  padding: 0;\\n  display: block;\\n}\\n\\n.modal__hideOverlay {\\n  pointer-events: none;\\n  background-color: transparent;\\n}\\n\\n.modal__customCssFullScreen {\\n  display: flex;\\n}\\n\\n.overflow {\\n  overflow-y: auto;\\n  pointer-events: auto;\\n}\\n\\n.error_icon {\\n  align-items: center;\\n  background: var(--color-primary-red-qty-button);\\n  border-radius: 55px;\\n  display: flex;\\n  height: 60px;\\n  justify-content: center;\\n  min-height: 60px;\\n  min-width: 60px;\\n  position: relative;\\n  top: 30px;\\n  width: 60px;\\n  z-index: 1;\\n}\\n\\n.error_icon_alvi {\\n  align-items: center;\\n  background: var(--color-alvi-primary-blue-gradient);\\n  border-radius: 55px;\\n  color: var(--color-alvi-icons-white);\\n  display: flex;\\n  height: 60px;\\n  justify-content: center;\\n  min-height: 60px;\\n  min-width: 60px;\\n  position: relative;\\n  top: 22px;\\n  width: 60px;\\n  z-index: 1;\\n}\\n\\n.error_text_icon {\\n  color: var(--color-alvi-icons-white);\\n  font-size: 30px;\\n  font-weight: 500;\\n}\\n\\n.modal__level-1 {\\n  z-index: var(--z-index-999);\\n}\\n\\n.modal__level-2 {\\n  z-index: var(--z-index-9999);\\n}\\n\\n.modal__level-3 {\\n  z-index: var(--z-index-99999);\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"modalBg\": \"yh83OV57ILdPjdWcyTex\",\n\t\"modal__adjusted\": \"WiuJIiuylMd60J8xCmdW\",\n\t\"icon__adjusted\": \"HCZXKBEPlojqSAAquAQw\",\n\t\"modal__fullScreen\": \"tTzBC5tfeEsCf2x7tyJn\",\n\t\"modal__hideOverlay\": \"DQxqEixoeYaeedIuW5FB\",\n\t\"modal__customCssFullScreen\": \"DE4miiGvQAHrC7o1U5wL\",\n\t\"overflow\": \"m9c1I7ONOF5Aqal4jq8L\",\n\t\"error_icon\": \"dp5hTarPcY9hnDKhK2OL\",\n\t\"error_icon_alvi\": \"sN5E_ZF6QncSYi32wN1w\",\n\t\"error_text_icon\": \"rp_gviYovUTZzatlzqCM\",\n\t\"modal__level-1\": \"dmturEssEB13dlJkBSx1\",\n\t\"modal__level-2\": \"looEt8ylOnvIrK9aDyCE\",\n\t\"modal__level-3\": \"qolEQNjycWqpAS0LGurT\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./Modal.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./Modal.module.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./Modal.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}