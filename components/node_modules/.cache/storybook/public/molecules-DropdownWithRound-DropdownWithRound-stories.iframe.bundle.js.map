{"version":3,"file":"molecules-DropdownWithRound-DropdownWithRound-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AAKA;AAQA;AAMA;AAAA;AAAA;AAAA;AAAA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAGA;AAvCA;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AAxEA;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;ACvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://components/./helpers/mediaQueries/index.ts","webpack://components/./stories/molecules/DropdownWithRound/DropdownWithRound.tsx","webpack://components/./stories/molecules/DropdownWithRound/DropdownWithRound.module.css","webpack://components/./stories/molecules/DropdownWithRound/DropdownWithRound.module.css?e498"],"sourcesContent":["import React from 'react'\nimport { useMediaQuery } from 'react-responsive'\n\nexport const BigScreen = ({ children }: { children: React.ReactElement }): React.ReactElement => {\n  return useMediaQuery({ minWidth: 1280 }) ? children : null\n}\n\nexport const SmallScreen = ({ children }: { children: React.ReactElement }): React.ReactElement => {\n  return useMediaQuery({ maxWidth: 1279 }) ? children : null\n}\n","import classNames from 'classnames'\nimport React, { useState } from 'react'\nimport {\n  BigScreen,\n  getGlobalStyle,\n  SmallScreen\n} from '../../../helpers'\nimport {\n  Backbone,\n  Icon,\n  Link,\n  Picture,\n  Text,\n  Title\n} from '../../atoms'\nimport {\n  Column,\n  Container,\n  Row,\n  Vertical\n} from '../../layout'\nimport styles from './DropdownWithRound.module.css'\n\nexport interface DataBody {\n  image: string;\n  name: string;\n  href: string;\n}\n\nexport interface DropdownWithRoundProps {\n  customLabelDropdown?: string;\n  dataBody: DataBody[] | [];\n  isOpen: boolean;\n  linkWrapper?: React.FunctionComponent;\n  numberPerRow?: number;\n  showMore?: boolean;\n  title: string;\n  handleChangeDropDown?: () => void;\n  handleOnClickCard?: () => void;\n}\n\ninterface HeaderDropdownProps {\n  classNameWithAnimateIcon: string;\n  labelDropdown: string;\n  showMore?: boolean;\n  title: string;\n  handleChangeDropDown?: () => void;\n}\n\nconst HeaderDropdown = ({\n  classNameWithAnimateIcon,\n  labelDropdown,\n  showMore = true,\n  title,\n  handleChangeDropDown\n}: HeaderDropdownProps): React.ReactElement => {\n  return (\n    <Column padding='19px 20px'>\n      <Row alignItems='center' justifyContent='between'>\n        <Title fontWeight='semibold'>{title}</Title>\n        {showMore && (\n          <Row\n            alignItems='center'\n            clickable='pointer'\n            customClassName={classNameWithAnimateIcon}\n            customWidth='max-content'\n            justifyContent='center'\n            onClick={handleChangeDropDown}\n          >\n            <Text\n              clickable='pointer'\n              color='neutral-dark'\n              fontWeight='semibold'\n              underline='always'\n            >\n              {labelDropdown}\n            </Text>\n            <Vertical size={8} />\n            <Icon\n              clickable='pointer'\n              color={getGlobalStyle('--color-neutral-gray-dark')}\n              name='DropDownClose'\n            />\n          </Row>\n        )}\n      </Row>\n    </Column>\n  )\n}\n\ninterface ItemRoundProps {\n  customWithEachItem: string;\n  data: DataBody;\n  isErrorImg: boolean;\n  isMobile?: boolean;\n  linkWrapper?: React.FunctionComponent;\n  setIsErrorImg: React.Dispatch<React.SetStateAction<boolean>>;\n  handleOnClickCard?: () => void;\n}\n\nconst ItemRound = ({\n  customWithEachItem,\n  data,\n  isErrorImg,\n  isMobile,\n  linkWrapper,\n  setIsErrorImg,\n  handleOnClickCard\n}: ItemRoundProps): React.ReactElement => {\n  const sizeCircle: number = isMobile ? 100 : 200\n  const marginContainer: string = isMobile ? '0px 12px 0px 0px' : '40px 0px 0px 0px'\n  const sizeTitleItem = isMobile ? 'md' : 'xl'\n\n  return (\n    <Column\n      alignItems='center'\n      customWidth={customWithEachItem}\n      justifyContent='center'\n      margin={marginContainer}\n      minWidth={`${sizeCircle}px`}\n      onClick={handleOnClickCard}\n    >\n      <Column\n        alignItems='center'\n        backgroundColor={getGlobalStyle('--color-neutral-anti-flash')}\n        borderRadius='50%'\n        justifyContent='center'\n        maxHeight={`${sizeCircle}px`}\n        maxWidth={`${sizeCircle}px`}\n        minHeight={`${sizeCircle}px`}\n        minWidth={`${sizeCircle}px`}\n      >\n        <Link\n          customClassName={styles[`link${sizeCircle}`]}\n          href={data.href}\n          underline='none'\n          wrapper={linkWrapper}\n        >\n          {isErrorImg || !data.image ? (\n            <Row clickable='pointer' maxWidth={`${sizeCircle}px`} >\n              <Backbone borderRadius='50%' height={sizeCircle} />\n            </Row>\n          ) : (\n            <Picture\n              alt={data.name}\n              borderRadius='50%'\n              hasURL\n              height='100%'\n              onError={() => {\n                setIsErrorImg(true)\n              }}\n              src={data.image}\n              width='100%'\n            />\n          )}\n        </Link>\n      </Column>\n      <Link href={data.href} underline='none' >\n        <Row justifyContent='center' padding='9px 12px 0'>\n          <Text\n            clickable='pointer'\n            color='black'\n            fontSize={sizeTitleItem}\n            textAlign='center'\n            truncate={20}\n          >\n            {data?.name}\n          </Text>\n        </Row>\n      </Link>\n    </Column>\n  )\n}\n\nexport const DropdownWithRound = ({\n  customLabelDropdown,\n  dataBody,\n  isOpen,\n  linkWrapper,\n  numberPerRow = 5,\n  showMore,\n  title,\n  handleChangeDropDown,\n  handleOnClickCard\n}: DropdownWithRoundProps) => {\n  const [isErrorImg, setIsErrorImg] = useState<boolean>(false)\n  const defaultLabelDropdown: string = isOpen ? 'Ver menos' : 'Ver todos'\n  const labelDropdown: string = customLabelDropdown || defaultLabelDropdown\n  const customWithEachItem: string = (100 / numberPerRow).toString()\n  const classNameWithAnimateIcon: string = classNames(styles['icon-dropdown'], {\n    [styles['icon-dropdown--open']]: isOpen\n  })\n\n  const headerProps: HeaderDropdownProps = {\n    classNameWithAnimateIcon,\n    labelDropdown,\n    title,\n    handleChangeDropDown\n  }\n\n  const BodyDropdown = ({ isMobile }: { isMobile?: boolean }) => {\n    const itemsProps: Omit<ItemRoundProps, 'data'> = {\n      customWithEachItem,\n      isErrorImg,\n      isMobile,\n      linkWrapper,\n      handleOnClickCard,\n      setIsErrorImg\n    }\n\n    return (\n      <Container\n        isWrap={!isMobile}\n        justifyContent={isMobile ? 'start' : 'center'}\n        overflow={isMobile ? 'scroll' : 'auto'}\n        padding={isMobile ? '12px' : '0px 20px'}\n      >\n        {dataBody?.map((data, index) => {\n          if (!isMobile && !isOpen && index > numberPerRow - 1) return null\n          return (\n            <ItemRound\n              {...itemsProps}\n              data={data}\n              key={index}\n            />\n          )\n        })}\n      </Container >\n    )\n  }\n\n  return (\n    <>\n      <BigScreen>\n        <>\n          <HeaderDropdown showMore={showMore} {...headerProps} />\n          <BodyDropdown />\n        </>\n      </BigScreen>\n      <SmallScreen>\n        <>\n          <HeaderDropdown showMore={false} {...headerProps} />\n          <BodyDropdown isMobile />\n        </>\n      </SmallScreen>\n    </>\n  )\n}","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".eXsugx0lLy4I71LCp9NZ svg {\\n  transition: all .5s;\\n}\\n\\n.BgrqZK8dvWqMIJ1jS8RQ svg {\\n  transition: all .5s;\\n  transform: rotate(180deg);\\n}\\n\\n.qP0KEaGhZjTHav9tQeac {\\n  height: 200px;\\n}\\n\\n.KVTmrVzigvzQXFZTgM81 {\\n  height: 100px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./stories/molecules/DropdownWithRound/DropdownWithRound.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,yBAAyB;AAC3B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf\",\"sourcesContent\":[\".icon-dropdown svg {\\n  transition: all .5s;\\n}\\n\\n.icon-dropdown--open svg {\\n  transition: all .5s;\\n  transform: rotate(180deg);\\n}\\n\\n.link200 {\\n  height: 200px;\\n}\\n\\n.link100 {\\n  height: 100px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"icon-dropdown\": \"eXsugx0lLy4I71LCp9NZ\",\n\t\"icon-dropdown--open\": \"BgrqZK8dvWqMIJ1jS8RQ\",\n\t\"link200\": \"qP0KEaGhZjTHav9tQeac\",\n\t\"link100\": \"KVTmrVzigvzQXFZTgM81\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./DropdownWithRound.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./DropdownWithRound.module.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./DropdownWithRound.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}