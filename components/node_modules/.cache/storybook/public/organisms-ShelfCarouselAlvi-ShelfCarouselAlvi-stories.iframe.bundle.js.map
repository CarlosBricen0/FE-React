{"version":3,"file":"organisms-ShelfCarouselAlvi-ShelfCarouselAlvi-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAKA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;AC5DA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AAEA;AACA;AACA;AAMA;AAAA;AAAA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AAtGA;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://components/./helpers/currencyFormat/index.ts","webpack://components/./stories/organisms/Carousel/Arrows/CustomButtonGroup.tsx","webpack://components/./stories/organisms/ShelfAlvi/helpers/PropertiesProducts.tsx","webpack://components/./stories/organisms/ShelfCarouselAlvi/ShelfCarouselAlvi.tsx","webpack://components/./stories/organisms/ShelfCarouselAlvi/shelfCarouselAlvi.module.css","webpack://components/./stories/organisms/ShelfCarouselAlvi/shelfCarouselAlvi.module.css?f29b"],"sourcesContent":["interface CurrencyFormat {\n  number: number;\n  bool?: boolean;\n}\n\nexport const currencyFormat = ({\n  number,\n  bool = true\n}: CurrencyFormat): string => {\n\n  let formatNumber = 0\n\n  // If true then divide number\n  if (bool) {\n    formatNumber = number / 100\n  }\n  // Else just assign it\n  else {\n    formatNumber = number\n  }\n\n  const formatterPeso = new Intl.NumberFormat('es-CL', {\n    style: 'currency',\n    currency: 'CLP',\n    minimumFractionDigits: 0\n  })\n\n  if (formatNumber >= 0) {\n    return formatterPeso.format(formatNumber)\n  }\n\n  return '- ' + formatterPeso.format(Math.abs(formatNumber))\n}","import classNames from 'classnames'\nimport { getGlobalStyle } from '../../../../helpers'\nimport { Icon } from '../../../atoms'\nimport styles from './arrow.module.css'\n\nexport interface ArrowProps {\n  customClass?: string;\n  isRight?: boolean,\n  marginArrows?: string;\n  opacity?: boolean;\n  showArrows?: boolean,\n  goToSlide?: (param: unknown) => void;\n  next?: () => void;\n  onClick?: (isRight?: boolean) => void;\n  previous?: () => void;\n}\n\nexport const CustomButtonGroup = ({\n  customClass,\n  opacity,\n  showArrows,\n  next,\n  onClick,\n  previous\n}: ArrowProps) => {\n\n  const Arrow = ({ isRight = false }) => {\n    const arrowSide = isRight ? 'ArrowRightNavigate' : 'ArrowBackNavigate'\n    const nameStyle = isRight ? 'right' : 'left'\n    const styleArrow = isRight ? '' : '0'\n\n    const handleClick = () => {\n      if (typeof onClick === 'function') onClick(isRight)\n      return isRight ? next() : previous()\n    }\n\n    return (\n      <button\n        className={\n          classNames(\n            styles.arrow,\n            customClass,\n            {\n              [styles.opacity]: opacity,\n              [styles.rightArrow]: isRight,\n              [styles.leftArrow]: !isRight\n            }\n          )\n        }\n        onClick={handleClick}\n        style={{ [nameStyle]: styleArrow }}\n      >\n        <Icon\n          clickable='pointer'\n          color={getGlobalStyle('--color-icons-gray')}\n          name={arrowSide}\n        />\n      </button>\n    )\n  }\n\n  return (\n    <>\n      {showArrows && (\n        <div>\n          <Arrow />\n          <Arrow isRight />\n        </div>\n      )}\n    </>\n  )\n}\n","\nimport { Product, PriceSteps } from '../../../../shared/interfaces/IProducts'\n\nexport interface PropertiesProductsProp {\n  couponState?: boolean;\n  isLoggedIn?: boolean;\n  product?: Product;\n  stock?: boolean;\n  validationStatus?: string;\n}\n\nconst sortPriceStep = (product: Product): Array<PriceSteps> => {\n  if (!product?.priceSteps) return []\n  const { priceSteps } = product\n  return priceSteps.sort((a, b) => {\n    return a.promotionalPrice - b.promotionalPrice\n  })\n}\n\nconst setTextButton = (stock?: boolean, couponState?: boolean) => {\n  if (!stock) return 'Sin stock'\n  if (couponState) return 'Activa tu cupÃ³n'\n  return 'Agregar'\n}\n\nexport const PropertiesProducts = ({\n  couponState = false,\n  isLoggedIn,\n  product,\n  stock = true,\n  validationStatus\n}: PropertiesProductsProp) => {\n\n  const notValid = validationStatus === '0'\n  let isWeighable = false\n  if (product?.measurementUnit && product?.measurementUnitUn)\n    isWeighable = product?.measurementUnit.toLowerCase() == 'kg' && product?.measurementUnitUn.toLowerCase() == 'kg'\n\n  const showInValidation = isLoggedIn && notValid\n  const showPriceSteps = product?.priceSteps\n  const textButton = setTextButton(stock, couponState)\n\n  return {\n    isWeighable,\n    showInValidation,\n    showPriceSteps,\n    sortPriceStep: sortPriceStep(product),\n    textButton\n  }\n}","import React from 'react'\nimport { Row } from '../../layout'\nimport { ChildrenBaseContainerProps } from '../../layout/BaseContainer/BaseContainer'\nimport { Carousel, CarouselDataProps } from '../Carousel/Carousel'\nimport { ShelfAlviProps, MemoShelfAlvi } from '../ShelfAlvi/ShelfAlvi'\nimport { ArrowProps, CustomButtonGroup } from '../Carousel/Arrows/CustomButtonGroup'\nimport { QuantityButtonProps, QuantityButtonStylesProps } from '../../molecules'\nimport { AvailableProduct } from '../../../shared/interfaces/IIntelligenceSearch'\nimport { Product } from '../../../shared/interfaces/IProducts'\nimport { ButtonStatus } from '../../atoms'\nimport { CatchShelfRefProps } from '../ShelfCarousel/ShelfCarousel'\nimport styles from './shelfCarouselAlvi.module.css'\nimport { ShelfProps } from '../Shelf/Shelf'\n\nexport interface ShelfCarouselAlviProps {\n  buttonLabel?: string;\n  buttonStatus?: ButtonStatus;\n  carouselProps?: Omit<CarouselDataProps, 'children'>;\n  containerProps?: ChildrenBaseContainerProps;\n  couponState?: boolean;\n  customButtonGroupProps?: ArrowProps;\n  isLoggedIn?: boolean;\n  isMobile?: boolean;\n  items: ShelfAlviProps[] | AvailableProduct[] | Product[] | ShelfProps[];\n  itemsToShow?: number;\n  quantityButtonProps?: Omit<QuantityButtonProps, 'value'>;\n  quantityButtonStyles?: QuantityButtonStylesProps;\n  showArrows?: boolean;\n  slidesToSlide?: number;\n  validationStatus?: string;\n  catchShelfRef?: (props?: CatchShelfRefProps) => void;\n  handleOnClick?: (props?: { itemId: string }) => void;\n  onClickProduct?: (props?: { product: object, index: number }) => void;\n}\n\nexport const ShelfCarouselAlvi = ({\n  buttonStatus,\n  carouselProps,\n  containerProps,\n  couponState,\n  customButtonGroupProps,\n  isLoggedIn,\n  isMobile,\n  items = [],\n  itemsToShow = 1,\n  quantityButtonProps,\n  quantityButtonStyles,\n  showArrows,\n  slidesToSlide = 1,\n  validationStatus,\n  catchShelfRef,\n  handleOnClick,\n  onClickProduct\n}: ShelfCarouselAlviProps) => {\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: itemsToShow,\n      slidesToSlide: slidesToSlide\n    },\n    mobile: {\n      breakpoint: { max: 1023, min: 0 },\n      items: itemsToShow,\n      slidesToSlide: slidesToSlide,\n      partialVisibilityGutter: 15\n    }\n  }\n\n  const handleClickProduct = ({ product, index }) => {\n    if (!onClickProduct) return\n\n    onClickProduct({ product, index })\n  }\n\n  const maxQuantity = (shelf) => {\n    return shelf?.cartLimit > 0 ? shelf?.cartLimit : shelf?.sellers[0]?.availableQuantity\n  }\n\n  if ((items?.length <= 4 && !isMobile) || (items?.length <= 2 && isMobile)) {\n    return (\n      <Row isWrap {...containerProps}>\n        {items?.map((shelf, index) => {\n          return (\n            <MemoShelfAlvi\n              {...shelf}\n              buttonStatus={buttonStatus}\n              catchShelfRef={(ref) => { catchShelfRef({ ref, shelf, index: index + 1 }) }}\n              couponState={couponState}\n              customClassName={styles.shelfStyle}\n              handleOnClick={handleOnClick}\n              importantWidth='50'\n              isLoggedIn={isLoggedIn}\n              key={index}\n              onClickProduct={() => { handleClickProduct({ product: shelf, index: index + 1 }) }}\n              orientation='vertical'\n              quantityButtonProps={{...quantityButtonProps, maxQuantity: maxQuantity(shelf)}}\n              quantityButtonStyles={quantityButtonStyles}\n              validationStatus={validationStatus}\n            />\n          )\n        })}\n      </Row>\n    )\n  }\n\n  return (\n    <Carousel\n      arrows={false}\n      containerProps={containerProps}\n      customButtonGroup={<CustomButtonGroup showArrows={showArrows} {...customButtonGroupProps} />}\n      dotListClass={showArrows && styles.dotList}\n      renderButtonGroupOutside\n      responsive={responsive}\n      showDots\n      {...carouselProps}\n    >\n      {items?.map((shelf, index) => {\n        return (\n          <MemoShelfAlvi\n            {...shelf}\n            buttonStatus={buttonStatus}\n            catchShelfRef={(ref) => { catchShelfRef({ ref, shelf, index: index + 1 }) }}\n            couponState={couponState}\n            customClassName={styles.shelfStyle}\n            handleOnClick={handleOnClick}\n            importantWidth='100'\n            isLoggedIn={isLoggedIn}\n            key={index}\n            orientation='vertical'\n            quantityButtonProps={{...quantityButtonProps, maxQuantity: maxQuantity(shelf)}}\n            quantityButtonStyles={quantityButtonStyles}\n            validationStatus={validationStatus}\n          />\n        )\n      })}\n    </Carousel>\n  )\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".EHr6UGA2FOSFAc7G6atd {\\n  margin-bottom: -36px;\\n  position: absolute;\\n  padding: 14px;\\n}\\n\\n.u51R2RwwO3Q58moMzqfw {\\n  filter: var(--filter-xs);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./stories/organisms/ShelfCarouselAlvi/shelfCarouselAlvi.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,wBAAwB;AAC1B\",\"sourcesContent\":[\".dotList {\\n  margin-bottom: -36px;\\n  position: absolute;\\n  padding: 14px;\\n}\\n\\n.shelfStyle {\\n  filter: var(--filter-xs);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"dotList\": \"EHr6UGA2FOSFAc7G6atd\",\n\t\"shelfStyle\": \"u51R2RwwO3Q58moMzqfw\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./shelfCarouselAlvi.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./shelfCarouselAlvi.module.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./shelfCarouselAlvi.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}