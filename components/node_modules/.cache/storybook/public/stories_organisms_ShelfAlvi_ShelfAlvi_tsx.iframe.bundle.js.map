{"version":3,"file":"stories_organisms_ShelfAlvi_ShelfAlvi_tsx.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAGA;AAlCA;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAKA;AACA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAhDA;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AASA;AAMA;AAKA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AA6CA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAKA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAIA;AAEA;AAEA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;ACxeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://components/./stories/organisms/ShelfAlvi/ChipOffer/index.tsx","webpack://components/./stories/organisms/ShelfAlvi/FloatButtons/index.tsx","webpack://components/./stories/organisms/ShelfAlvi/PartnerPrice/index.tsx","webpack://components/./stories/organisms/ShelfAlvi/ShelfAlvi.tsx","webpack://components/./stories/organisms/ShelfAlvi/ShelfAlvi.module.css","webpack://components/./stories/organisms/ShelfAlvi/ShelfAlvi.module.css?af71"],"sourcesContent":["import { Text } from '../../../atoms'\nimport { Container, Row } from '../../../layout'\nimport styles from '../ShelfAlvi.module.css'\nimport { getGlobalStyle } from '../../../../helpers'\n\nexport interface ChipOfferPros {\n    fontSizeChipOffer: typeof Text.arguments.fontSize;\n    offer: number | string;\n    padding: string;\n    styled: string;\n    width: string;\n}\n\nexport const ChipOffer = ({ \n  fontSizeChipOffer,\n  offer,\n  padding,\n  styled,\n  width\n}: ChipOfferPros): React.ReactElement<ChipOfferPros> => {\n  \n  return (\n    <Container\n      margin='0px 0px 0px 10px'\n      maxWidth={width}\n      position='relative'\n      zIndex='0'\n    >\n      <Row\n        backgroundColor={getGlobalStyle('--color-alvi-background-selago')}\n        borderRadius='4px'\n        customClassName={styled}\n        padding={padding}\n        zIndex='0'\n      >\n        <Text\n          customClassName={styles.textChipOffert}\n          fontSize={fontSizeChipOffer}\n          fontWeight='regular'\n          textAlign='center'\n          type='label'\n        >\n          {offer}\n        </Text>\n      </Row>\n    </Container>\n  )\n}\n","import { Icon } from '../../../atoms'\nimport {\n  Container,\n  Row,\n  Column\n} from '../../../layout'\nimport { getGlobalStyle } from '../../../../helpers'\nimport styles from '../ShelfAlvi.module.css'\n\nexport const FloatButtons = (): React.ReactElement => {\n\n  return (\n    <Container\n      absoluteDefault='topRight'\n      customClassName={styles.contentFloatButtons}\n      justifyContent='end'\n      maxWidth='30px'\n      position='absolute'\n      zIndex='1'\n    >\n      <Column maxWidth='30px'>\n        <Row\n          alignItems='center'\n          backgroundColor={getGlobalStyle('--color-alvi-background-white')}\n          borderRadius='50%'\n          customClassName={styles.likeListButtons}\n          justifyContent='center'\n          margin='0 0 14px 0'\n          maxWidth='30px'\n          minHeight='30px'\n        >\n          <Icon\n            clickable='pointer'\n            color={getGlobalStyle('--color-alvi-icons-gray')}\n            name='List'\n            sizes='xs'\n          />\n        </Row>\n        <Row\n          alignItems='center'\n          backgroundColor={getGlobalStyle('--color-alvi-background-white')}\n          borderRadius='50%'\n          customClassName={styles.likeListButtons}\n          justifyContent='center'\n          maxWidth='30px'\n          minHeight='30px'\n        >\n          <Icon\n            clickable='pointer'\n            color={getGlobalStyle('--color-alvi-icons-gray')}\n            name='Heart'\n            sizes='xs'\n          />\n        </Row>\n      </Column>\n    </Container>\n  )\n}\n","import { Text } from '../../../atoms'\nimport {\n  Horizontal,\n  Column,\n  Row\n} from '../../../layout'\nimport styles from '../ShelfAlvi.module.css'\nimport { ChipOffer } from '../ChipOffer'\nimport { currencyFormat } from '../../../../helpers'\n\nexport interface PartnerPriceProps {\n  _id?: string;\n  isMobile?: boolean;\n  minQuantity?: number;\n  orientation?: 'horizontal' | 'vertical';\n  percentualDiscount?: number;\n  promotionalPrice?: number;\n  unit?: string;\n  pdp?: boolean;\n}\n\nexport const PartnerPrice = ({\n  _id,\n  isMobile = false,\n  minQuantity,\n  orientation = 'horizontal',\n  pdp = false,\n  percentualDiscount,\n  promotionalPrice,\n  unit\n}: PartnerPriceProps): React.ReactElement<PartnerPriceProps> => {\n\n  const measurementUnit = unit || 'un'\n  const sizeTextFrom = pdp ? 'lg' : 'sm'\n  const sizeTextCu = pdp ? 'lg' : 'xs'\n  const sizeTextPrice = pdp ? '3xl' : 'sm'\n  const sizeTextChip = pdp ? 'md' : 'xs'\n  const paddingChip = pdp ? '1px 0 1px 4px' : '5px 0 5px 0'\n  const customWidth = pdp ? '100' : '110'\n  const widthShip = pdp ? '84px' : '70px'\n  const customClass = pdp ? styles.textPricePromotionCcuPdp : styles.textPricePromotionCcu\n\n  return (\n    <>\n      <Row alignItems='center' key={_id}>\n        <Column customWidth={customWidth}>\n          <Text color='gray' fontSize={sizeTextFrom}>\n            Desde {minQuantity} {measurementUnit}\n          </Text>\n        </Column>\n        <Column>\n          <Row justifyContent='end'>\n            <Text\n              color='primary'\n              customClassName={styles.textPricePromotion}\n              fontSize={sizeTextPrice}\n              fontWeight='semibold'\n              truncate={30}\n              type='span'\n            >\n              {currencyFormat({ number: promotionalPrice, bool: false })}\n            </Text>\n            <Text\n              color='blue'\n              customClassName={customClass}\n              fontSize={sizeTextCu}\n              fontWeight='regular'\n              truncate={30}\n              type='span'\n            >\n              c/u\n            </Text>\n          </Row>\n        </Column>\n        {(!isMobile || orientation === 'horizontal') && (\n          <Column customWidth='108'>\n            <Row justifyContent='start'>\n              <ChipOffer\n                fontSizeChipOffer={sizeTextChip}\n                offer={`Ahorra ${percentualDiscount}%`}\n                padding={paddingChip}\n                styled={styles.offerDesktop}\n                width={widthShip}\n              />\n            </Row>\n          </Column>\n        )}\n      </Row>\n      <Horizontal size={2} />\n    </>\n  )\n\n}","import React, { useMemo, useState } from 'react'\nimport { PartnerPrice, PartnerPriceProps } from './PartnerPrice'\nimport {\n  ButtonStatus,\n  Icon,\n  Link,\n  Picture,\n  Text,\n  TooltipProps,\n  Divider\n} from '../../atoms'\nimport {\n  Column,\n  Container,\n  Row,\n  Spacer\n} from '../../layout'\nimport {\n  currencyFormat,\n  getGlobalStyle,\n  SmallScreen\n} from '../../../helpers'\nimport {\n  AddToCartAndQuantity,\n  ChipProps,\n  QuantityButtonProps,\n  QuantityButtonStylesProps\n} from '../../molecules'\nimport { FloatButtons } from './FloatButtons'\nimport { PropertiesProducts } from './helpers/PropertiesProducts'\nimport styles from './ShelfAlvi.module.css'\n\nexport interface ShelfAlviProps extends Omit<React.HTMLProps<HTMLInputElement>, 'ref'> {\n  [key: string]: unknown;\n  brand?: string;\n  buttonLabel?: string;\n  buttonStatus?: ButtonStatus;\n  couponState?: boolean;\n  customClassName?: string;\n  customWidthQuantityButton?: string;\n  format?: string;\n  img?: string;\n  importantWidth?: string;\n  isDisabled?: boolean;\n  isLoading?: boolean;\n  isLoggedIn?: boolean;\n  isMobile?: boolean;\n  isPromotion?: boolean;\n  itemId?: string | number;\n  likeListButtons?: boolean;\n  listPrice?: number;\n  measurementUnit?: string;\n  measurementUnitUn?: string;\n  offer?: number | string;\n  orientation?: 'horizontal' | 'vertical';\n  ppum?: string;\n  ppumListPrice?: string;\n  price?: number;\n  priceSteps?: Array<PartnerPriceProps>;\n  promotion?: { image?: string } & ChipProps;\n  quantity?: number;\n  quantityButtonProps?: QuantityButtonProps;\n  quantityButtonStyles?: QuantityButtonStylesProps;\n  stock?: boolean;\n  title?: string;\n  tooltipProps?: TooltipProps;\n  typePromotion?: number;\n  url?: string;\n  validationStatus?: string;\n  catchShelfRef?: (props?: object) => void;\n  handleOnClick?: (props?: { itemId: string }) => void;\n  onClickProduct?: () => void;\n  onRedirect?: () => void;\n}\n\nconst customProperties = (\n  importantWidth: string,\n  isMobile: boolean,\n  orientation: string,\n  stock: boolean\n) => {\n  const shelfVertical = orientation == 'vertical'\n  const shelfVerticalMobile = shelfVertical && isMobile\n  const shelfHorizontal = orientation == 'horizontal'\n  const customMaxWidth = shelfVertical ? '272px' : '100%'\n  const customMinHeight = shelfVertical ? '380px' : '218px'\n  const customTruncate: typeof Text.arguments.truncate = shelfVerticalMobile ? 20 : 28\n  const customJustifyContent: typeof Row.arguments.justifyContent = shelfVerticalMobile ? 'end' : 'start'\n  const customPictureClassName = !stock ? styles.outOfStock : ''\n  const customWidth = importantWidth || '100'\n\n  return {\n    customJustifyContent,\n    customMaxWidth,\n    customMinHeight,\n    customPictureClassName,\n    customTruncate,\n    customWidth,\n    shelfHorizontal,\n    shelfVertical\n  }\n}\n\nconst setButtonStatus = (\n  buttonStatus: ButtonStatus,\n  stock: boolean,\n  couponState: boolean\n): ButtonStatus => {\n  if (!stock || couponState) return 'disabled'\n  return buttonStatus\n}\n\nconst validateMobile = (isMobile: boolean, shelfVertical: boolean, shelfHorizontal: boolean) => {\n\n  const customVerticalMargin = !isMobile ? 6 : 2\n  const customFontSize: typeof Text.arguments.fontSize = isMobile ? 'xs' : 'md'\n  const regularPriceSpacer: typeof Spacer.arguments.size = shelfVertical && isMobile ? 1 : 80\n  const customPadding = shelfHorizontal && isMobile ? '12px 2' : '5px'\n  const sizeFormat: typeof Text.arguments.fontSize = isMobile ? 'xs' : 'sm'\n  const sizeTitle: typeof Text.arguments.fontSize = isMobile ? 'sm' : 'md'\n  const customImageSize = isMobile ? '100px' : '160px'\n  const customImagePadding = isMobile ? '20px 0' : '0'\n  const sizeInfo: typeof Text.arguments.fontSize = isMobile ? 'sm' : 'md'\n  const sizeIconInfo = isMobile ? 16 : 20\n  const alignItemsPrice: typeof Row.arguments.alignItems = isMobile ? 'center' : 'baseline'\n\n  return {\n    alignItemsPrice,\n    customFontSize,\n    customImagePadding,\n    customImageSize,\n    customPadding,\n    customVerticalMargin,\n    regularPriceSpacer,\n    sizeFormat,\n    sizeIconInfo,\n    sizeInfo,\n    sizeTitle\n  }\n}\n\nconst ShelfAlvi = React.forwardRef(function ShelfAlvi({\n  brand,\n  format,\n  img,\n  importantWidth,\n  couponState = false,\n  buttonStatus = 'initial',\n  isLoading,\n  isLoggedIn,\n  isMobile = true,\n  itemId,\n  likeListButtons = false,\n  measurementUnit = 'un',\n  measurementUnitUn = 'un',\n  orientation = 'horizontal',\n  price,\n  priceSteps,\n  quantity = 0,\n  quantityButtonProps,\n  quantityButtonStyles,\n  stock = true,\n  title,\n  tooltipProps,\n  url,\n  validationStatus,\n  onRedirect,\n  catchShelfRef,\n  handleOnClick,\n  onClickProduct\n}: ShelfAlviProps, ref?: React.RefObject<HTMLDivElement>): React.ReactElement<ShelfAlviProps> {\n  const {\n    customJustifyContent,\n    customMaxWidth,\n    customMinHeight,\n    customPictureClassName,\n    customTruncate,\n    customWidth,\n    shelfHorizontal,\n    shelfVertical\n  } = customProperties(importantWidth, isMobile, orientation, stock)\n\n  const customButtonStatus = setButtonStatus(buttonStatus, stock, couponState)\n\n  const {\n    alignItemsPrice,\n    customFontSize,\n    customImagePadding,\n    customImageSize,\n    customPadding,\n    customVerticalMargin,\n    regularPriceSpacer,\n    sizeFormat,\n    sizeIconInfo,\n    sizeInfo,\n    sizeTitle\n  } = validateMobile(isMobile, shelfVertical, shelfHorizontal)\n\n  const {\n    isWeighable,\n    showInValidation,\n    showPriceSteps,\n    sortPriceStep,\n    textButton\n  } = PropertiesProducts({\n    validationStatus,\n    isLoggedIn,\n    product: {\n      priceSteps,\n      measurementUnit,\n      measurementUnitUn\n    },\n    stock,\n    couponState\n  })\n\n  const clubAlvi = false\n  const buttonJustifyContent = orientation === 'vertical' ? 'center' : 'start'\n  const [shelfRef, setShelfRef] = useState()\n\n  const handleImgVal = useMemo(() => {\n    shelfRef && catchShelfRef && catchShelfRef(shelfRef)\n    return true\n  }, [shelfRef])\n\n  return (\n    <Column\n      customWidth={customWidth}\n      justifyContent='center'\n      maxWidth={customMaxWidth}\n      padding={customPadding}\n      ref={setShelfRef}\n      val={handleImgVal}\n    >\n      <Spacer.Horizontal size={12} />\n      <Container\n        backgroundColor={getGlobalStyle('--color-alvi-base-white')}\n        borderRadius='20px'\n        customClassName={styles.shelf}\n        justifyContent='center'\n        maxWidth='100%'\n        minHeight={customMinHeight}\n        padding={getGlobalStyle('--border-radius-sm')}\n        position='relative'\n        ref={ref}\n      >\n        {likeListButtons && <FloatButtons />}\n        <Row>\n          {orientation === 'horizontal' && (\n            <Column\n              customWidth='46'\n              justifyContent='center'\n              onClick={onClickProduct}\n            >\n              <Picture\n                alt={title}\n                anchor={true}\n                border='none'\n                borderRadius='none'\n                className={customPictureClassName}\n                height='90px'\n                objectFit='contain'\n                src={img}\n                url={url}\n                width='100%'\n              />\n            </Column>\n          )}\n          <Column padding='0 0 0 6px'>\n            {orientation === 'vertical' && (\n              <>\n                <Row justifyContent='center' padding={customImagePadding}>\n                  <Picture\n                    alt={title}\n                    anchor={true}\n                    border='none'\n                    borderRadius='none'\n                    className={customPictureClassName}\n                    height={customImageSize}\n                    objectFit='contain'\n                    src={img}\n                    url={url}\n                    width='100%'\n                  />\n                </Row>\n                <Spacer.Horizontal size={16} />\n              </>\n            )}\n            <Row>\n              <Column clickable='pointer' onClick={onRedirect}>\n                <Text\n                  clickable='pointer'\n                  color='black'\n                  customClassName={styles.brandText}\n                  fontSize={sizeFormat}\n                  fontWeight='semibold'\n                >\n                  {brand.toLowerCase()}\n                </Text>\n                <Spacer.Horizontal size={2} />\n                <Link\n                  href={url}\n                  title={title}\n                  underline='none'\n                >\n                  <Text\n                    clickable='pointer'\n                    color='black'\n                    fontSize={sizeTitle}\n                    fontWeight='regular'\n                    truncate={customTruncate}\n                  >\n                    {title.charAt(0) + title.toLowerCase().slice(1)}\n                  </Text>\n                </Link>\n                <Spacer.Horizontal size={2} />\n                <Row minHeight='16.3px'>\n                  <Text\n                    color='gray'\n                    fontSize={sizeFormat}\n                    truncate={customTruncate}\n                  >\n                    {format}\n                  </Text>\n                </Row>\n              </Column>\n            </Row>\n\n            {stock &&\n              <Row>\n                <Column justifyContent='start' minHeight='72px'>\n                  {!isWeighable &&\n                    <>\n                      <Spacer.Horizontal size={8} />\n                      <Column customWidth='70'>\n                        <Row alignItems='center'>\n                          <Text\n                            color='primary'\n                            customClassName={styles.textBlue}\n                            fontSize={customFontSize}\n                            fontWeight='semibold'\n                            truncate={30}\n                          >\n                            Precio socio\n                          </Text>\n                          <Icon customSize={20} name='LogoAlvi' />\n                        </Row>\n                      </Column>\n                      <Column minHeight='44px'>\n                        {showPriceSteps && sortPriceStep.map((step: JSX.IntrinsicAttributes & PartnerPriceProps, index: number) => {\n                          return (\n                            <PartnerPrice\n                              isMobile={isMobile}\n                              key={index}\n                              orientation={orientation}\n                              unit={measurementUnit}\n                              {...step}\n                            />\n                          )\n                        })}\n\n                        <SmallScreen>\n                          <>\n                            {clubAlvi &&\n                              <Row alignItems='center' minHeight='44px'>\n                                <Icon\n                                  color={getGlobalStyle('--color-alvi-primary-blue')}\n                                  customSize={sizeIconInfo}\n                                  name='Info'\n                                />\n                                <Spacer.Vertical size={8} />\n                                <Text color='gray' fontSize={sizeInfo}>Únete al Club Alvi</Text>\n                              </Row>\n                            }\n\n                            {showInValidation && isMobile &&\n                              <Row alignItems='center' minHeight='44px'>\n                                <Icon\n                                  color={getGlobalStyle('--color-alvi-primary-blue')}\n                                  customSize={sizeIconInfo}\n                                  name='Info'\n                                />\n                                <Spacer.Vertical size={8} />\n                                <Text color='gray' fontSize={sizeInfo}>En validación</Text>\n                              </Row>\n                            }\n                          </>\n                        </SmallScreen>\n\n                      </Column>\n                    </>\n                  }\n                </Column>\n              </Row>\n            }\n\n            {!stock &&\n              <>\n                <Spacer.Horizontal size={12} />\n                <Row minHeight='95px'>\n                  <Row\n                    backgroundColor={getGlobalStyle('--color-neutral-gray-dark')}\n                    borderRadius={getGlobalStyle('--border-radius-2xs')}\n                    justifyContent='center'\n                    maxHeight='15px'\n                    maxWidth='60px'\n                  >\n                    <Text color='white' fontSize='sm'>\n                      sin stock\n                    </Text>\n                  </Row>\n                </Row>\n              </>\n            }\n\n            <Column>\n              {stock &&\n                <>\n                  {!isWeighable ?\n                    <Divider color={getGlobalStyle('--color-alvi-neutral-gray')} verticalMargin={customVerticalMargin} />\n                    :\n                    <Column minHeight='13px' />\n                  }\n                  <Spacer.Horizontal size={2} />\n                  <Row alignItems={alignItemsPrice} justifyContent='center'>\n                    <Column customWidth='116'>\n                      <Text\n                        color='black'\n                        fontSize={sizeFormat}\n                        fontWeight='semibold'\n                      >\n                        Precio regular\n                      </Text>\n                    </Column>\n                    <Column customWidth='60'>\n                      <Row alignItems={alignItemsPrice} justifyContent={customJustifyContent}>\n                        <Text\n                          color='black'\n                          fontSize='sm'\n                          fontWeight='semibold'\n                        >\n                          {currencyFormat({ number: price, bool: false })}\n                        </Text>\n                        <Text\n                          color='black'\n                          customClassName={styles.textPricePromotionCcuR}\n                          fontSize='xs'\n                          fontWeight='semibold'\n                          truncate={30}\n                          type='span'\n                        >\n                          c/u\n                        </Text>\n                        <Spacer.Vertical size={regularPriceSpacer} />\n                      </Row>\n                    </Column>\n                  </Row>\n                </>\n              }\n\n              {!isMobile && (<Spacer.Horizontal size={8} />)}\n\n              <Row\n                customClassName={styles.buyButtonAdd}\n                justifyContent='center'\n                padding='12px 0'\n              >\n                <AddToCartAndQuantity\n                  buttonLabel={textButton}\n                  customJustifyContent={buttonJustifyContent}\n                  handleOnClick={handleOnClick}\n                  isLoading={isLoading}\n                  itemId={itemId}\n                  quantity={quantity}\n                  quantityButtonProps={quantityButtonProps}\n                  quantityButtonStyles={quantityButtonStyles}\n                  site='alvi'\n                  statusButton={customButtonStatus}\n                  tooltipProps={tooltipProps}\n                />\n              </Row>\n            </Column>\n          </Column>\n        </Row>\n      </Container>\n    </Column>)\n})\n\nconst MemoShelfAlvi = React.memo(ShelfAlvi)\n\nexport {\n  ShelfAlvi,\n  MemoShelfAlvi\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".zq6eoTD5xQOcRDWWHneD {\\n  box-shadow: var(--box-shadow-2xs);\\n}\\n\\n.PK2QnAyWaBQapcRXzH8T {\\n  text-transform: capitalize;\\n}\\n\\n.Gkw2VMxXn8i8_ncFqg2V {\\n  mix-blend-mode: luminosity;\\n}\\n\\n.JQz3e7akblG2abvrxnf8 button[disabled], .JQz3e7akblG2abvrxnf8 button[disabled]:hover {\\n  cursor: auto;\\n}\\n\\n.Ug_dy1p2n7pE4TECjoCo::after {  \\n  border-left: 15px solid transparent;\\n  border-radius: 5px 4px 5px 98%;\\n  border-top: 15px solid var(--color-alvi-background-selago);\\n  content: '';\\n  height: 0;\\n  left: -5px;\\n  position: absolute;\\n  top: 3px;\\n  transform: rotate(-135deg);\\n  width: 0;\\n  z-index: var(--z-index--1);\\n}\\n\\n.SCa7psh1teM0SHRXpkRU::after {\\n  border-left: 11px solid transparent;\\n  border-radius: 4px 4px 6px 99%;\\n  border-top: 11px solid var(--color-alvi-neutral-gray-light);\\n  content: '';\\n  left: 20px;\\n  max-width: 28px;\\n  position: absolute;\\n  transform: rotate(45deg);\\n  z-index: var(--z-index--1);\\n}\\n\\n.tSPucHWMpsquR6HHNicl {\\n  color: var(--color-alvi-primary-blue);\\n  margin-right: 4px;\\n}\\n\\n.zCjYN2afj4BzmFawoSPo {\\n  color: var(--color-alvi-primary-blue);\\n}\\n\\n.YHkooonczQRIpFCSxwd4 {\\n  margin-left: 4px;\\n  margin-top: 3px;\\n}\\n\\n.kYg55JoLsirDTKqZuDKm {\\n  margin-left: 6px;\\n  margin-right: 6px;\\n  margin-top: 9px;\\n}\\n\\n.pVhPX8N4As1qnUKvKrhD button {\\n  background: var(--color-alvi-primary-blue-gradient);\\n}\\n\\n.pVhPX8N4As1qnUKvKrhD button:hover {\\n  background: var(--color-alvi-primary-blue-gradient);\\n}\\n\\n.pVhPX8N4As1qnUKvKrhD button[disabled],\\n.pVhPX8N4As1qnUKvKrhD button[disabled]:hover {\\n  background: var(--color-alvi-icons-gray-light);\\n  cursor: auto;\\n}\\n\\n.uNfo45MVR3nOsrHnu1bg {\\n  margin-left: 4px;\\n}\\n\\n.bMZNwbyLY_5miWHa9kpw {\\n  background-color: var(--color-alvi-primary-background-blue);\\n  border-radius: 4px;\\n  padding: 1px 0;\\n}\\n\\n.Xl8fXWjyC9UGBk0yIPR8 {\\n  color: var(--color-alvi-primary-blue);\\n}\\n\\n.ULKv5Q5TG0YbgwPyxGh5 {\\n  box-shadow: var(--box-shadow-2xs);\\n}\\n\\n.AyjkB3gjg4QlAzAoGFOz {\\n  top: 12px;\\n  right: 11px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./stories/organisms/ShelfAlvi/ShelfAlvi.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,iCAAiC;AACnC;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,mCAAmC;EACnC,8BAA8B;EAC9B,0DAA0D;EAC1D,WAAW;EACX,SAAS;EACT,UAAU;EACV,kBAAkB;EAClB,QAAQ;EACR,0BAA0B;EAC1B,QAAQ;EACR,0BAA0B;AAC5B;;AAEA;EACE,mCAAmC;EACnC,8BAA8B;EAC9B,2DAA2D;EAC3D,WAAW;EACX,UAAU;EACV,eAAe;EACf,kBAAkB;EAClB,wBAAwB;EACxB,0BAA0B;AAC5B;;AAEA;EACE,qCAAqC;EACrC,iBAAiB;AACnB;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,mDAAmD;AACrD;;AAEA;EACE,mDAAmD;AACrD;;AAEA;;EAEE,8CAA8C;EAC9C,YAAY;AACd;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,2DAA2D;EAC3D,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,SAAS;EACT,WAAW;AACb\",\"sourcesContent\":[\".likeListButtons {\\n  box-shadow: var(--box-shadow-2xs);\\n}\\n\\n.brandText {\\n  text-transform: capitalize;\\n}\\n\\n.outOfStock {\\n  mix-blend-mode: luminosity;\\n}\\n\\n.buyButtonAdd button[disabled], .buyButtonAdd button[disabled]:hover {\\n  cursor: auto;\\n}\\n\\n.offerDesktop::after {  \\n  border-left: 15px solid transparent;\\n  border-radius: 5px 4px 5px 98%;\\n  border-top: 15px solid var(--color-alvi-background-selago);\\n  content: '';\\n  height: 0;\\n  left: -5px;\\n  position: absolute;\\n  top: 3px;\\n  transform: rotate(-135deg);\\n  width: 0;\\n  z-index: var(--z-index--1);\\n}\\n\\n.offerMobile::after {\\n  border-left: 11px solid transparent;\\n  border-radius: 4px 4px 6px 99%;\\n  border-top: 11px solid var(--color-alvi-neutral-gray-light);\\n  content: '';\\n  left: 20px;\\n  max-width: 28px;\\n  position: absolute;\\n  transform: rotate(45deg);\\n  z-index: var(--z-index--1);\\n}\\n\\n.textBlue {\\n  color: var(--color-alvi-primary-blue);\\n  margin-right: 4px;\\n}\\n\\n.textPricePromotion {\\n  color: var(--color-alvi-primary-blue);\\n}\\n\\n.textPricePromotionCcu {\\n  margin-left: 4px;\\n  margin-top: 3px;\\n}\\n\\n.textPricePromotionCcuPdp {\\n  margin-left: 6px;\\n  margin-right: 6px;\\n  margin-top: 9px;\\n}\\n\\n.buyButton button {\\n  background: var(--color-alvi-primary-blue-gradient);\\n}\\n\\n.buyButton button:hover {\\n  background: var(--color-alvi-primary-blue-gradient);\\n}\\n\\n.buyButton button[disabled],\\n.buyButton button[disabled]:hover {\\n  background: var(--color-alvi-icons-gray-light);\\n  cursor: auto;\\n}\\n\\n.textPricePromotionCcuR {\\n  margin-left: 4px;\\n}\\n\\n.labelDiscount {\\n  background-color: var(--color-alvi-primary-background-blue);\\n  border-radius: 4px;\\n  padding: 1px 0;\\n}\\n\\n.textChipOffert {\\n  color: var(--color-alvi-primary-blue);\\n}\\n\\n.shelf {\\n  box-shadow: var(--box-shadow-2xs);\\n}\\n\\n.contentFloatButtons {\\n  top: 12px;\\n  right: 11px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"likeListButtons\": \"zq6eoTD5xQOcRDWWHneD\",\n\t\"brandText\": \"PK2QnAyWaBQapcRXzH8T\",\n\t\"outOfStock\": \"Gkw2VMxXn8i8_ncFqg2V\",\n\t\"buyButtonAdd\": \"JQz3e7akblG2abvrxnf8\",\n\t\"offerDesktop\": \"Ug_dy1p2n7pE4TECjoCo\",\n\t\"offerMobile\": \"SCa7psh1teM0SHRXpkRU\",\n\t\"textBlue\": \"tSPucHWMpsquR6HHNicl\",\n\t\"textPricePromotion\": \"zCjYN2afj4BzmFawoSPo\",\n\t\"textPricePromotionCcu\": \"YHkooonczQRIpFCSxwd4\",\n\t\"textPricePromotionCcuPdp\": \"kYg55JoLsirDTKqZuDKm\",\n\t\"buyButton\": \"pVhPX8N4As1qnUKvKrhD\",\n\t\"textPricePromotionCcuR\": \"uNfo45MVR3nOsrHnu1bg\",\n\t\"labelDiscount\": \"bMZNwbyLY_5miWHa9kpw\",\n\t\"textChipOffert\": \"Xl8fXWjyC9UGBk0yIPR8\",\n\t\"shelf\": \"ULKv5Q5TG0YbgwPyxGh5\",\n\t\"contentFloatButtons\": \"AyjkB3gjg4QlAzAoGFOz\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./ShelfAlvi.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./ShelfAlvi.module.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./ShelfAlvi.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}