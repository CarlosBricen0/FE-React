{"version":3,"file":"stories_organisms_Header_Header_tsx.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAtCA;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAGA;AAjBA;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAMA;AAOA;AACA;AAEA;AACA;AACA;AAcA;AAAA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AAEA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAEA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAGA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAlOA;;;;;;;;;;;;;;;;;;;;;ACtDA;AAEA;AACA;AAOA;AAMA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAGA;AA9JA;;;;;;;;;;;;;;;;;;;;AC7BA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;AChGA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AAEA;AAAA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAEA;AACA;AACA;AAEA;AAMA;AAIA;AAAA;AAAA;AAAA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;ACjJA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;ACnIA;AACA;AAIA;AAMA;AACA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;ACnGA;AACA;AAYA;AAKA;AACA;AAMA;AACA;AAGA;AAAA;AAAA;AAqrWA;AAEA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AAOA;AAEA;AACA;AAAA;AAAA;AAAA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;ACtMA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://components/./stories/organisms/Header/AccountTooltip/AccountTooltip.tsx","webpack://components/./stories/organisms/Header/Aisles/BackBoneAisles/index.tsx","webpack://components/./stories/organisms/Header/Aisles/DropDownAisles/AislesDesktop.tsx","webpack://components/./stories/organisms/Header/Aisles/DropDownAisles/AislesMobile.tsx","webpack://components/./stories/organisms/Header/Aisles/DropDownAisles/DropDownAisles.tsx","webpack://components/./stories/organisms/Header/Aisles/DropDownAisles/helpers/WrapperCategory.tsx","webpack://components/./stories/organisms/Header/Aisles/DropDownAisles/helpers/customStyles.ts","webpack://components/./stories/organisms/Header/Aisles/index.tsx","webpack://components/./stories/organisms/Header/CouponCart/Coupon/index.tsx","webpack://components/./stories/organisms/Header/CouponCart/index.tsx","webpack://components/./stories/organisms/Header/Header.tsx","webpack://components/./stories/organisms/Header/Logo/index.tsx","webpack://components/./stories/organisms/Header/MyProfile/DropDownMyProfile/index.tsx","webpack://components/./stories/organisms/Header/MyProfile/index.tsx","webpack://components/./stories/organisms/Header/index.ts","webpack://components/./stories/organisms/Header/AccountTooltip/AccountTooltip.module.css","webpack://components/./stories/organisms/Header/Aisles/DropDownAisles/DropDownAisles.module.css","webpack://components/./stories/organisms/Header/CouponCart/Coupon/Coupon.module.css","webpack://components/./stories/organisms/Header/MyProfile/myProfile.module.css","webpack://components/./stories/organisms/Header/AccountTooltip/AccountTooltip.module.css?52d2","webpack://components/./stories/organisms/Header/Aisles/DropDownAisles/DropDownAisles.module.css?1910","webpack://components/./stories/organisms/Header/CouponCart/Coupon/Coupon.module.css?ae35","webpack://components/./stories/organisms/Header/MyProfile/myProfile.module.css?0ebf"],"sourcesContent":["import { getGlobalStyle } from '../../../../helpers'\nimport { Icon, Tooltip } from '../../../atoms'\nimport { Container } from '../../../layout'\nimport styles from './AccountTooltip.module.css'\n\nexport interface AccountTooltipProps {\n  primaryText?: string\n  secondaryText?: string\n  onClose?: () => void\n}\n\nexport const AccountTooltip = ({\n  primaryText,\n  secondaryText,\n  onClose\n}: AccountTooltipProps) => {\n  const handleTooltipClose = () => {\n    if (onClose) {\n      onClose()\n    }\n  }\n\n  return (\n    <Tooltip\n      align='start'\n      append={\n        <Container\n          justifyContent='center'\n          margin='-12px 0 0 16%'\n          position='absolute'\n        >\n          <Icon name='Polygon' />\n        </Container>\n      }\n      closeColor={getGlobalStyle('--color-base-black')}\n      closeIcon\n      containerProps={{ maxWidth: '0' }}\n      customClassName={styles.tooltip}\n      onClick={handleTooltipClose}\n      position='absolute'\n      right='calc(25% - 80px)'\n      text={secondaryText}\n      textSize='md'\n      title={primaryText}\n      titleSize='md'\n      top='calc(100% + 20px)'\n      type='top'\n    />\n  )\n}\n","import React from 'react'\nimport { getGlobalStyle } from '../../../../../helpers'\n\nimport { Backbone } from '../../../../atoms'\nimport { Column, Row, Spacer } from '../../../../layout'\n\nexport const BackboneAisles = (): React.ReactElement => {\n  return (\n    <Column>\n      <Column alignItems='center' justifyContent='center'>\n        {Array.from(Array(20).keys()).map(value => {\n          return (\n            <React.Fragment key={value}>\n              <Spacer.Horizontal size={24} />\n              <Row customWidth='80'>\n                <Backbone borderRadius={getGlobalStyle('--border-radius-sm')} height={12} />\n              </Row>\n            </React.Fragment>\n          )\n        })}\n      </Column >\n    </Column >\n  )\n}","import React from 'react'\nimport {\n  Column,\n  Container,\n  Row,\n  Spacer\n} from '../../../../layout'\nimport {\n  Icon,\n  Link,\n  Picture,\n  Text,\n  Title\n} from '../../../../atoms'\nimport { BackboneAisles } from '../BackBoneAisles'\nimport styles from './DropDownAisles.module.css'\nimport { AislesData } from '..'\nimport { getGlobalStyle } from '../../../../../helpers'\nimport { WrapperCategory } from './helpers/WrapperCategory'\nimport {\n  classNameCategories,\n  customClassCategory,\n  customClassRowWrapperFunc,\n  customFontSizeTitle,\n  customFontSizeTitleChild,\n  customHeightContent,\n  customPadding,\n  customScrollContent,\n  customScrollContentStatic,\n  customWidthAisles,\n  customWidthContent,\n  rowCustomTopContent,\n  statusAisles\n} from './helpers/customStyles'\n\nexport interface AislesDesktopProps {\n  customMinHeight: string;\n  customWidthColumn: string;\n  customWidthContainer: string;\n  data: AislesData[];\n  isHover: boolean;\n  isVisableBanner: boolean;\n  isVisibleAislesAlvi?: boolean;\n  isVisibleDropDownAisles?: boolean;\n  openAisles?: boolean;\n  statusAisles?: 'open' | 'close';\n  subcategory: AislesData;\n  urlBanner: string;\n  linkWrapper?: React.FunctionComponent;\n  hoverCategory?: (category?: AislesData) => void;\n  onClickCategory: () => void;\n  getCategoryUrl: (category?: AislesData) => string;\n}\n\nexport const AislesDesktop = ({\n  customMinHeight,\n  customWidthColumn,\n  customWidthContainer,\n  data,\n  isHover,\n  isVisableBanner,\n  isVisibleAislesAlvi = false,\n  isVisibleDropDownAisles,\n  openAisles,\n  subcategory,\n  linkWrapper,\n  urlBanner,\n  getCategoryUrl = () => { return '' },\n  hoverCategory = () => { return null },\n  onClickCategory = () => { return '' }\n}: AislesDesktopProps): React.ReactElement => {\n  const isOpenAisles = openAisles === true\n  const statusAislesLateral = statusAisles(isVisibleDropDownAisles)\n  const customClassNameAisles = isVisibleAislesAlvi ? statusAislesLateral : styles.aislesContainer\n  const colorIconCategory = getGlobalStyle(isVisibleAislesAlvi ? '--color-icons-white' : '--color-icons-gray')\n  const paddingSubCategory = isVisibleAislesAlvi ? '0px' : '28px 16px 0 0'\n  const widthAisles = customWidthAisles(isOpenAisles, customWidthContainer)\n  const customClassRowWrapper = customClassRowWrapperFunc(isVisibleAislesAlvi, isHover)\n  const customHeight = customHeightContent(isVisibleAislesAlvi, customMinHeight)\n  const rowCustomTop = rowCustomTopContent(isVisibleAislesAlvi)\n  const customScroll = customScrollContent(isVisibleAislesAlvi)\n  const customScrollStatic = customScrollContentStatic(isVisibleAislesAlvi)\n  const customWidth = customWidthContent(isVisibleAislesAlvi, customWidthColumn)\n  const resultClassCategories = classNameCategories(isVisibleAislesAlvi)\n  const customFontSizeCategories = customFontSizeTitle(isVisibleAislesAlvi)\n  const customFontSizeCategoriesChild = customFontSizeTitleChild(isVisibleAislesAlvi)\n  const classCategories = customClassCategory(isVisibleAislesAlvi)\n  const padding = customPadding(isVisibleAislesAlvi)\n\n  return (\n    <Container position='relative'>\n      <Column\n        backgroundColor='transparent'\n        borderRadius='0 0 8px 8px'\n        customClassName={customClassNameAisles}\n        customWidth={widthAisles}\n        padding='28px 0 0'\n        position={isVisibleDropDownAisles ? 'fixed' : 'absolute'}\n      >\n        {!isVisibleAislesAlvi && <Container customClassName={styles.arrowBox} position='relative' />}\n        <Row\n          backgroundColor={getGlobalStyle('--color-base-white')}\n          customClassName={customClassRowWrapper}\n          customWidth={isVisibleAislesAlvi && 'max-content'}\n          left={'-150'}\n          minHeight={customHeight}\n          position='absolute'\n          top={rowCustomTop}\n        >\n          <Column\n            backgroundColor={getGlobalStyle('--color-neutral-gray-white')}\n            customClassName={customScrollStatic}\n            customHeight='90vh'\n            customWidth={customWidth}\n            overflow='auto'\n            padding={padding}\n          >\n            {data?.map(category => {\n              return (\n                <Row\n                  alignItems='center'\n                  key={category?.id}\n                  onClick={onClickCategory}\n                >\n                  <Link\n                    customWidth='100'\n                    href={getCategoryUrl(category)}\n\n                    onMouseEnter={() => {\n                      hoverCategory(category)\n                    }}\n                    underline='none'\n                    wrapper={linkWrapper}\n                  >\n                    <Row\n                      alignItems='center'\n                      clickable='pointer'\n                      customClassName={resultClassCategories}\n                      customWidth='100'\n                      justifyContent='between'\n                      padding='7px 6px 7px 28px'\n                    >\n                      <Text\n                        clickable='pointer'\n                        fontSize={isVisibleAislesAlvi ? 'base' : 'md'}\n                        fontWeight='semibold'\n                        textAlign='left'\n                      >\n                        {category?.name}\n                      </Text>\n                      {\n                        (isHover && subcategory.id == category.id) &&\n                      <Icon\n                        clickable='pointer'\n                        color={colorIconCategory}\n                        name='ArrowRight'\n                        sizes='xs'\n                      />\n                      }\n                    </Row>\n                  </Link>\n                </Row>\n              )\n            })}\n            {(!data || data.length === 0) && <BackboneAisles />}\n          </Column>\n          {isHover && (\n            <Column\n              customClassName={customScroll}\n              justifyContent='between'\n              maxHeight='90vh'\n              minHeight={customMinHeight}\n            >\n              <Column padding='42px 0px 92px 38px'>\n                <Row alignItems='center' onClick={onClickCategory}>\n                  <Link\n                    href={getCategoryUrl(subcategory)}\n                    underline='none'\n                    wrapper={linkWrapper}\n                  >\n                    <Title\n                      color={isVisibleAislesAlvi ? getGlobalStyle('--color-alvi-primary-blue3') : ''}\n                      customFontSize={isVisibleAislesAlvi ? customFontSizeCategories : ''}\n                      fontWeight='bold'\n                      headingLevel='h3'\n                      text={subcategory.name}\n                    />\n                  </Link>\n                  <Spacer.Vertical size={16} />\n                  <Link\n                    color={isVisibleAislesAlvi ? getGlobalStyle('--color-text-gray-light') : ''}\n                    customClassName={classCategories}\n                    fontSize={isVisibleAislesAlvi ? 'base' : 'md'}\n                    href={getCategoryUrl(subcategory)}\n                    wrapper={linkWrapper}\n                  >\n                    Ver todo\n                  </Link>\n                </Row>\n                {isVisibleAislesAlvi && <Spacer.Horizontal size={32} />}\n                <WrapperCategory isVisibleAislesAlvi={isVisibleAislesAlvi}>\n                  {subcategory?.children?.map(list => {\n                    return (\n                      <Column\n                        customWidth={isVisibleAislesAlvi ? '100' : '33'}\n                        key={list.id}\n                        padding={paddingSubCategory}\n                      >\n                        <Row onClick={onClickCategory}>\n                          <Link\n                            href={getCategoryUrl(list)}\n                            underline='none'\n                            wrapper={linkWrapper}\n                          >\n                            <Title\n                              customClassName={isVisibleAislesAlvi ? styles.subCategoryAlvi : ''}\n                              customFontSize={customFontSizeCategoriesChild}\n                              fontWeight='semibold'\n                              headingLevel='h6'\n                              text={list?.name}\n                            />\n                          </Link>\n                        </Row>\n                        <Spacer.Horizontal size={8} />\n                        {list?.children?.map(sublist => {\n                          return (\n                            <React.Fragment key={sublist?.id}>\n                              <Spacer.Horizontal size={8} />\n                              <Row onClick={onClickCategory}>\n                                <Link\n                                  customClassName={styles.linkCategory}\n                                  fontSize='md'\n                                  href={getCategoryUrl(sublist)}\n                                  underline='none'\n                                  wrapper={linkWrapper}\n                                >\n                                  {sublist?.name}\n                                </Link>\n                              </Row>\n                            </React.Fragment>\n                          )\n                        })}\n                        <Spacer.Horizontal size={8} />\n                        {!isVisibleAislesAlvi && <Row onClick={onClickCategory}>\n                          <Link\n                            customClassName={styles.linkAllCategory}\n                            fontSize='md'\n                            href={getCategoryUrl(list)}\n                            wrapper={linkWrapper}\n                          >\n                            Ver todo\n                          </Link>\n                        </Row>}\n                      </Column>\n                    )\n                  })}\n                </WrapperCategory>\n              </Column>\n              {isVisableBanner &&\n                <Column\n                  backgroundColor={getGlobalStyle('--color-neutral-gray-dark')}\n                  customHeight='9.5rem'\n                  customWidth='100%'\n                >\n                  <Picture\n                    alt={subcategory.name}\n                    border='none'\n                    borderRadius='none'\n                    height='100%'\n                    src={urlBanner}\n                    width='100%'\n                  />\n                </Column>\n              }\n            </Column>\n          )}\n        </Row>\n      </Column >\n    </Container >\n  )\n}\n","import React, { useState } from 'react'\nimport { AislesData } from '..'\nimport { getGlobalStyle } from '../../../../../helpers'\nimport {\n  Backbone,\n  Icon,\n  Link,\n  Picture,\n  Text\n} from '../../../../atoms'\nimport {\n  Column,\n  Container,\n  Row,\n  Spacer\n} from '../../../../layout'\nimport styles from './DropDownAisles.module.css'\n\nexport interface AislesMobileProps {\n  data?: AislesData[];\n  title?: string;\n  isVisibleImageAlvi?: boolean;\n  site?: 'unimarc' | 'alvi';\n  linkWrapper?: React.FunctionComponent;\n  onClickAisles?: () => void;\n  onClickCategory: () => void;\n  getCategoryUrl?: (category?: AislesData) => string;\n}\n\nexport const AislesMobile = ({\n  title = 'Nuestros pasillos',\n  data,\n  site,\n  isVisibleImageAlvi,\n  onClickAisles,\n  onClickCategory,\n  linkWrapper,\n  getCategoryUrl = () => { return '' }\n}: AislesMobileProps): React.ReactElement => {\n  const unimarcSite: boolean = site === 'unimarc'\n  const alviSite: boolean = site === 'alvi'\n  const [isErrorImg, setIsErrorImg] = useState<boolean>(false)\n  const colorTitle: 'gray' | 'neutral-black' = unimarcSite ? 'gray' : 'neutral-black'\n  const customClassNameContent: string = unimarcSite ? '' : styles.headerContainerAlvi\n  const customHeightContent: string = unimarcSite ? 'initial' : '81px'\n  const marginListCategories: string = unimarcSite ? '62px 0px 0px' : '81px 0 0 0'\n  const paddingColumn = `0 0 0 ${unimarcSite ? '76px' : '50px'}`\n  const paddingContent: string = unimarcSite ? '20px 12px 0px' : '25px'\n  const paddingListCategories: string = unimarcSite ? '0px 12px 90px 12px' : 'initial'\n  const sizeTitle: 'xl' | '2xl' = unimarcSite ? 'xl' : '2xl'\n\n  return (\n    <Container position='fixed' zIndex={getGlobalStyle('--z-index-5')}>\n      <Column\n        backgroundColor={getGlobalStyle('--color-base-white')}\n        borderRadius='0 0 8px 8px'\n        customHeight='100vh'\n        overflow='scroll'\n        padding='0'\n        position='fixed'\n      >\n        <Container\n          alignItems='center'\n          customClassName={customClassNameContent}\n          customHeight={customHeightContent}\n          isWrap\n          minHeight={customHeightContent}\n          padding={paddingContent}\n          position='absolute'\n        >\n          {unimarcSite &&\n            <Row alignItems='center' justifyContent='end'>\n              <Icon\n                clickable='pointer'\n                color={getGlobalStyle('--color-icons-black')}\n                customSize={17}\n                name='Close'\n                onClick={onClickAisles}\n              />\n            </Row>\n          }\n          <Row>\n            <Spacer.Vertical size={16} />\n            <Column\n              alignItems='center'\n              customClassName={styles.aislesMobileTitle}\n              customWidth='33'\n              justifyContent='center'\n              padding={paddingColumn}\n            >\n              <Text\n                clickable='pointer'\n                color={colorTitle}\n                fontSize={sizeTitle}\n                fontWeight='semibold'\n                underline='hover'\n              >\n                {title}\n              </Text>\n            </Column>\n            {alviSite &&\n              <Row alignItems='center' justifyContent='end'>\n                <Icon\n                  clickable='pointer'\n                  color={getGlobalStyle('--color-icons-black')}\n                  customSize={20.34}\n                  name='Close'\n                  onClick={onClickAisles}\n                />\n              </Row>\n            }\n          </Row>\n        </Container>\n\n        <Container\n          isWrap\n          margin={marginListCategories}\n          padding={paddingListCategories}\n        >\n          {data && data.map((category, index) => {\n            const image = isVisibleImageAlvi ? category?.image : category?.img\n            return (\n              <Column\n                alignItems='center'\n                customWidth='33'\n                justifyContent='center'\n                key={`${category.id}_${index}`}\n                margin='32px 0px 0px 0px'\n                onClick={onClickCategory}\n              >\n                <Column\n                  alignItems='center'\n                  backgroundColor='#F1F1F1'\n                  borderRadius='50%'\n                  justifyContent='center'\n                  maxWidth='100px'\n                  minHeight='100px'\n                >\n                  <Link\n                    href={getCategoryUrl(category)}\n                    underline='none'\n                    wrapper={linkWrapper}\n                  >\n                    {isErrorImg || !image ?\n                      <Backbone\n                        borderRadius='50%'\n                        height={100}\n                        width={100}\n                      />\n                      :\n                      <Picture\n                        alt={category?.name}\n                        borderRadius='50%'\n                        height='100%'\n                        onError={() => {\n                          setIsErrorImg(true)\n                        }}\n                        src={image}\n                        width='100%'\n                      />\n                    }\n                  </Link>\n                </Column>\n                <Link\n                  href={getCategoryUrl(category)}\n                  underline='none'\n                  wrapper={linkWrapper}\n                >\n                  <Row justifyContent='center' padding='9px 12px 0'>\n                    <Text\n                      clickable='pointer'\n                      color='black'\n                      fontSize='md'\n                      textAlign='center'\n                      truncate={20}\n                    >\n                      {category?.name}\n                    </Text>\n                  </Row>\n                </Link>\n              </Column>\n            )\n          })}\n        </Container>\n      </Column >\n    </Container >\n  )\n}","import React, { useState } from 'react'\nimport { AislesData } from '..'\nimport { AislesDesktop } from './AislesDesktop'\nimport { AislesMobile } from './AislesMobile'\nimport { BigScreen, SmallScreen } from '../../../../../helpers'\n\nexport interface DropDownAislesProps {\n  data: AislesData[];\n  isVisableBanner?: boolean;\n  isVisibleAislesAlvi?: boolean;\n  isVisibleDropDownAisles?: boolean;\n  isVisibleImageAlvi?: boolean;\n  linkWrapper?: React.FunctionComponent;\n  openAisles?: boolean;\n  site?: 'unimarc' | 'alvi';\n  statusAisles?: 'open' | 'close';\n  titleMobile?: string;\n  urlBanner?: string;\n  getCategoryUrl?: (category?: AislesData) => string;\n  onClickAisles?: () => void;\n  onClickCategory: () => void;\n  onHoverCategory?: (category?: AislesData) => void;\n}\n\nexport const DropDownAisles = ({\n  data,\n  isVisableBanner,\n  isVisibleAislesAlvi,\n  isVisibleDropDownAisles,\n  isVisibleImageAlvi = false,\n  linkWrapper,\n  openAisles,\n  site = 'unimarc',\n  statusAisles,\n  titleMobile,\n  urlBanner,\n  getCategoryUrl,\n  onClickAisles,\n  onClickCategory,\n  onHoverCategory\n}: DropDownAislesProps): React.ReactElement<DropDownAislesProps> => {\n  const [isHover, setIsHover] = useState(false)\n  const [subcategory, setSubcategory] = useState<AislesData>(null)\n  const customWidthContainer = isHover ? '1200' : '330'\n  const customWidthColumn = isHover ? '38' : '100'\n  const customMinHeight = '640px'\n\n  const hoverCategory = (category: AislesData) => {\n    if (!isHover) setIsHover(true)\n    if (JSON?.stringify(category) !== JSON?.stringify(subcategory)) {\n      if (onHoverCategory) onHoverCategory(category)\n      setSubcategory(category)\n    }\n  }\n\n  const propsAislesDesktop = {\n    customMinHeight,\n    customWidthColumn,\n    customWidthContainer,\n    data,\n    isHover,\n    isVisableBanner,\n    isVisibleAislesAlvi,\n    isVisibleDropDownAisles,\n    openAisles,\n    statusAisles,\n    subcategory,\n    urlBanner,\n    linkWrapper,\n    getCategoryUrl,\n    hoverCategory,\n    onClickCategory\n  }\n\n  const aislesMobileProps = {\n    data,\n    isVisibleImageAlvi,\n    site,\n    title: titleMobile,\n    linkWrapper,\n    getCategoryUrl,\n    onClickAisles,\n    onClickCategory\n  }\n\n  return (\n    <>\n      <BigScreen>\n        <AislesDesktop {...propsAislesDesktop} />\n      </BigScreen >\n\n      <SmallScreen>\n        <AislesMobile {...aislesMobileProps} />\n      </SmallScreen>\n    </>\n  )\n}","import { Column, Row } from '../../../../../layout'\n\ninterface IWrapperCategory {\n  children: React.ReactNode,\n  isVisibleAislesAlvi?: boolean,\n}\nexport const WrapperCategory = ({ children, isVisibleAislesAlvi }: IWrapperCategory) => {\n  return (\n    <>\n      {isVisibleAislesAlvi\n        ?\n        <Column>{children}</Column>\n        :\n        <Row isWrap>\n          {children}\n        </Row>\n      }\n    </>\n  )\n}\n\n","import { getGlobalStyle } from '../../../../../../helpers'\nimport styles from '../DropDownAisles.module.css'\n\nexport const classNameCategories = (isVisibleAislesAlvi: boolean): string => {\n  return isVisibleAislesAlvi ? styles.categoryRowAlvi : styles.categoryRow\n}\nexport const customWidthContent = (isVisibleAislesAlvi: boolean, customWidthColumn: string) => {\n  return isVisibleAislesAlvi ? '100' : customWidthColumn\n}\nexport const customScrollContent = (isVisibleAislesAlvi: boolean): string => {\n  return isVisibleAislesAlvi ? styles.scrollBarAlvi : styles.scrollBar\n}\nexport const customHeightContent = (isVisibleAislesAlvi: boolean, customMinHeight: string): string => {\n  return isVisibleAislesAlvi ? 'calc(100vh - 80px)' : customMinHeight\n}\nexport const rowCustomTopContent = (isVisibleAislesAlvi: boolean): string => {\n  return isVisibleAislesAlvi ? '31' : '28'\n}\nexport const customClassRowWrapperFunc = (isVisibleAislesAlvi: boolean, isHover: boolean): string => {\n  return isVisibleAislesAlvi && (isHover ? styles.rowWrapper : styles.rowWrapper_custom)\n}\nexport const customFontSizeTitle = (isVisibleAislesAlvi: boolean): string => {\n  return isVisibleAislesAlvi && getGlobalStyle('--font-size-3xl')\n}\nexport const customFontSizeTitleChild = (isVisibleAislesAlvi: boolean): string => {\n  return isVisibleAislesAlvi ? getGlobalStyle('--font-size-titles-base') : ''\n}\nexport const customScrollContentStatic = (isVisibleAislesAlvi: boolean): string => {\n  return isVisibleAislesAlvi ? styles.scrollBarAlviStatic : styles.scrollBar\n}\nexport const customClassCategory = (isVisibleAislesAlvi: boolean): string => {\n  return isVisibleAislesAlvi ? styles.linkAllCategoryAlvi : styles.linkAllCategory\n}\nexport const statusAisles = (isVisibleDropDownAisles: boolean): string => {\n  return isVisibleDropDownAisles ? styles.statusAislesOpen : styles.statusAislesClose\n}\nexport const customWidthAisles = (isOpenAisles: boolean, customWidthContainer: string): string => {\n  return isOpenAisles ? '300' : customWidthContainer\n}\nexport const customPadding = (isVisibleAislesAlvi: boolean): string => {\n  return isVisibleAislesAlvi ? '37px 0 20px' : '16px 0 20px'\n}","import React, { useEffect } from 'react'\nimport { Icons } from '../../../../assets/SvgComponents/SvgIcons'\nimport { Icon, Text } from '../../../atoms'\nimport { BigScreen, SmallScreen } from '../../../../helpers'\nimport styles from './DropDownAisles/DropDownAisles.module.css'\n\nimport {\n  Column,\n  Container,\n  Row,\n  Spacer\n} from '../../../layout'\nimport {\n  DropDownAisles,\n  DropDownAislesProps\n} from './DropDownAisles/DropDownAisles'\nimport { getGlobalStyle } from '../../../../helpers'\n\nexport interface AislesData {\n  children?: AislesData[];\n  image?: string;\n  img?: string;\n  fq?: string;\n  hasChildren: boolean;\n  id: number;\n  MetaTagDescription?: string;\n  name: string;\n  url: string;\n}\n\nexport interface AislesProps {\n  dropDownAislesProps: DropDownAislesProps;\n  iconAisles?: keyof (typeof Icons);\n  iconSizeCategoriesMobile?: number;\n  isVisibleAislesAlvi?: boolean;\n  isVisibleAislesIcon?: boolean;\n  isVisibleAislesIconBurger?: boolean;\n  isVisibleDropDownAisles?: boolean;\n  isVisibleImageAlvi?: boolean;\n  site?: 'unimarc' | 'alvi';\n  sizeLogo?: number;\n  status?: string;\n  statusAisles?: 'open' | 'close';\n  title?: string;\n  titleMobile?: string;\n  onClickAisles?: () => void;\n}\n\nexport const Aisles = ({\n  dropDownAislesProps,\n  iconAisles = 'Aisles',\n  iconSizeCategoriesMobile,\n  isVisibleAislesIcon = true,\n  isVisibleAislesIconBurger = false,\n  isVisibleDropDownAisles = false,\n  site = 'unimarc',\n  statusAisles,\n  title = 'Pasillos',\n  titleMobile = 'Nuestros pasillos',\n  onClickAisles\n}: AislesProps): React.ReactElement<AislesProps> => {\n  const unimarcSite = site === 'unimarc'\n  useEffect(() => {\n    document.body.style['overflow-y'] = isVisibleDropDownAisles ? 'hidden' : 'scroll'\n  }, [isVisibleDropDownAisles])\n  const openAisles = statusAisles === 'open'\n  const { isVisibleAislesAlvi } = dropDownAislesProps || {}\n  const sizeCategoriesIcon = isVisibleAislesAlvi ? iconSizeCategoriesMobile : 22\n  const fontWeight = unimarcSite ? 'regular' : 'semibold'\n\n  return (\n    <>\n      <BigScreen>\n        <Column customWidth='max-content'>\n          <Row alignItems='center' onClick={onClickAisles} >\n            <Column customWidth='max-content'>\n              {isVisibleAislesIconBurger &&\n                <Container\n                  clickable='pointer'\n                  customClassName={styles.BurgerMenu__container}\n                  customHeight='16px'\n                  margin='0 0 10px 0'\n                  minHeight='16px'\n                  width='21px'\n                >\n                  <Text customClassName={openAisles && styles.open} type='span'>\n                  </Text>\n                  <Text customClassName={openAisles && styles.open} type='span'>\n                  </Text>\n                  <Text customClassName={openAisles && styles.open} type='span'>\n                  </Text>\n                </Container>\n              }\n              {isVisibleAislesIcon &&\n                <Icon\n                  clickable='pointer'\n                  color={getGlobalStyle('--color-icons-white')}\n                  customSize={22}\n                  name={iconAisles}\n                />\n              }\n            </Column>\n            <Spacer.Vertical size={8} />\n            <Column customWidth='max-content'>\n              <Text\n                clickable='pointer'\n                color='white'\n                fontSize='base'\n                fontWeight={fontWeight}\n                underline='hover'\n              >\n                {title}\n              </Text>\n            </Column>\n          </Row>\n          {(isVisibleDropDownAisles && !isVisibleAislesAlvi) && <DropDownAisles {...dropDownAislesProps} />}\n          {isVisibleAislesAlvi &&\n            <DropDownAisles\n              {...dropDownAislesProps}\n              isVisibleDropDownAisles={isVisibleDropDownAisles}\n              openAisles={openAisles}\n              statusAisles={statusAisles}\n              titleMobile={titleMobile}\n            />\n          }\n        </Column>\n      </BigScreen>\n\n      <SmallScreen>\n        <>\n          <Column customWidth='20'>\n            <Icon\n              clickable='pointer'\n              color={getGlobalStyle('--color-icons-white')}\n              customSize={sizeCategoriesIcon}\n              name={iconAisles}\n              onClick={onClickAisles}\n              site={site}\n            />\n          </Column>\n          {isVisibleDropDownAisles && <DropDownAisles {...{ ...dropDownAislesProps, onClickAisles, site, titleMobile }} />}\n        </>\n      </SmallScreen>\n    </>\n  )\n}","import {\n  Icon,\n  Text,\n  Tooltip\n} from '../../../../atoms'\nimport { Icons } from '../../../../../assets/SvgComponents/SvgIcons'\nimport { BigScreen, SmallScreen } from '../../../../../helpers/mediaQueries'\nimport { getGlobalStyle } from '../../../../../helpers'\nimport { Column, Row } from '../../../../layout'\nimport styles from './Coupon.module.css'\n\nexport interface CouponProps {\n  couponIcon?: keyof (typeof Icons);\n  couponTooltipText?: string;\n  showCouponTooltip?: boolean;\n  site?: 'unimarc' | 'alvi';\n  text?: string;\n  onClickCoupon?: () => void;\n}\n\nexport const Coupon = ({\n  couponIcon = 'Coupon',\n  couponTooltipText = 'Nuevo',\n  showCouponTooltip = false,\n  site = 'unimarc',\n  text = 'Cupones',\n  onClickCoupon\n}: CouponProps): React.ReactElement<CouponProps> => {\n  const unimarcSite = site === 'unimarc'\n  const customSizeIcon = unimarcSite ? 26 : 28\n  const customSizeIconMovil = unimarcSite ? 26 : 24\n  \n  return (\n    <>\n      <BigScreen>\n        <Column \n          className={styles.couponIcon}\n          clickable='pointer'\n          customWidth='max-content'\n          onClick={onClickCoupon}\n        >\n          {showCouponTooltip && \n            <Row>\n              <Tooltip \n                arrow={true}\n                background={getGlobalStyle('--color-feedback-warning-light')}\n                bottom='8px'\n                boxShadow='0px 0px'\n                colorArrow={'warning-light'}\n                colorText='white'\n                padding='2px 2px'\n                position='relative'\n                sizeArrow='xs'\n                text={couponTooltipText}\n                textSize='xs'\n                textWeight='bold'\n                type='bottom'\n              />\n            </Row>\n          }\n          <Row justifyContent='center'>\n            <Icon\n              clickable='pointer'\n              color={getGlobalStyle('--color-icons-white')}\n              customSize={customSizeIcon}\n              name={couponIcon}\n            />\n          </Row>\n          <Row justifyContent='center'>\n            <Text\n              clickable='pointer'\n              color='white'\n              fontSize='xs'\n              fontWeight='semibold'\n              textAlign='center'\n            >\n              {text}\n            </Text>\n          </Row>\n        </Column>\n      </BigScreen>\n\n      <SmallScreen>\n        <Column \n          className={styles.couponIcon} \n          customWidth='max-content'\n          onClick={onClickCoupon}\n        >\n          {showCouponTooltip && \n            <Row>\n              <Tooltip \n                arrow={true}\n                background={getGlobalStyle('--color-feedback-warning-light')}\n                bottom='4px'\n                boxShadow='0px 0px'\n                colorArrow={'warning-light'}\n                colorText='white'\n                left='0'\n                padding='1px 4px'\n                position='relative'\n                sizeArrow='xs'\n                text={couponTooltipText}\n                textSize='xs'\n                textWeight='bold'\n                type='bottom'\n              />\n            </Row>\n          }\n          <Row justifyContent='center'>\n            <Icon\n              clickable='pointer'\n              color={getGlobalStyle('--color-icons-white')}\n              customSize={customSizeIconMovil}\n              name={couponIcon}\n            />\n          </Row>\n          <Row justifyContent='center'>\n            <Text\n              clickable='pointer'\n              color='white'\n              fontSize='xs'\n              fontWeight='bold'\n              textAlign='center'\n            >\n              {text}\n            </Text>\n          </Row>\n        </Column>\n      </SmallScreen>\n    </>\n  )\n}","import { getGlobalStyle } from '../../../../helpers'\nimport {\n  BigScreen,\n  SmallScreen\n} from '../../../../helpers/mediaQueries'\nimport {\n  Column,\n  Container,\n  Row,\n  Spacer\n} from '../../../layout'\nimport { CartIcon, CartIconProps } from '../../../molecules'\nimport { Coupon, CouponProps } from './Coupon'\n\nexport type Color = 'primary' | 'secondary' | 'gray' | 'inactive' | 'black' | 'white' | 'success' | 'error' | 'warning' | 'blue'\n\nexport interface CouponCartProps extends CouponProps, CartIconProps {\n  isVisibleCoupon?: boolean;\n}\n\nexport const CouponCart = ({\n  colorQuantity = 'primary',\n  couponIcon = 'Coupon',\n  isVisibleCoupon = true,\n  quantity,\n  quantityLoading,\n  showCouponTooltip,\n  site = 'unimarc',\n  onClickCoupon,\n  onClickCart\n}: CouponCartProps): React.ReactElement<CouponCartProps> => {\n  const unimarcSite = site === 'unimarc'\n  const customWidthRow = unimarcSite ? '20' : '10'\n  const customSizesQuantityContainer = unimarcSite ? '18px' : '22px'\n  const colorLoaderQuantity = unimarcSite ? getGlobalStyle('--color-primary-red-dark') : getGlobalStyle('--color-alvi-primary-blue')\n  const cartIconPaddingTopBigScreen = showCouponTooltip ? '16px' : '0px'\n  const cartIconPaddingBottomSmallScreen = showCouponTooltip ? '4px' : '10px'\n\n  return (\n    <>\n      <BigScreen>\n        <Row\n          alignItems='center'\n          customWidth={customWidthRow}\n          justifyContent='end'\n        >\n          {isVisibleCoupon &&\n            <Coupon\n              couponIcon={couponIcon}\n              onClickCoupon={onClickCoupon}\n              showCouponTooltip={showCouponTooltip}\n              site={site}\n            />\n          }\n          <Spacer.Vertical size={16} />\n          <Container maxWidth='35px' padding={`${cartIconPaddingTopBigScreen} 0 12px`} >\n            <CartIcon\n              colorLoaderQuantity={colorLoaderQuantity}\n              colorQuantity={colorQuantity}\n              customSizesQuantityContainer={customSizesQuantityContainer}\n              onClickCart={onClickCart}\n              quantity={quantity}\n              quantityLoading={quantityLoading}\n              site={site}\n            />\n          </Container>\n        </Row>\n      </BigScreen>\n\n      <SmallScreen>\n        <Column>\n          <Row alignItems='center' justifyContent='end'>\n            {isVisibleCoupon &&\n              <Coupon\n                couponIcon={couponIcon}\n                onClickCoupon={onClickCoupon}\n                showCouponTooltip={showCouponTooltip}\n                site={site}\n              />\n            }\n            <Spacer.Vertical size={8} />\n            <Container maxWidth='35px' padding={`0 0 ${cartIconPaddingBottomSmallScreen}`}>\n              <CartIcon\n                colorLoaderQuantity={colorLoaderQuantity}\n                colorQuantity={colorQuantity}\n                customSizesIcon={20}\n                customSizesQuantity={'2xs'}\n                customSizesQuantityContainer={'18px'}\n                onClickCart={onClickCart}\n                quantity={quantity}\n                quantityLoading={quantityLoading}\n                site={site}\n              />\n            </Container>\n          </Row>\n        </Column>\n      </SmallScreen>\n    </>\n  )\n}","import React from 'react'\nimport {\n  Aisles,\n  AislesProps,\n  CouponCart,\n  CouponCartProps,\n  LogoHeader,\n  MyProfile,\n  MyProfileProps,\n  StoreLocatorHeader,\n  StoreLocatorHeaderProps\n} from '.'\nimport { Icons } from '../../../assets/SvgComponents/SvgIcons'\nimport {\n  getGlobalStyle,\n  BigScreen,\n  SmallScreen\n} from '../../../helpers'\nimport { Link } from '../../atoms'\nimport {\n  Column,\n  Container,\n  Row,\n  Spacer\n} from '../../layout'\nimport { Search, SearchProps } from '../Search/Search'\nimport {\n  AccountTooltip,\n  AccountTooltipProps\n} from './AccountTooltip/AccountTooltip'\n\nexport interface HeaderProps\n  extends StoreLocatorHeaderProps,\n    MyProfileProps,\n    CouponCartProps {\n  accountTooltipProps?: AccountTooltipProps\n  aislesProps: AislesProps\n  background?: string\n  isAccountTooltipOpen?: boolean\n  isMobile?: boolean\n  sizeLogo?: number\n  sizeLogoMobile?: number\n  linkWrapper?: React.FunctionComponent;\n  linkOffers?: string\n  logo?: keyof typeof Icons\n  searchProps: SearchProps\n  validationStatus?: string\n  urlLogo?: string;\n}\n\nexport const LayoutHeader = ({\n  accountTooltipProps,\n  addressSelected,\n  aislesProps,\n  background = getGlobalStyle('--color-primary-red-header'),\n  colorQuantity = 'primary',\n  couponIcon = 'Coupon',\n  customBannerUrl,\n  iconStoreLocator,\n  isAccountTooltipOpen = false,\n  isLoggedIn = false,\n  isMobile = false,\n  isVisibleCoupon,\n  isVisibleModalLogout = false,\n  isVisibleMyProfile = true,\n  linkOffers = '/',\n  logo = 'LogoHeader',\n  quantity,\n  quantityLoading,\n  showCouponTooltip,\n  site = 'unimarc',\n  sizeLogo,\n  sizeLogoMobile,\n  timeTable,\n  userFirstName,\n  userShabitName,\n  smallScreenSLVisible = true,\n  searchProps: {\n    backgroundGradientIconSearch = getGlobalStyle('--color-primary-red'),\n    backgroundIconSearch = getGlobalStyle('--color-primary-red'),\n    backgroundSearch = getGlobalStyle('--color-base-transparent'),\n    borderSearch = `1px solid ${getGlobalStyle('--color-base-white')}`,\n    iconArrowSearch,\n    iconArrowSize,\n    iconSearch = 'SearchCart',\n    iconWidth = '15',\n    isVisibleDropDownSearch = false,\n    searchPlaceholder = '¿Qué productos necesitas hoy?',\n    ...searchProps\n  },\n  validationStatus,\n  linkWrapper,\n  urlLogo,\n  onClickCart,\n  onClickCloseLogoutMobile,\n  onClickCloseMyProfile,\n  onClickCoupon,\n  onClickGoToMyCoupons,\n  onClickGoToMyLists,\n  onClickGoToMyOrders,\n  onClickLogin,\n  onClickLogout,\n  onClickLogoutMobile,\n  onClickMyProfile,\n  onClickMyProfileBanner,\n  onClickStoreLocator\n}: HeaderProps): React.ReactElement<HeaderProps> => {\n  const couponCartProps = {\n    colorQuantity,\n    couponIcon,\n    isLoggedIn,\n    isVisibleCoupon,\n    quantity,\n    quantityLoading,\n    showCouponTooltip,\n    site,\n    onClickCart,\n    onClickCoupon,\n    onClickLogin,\n    onClickLogout\n  }\n  const myProfileProps : MyProfileProps = {\n    customBannerUrl,\n    isLoggedIn,\n    isVisibleModalLogout,\n    isVisibleMyProfile,\n    site,\n    userFirstName,\n    userShabitName,\n    onClickCloseLogoutMobile,\n    onClickCloseMyProfile,\n    onClickGoToMyCoupons,\n    onClickGoToMyLists,\n    onClickGoToMyOrders,\n    onClickLogin,\n    onClickLogout,\n    onClickLogoutMobile,\n    onClickMyProfile,\n    onClickMyProfileBanner\n  }\n\n  const storeLocatorHeaderProps = {\n    addressSelected,\n    iconStoreLocator,\n    isLoggedIn,\n    isMobile,\n    onClickStoreLocator,\n    site,\n    smallScreenSLVisible,\n    timeTable\n  }\n  const siteUnimarc: boolean = site === 'unimarc'\n  const fontWeight = siteUnimarc ? 'regular' : 'semibold'\n  const maxHeightHeaderMovil: string = siteUnimarc ? 'initial' : '172px'\n  const maxHeightSearch: string = siteUnimarc ? 'initial' : '32px'\n  const maxHeightSearchMovil: string = !siteUnimarc && '35px'\n  const maxWidthHeader: string = siteUnimarc ? '1440px' : '1280px'\n  const maxWidthSearch: string = siteUnimarc ? '600px' : '402px'\n  const maxWidthSearchMovil: string = !siteUnimarc && '345'\n\n  return (\n    <>\n      <Container\n        background={background}\n        justifyContent='center'\n        position='sticky'\n        tagName='header'\n        zIndex={getGlobalStyle('--z-index-10')}\n      >\n        <BigScreen>\n          <Column\n            customWidth='90'\n            justifyContent='center'\n            maxWidth={maxWidthHeader}\n            minHeight='79px'\n          >\n            <Row alignItems='center' justifyContent='around'>\n              {/* logo */}\n              <Link\n                href={urlLogo}\n                label='Home'\n                wrapper={linkWrapper}\n              >\n                <LogoHeader\n                  logo={logo}\n                  sizeLogo={sizeLogo}\n                />\n              </Link>\n              <Row customWidth='max-content'>\n                <Spacer.Vertical size={24} />\n              </Row>\n\n              {/* categories */}\n              <Aisles {...aislesProps} site={site} />\n              <Column customWidth='max-content'>\n                <Spacer.Vertical size={28} />\n              </Column>\n\n              {/* offers */}\n              {siteUnimarc && (\n                <Column customWidth='max-content'>\n                  <Link\n                    color={getGlobalStyle('--color-text-white')}\n                    fontSize='base'\n                    fontWeight={fontWeight}\n                    href={linkOffers}\n                    label='Ofertas'\n                    underline='hover'\n                    wrapper={linkWrapper}\n                  />\n                </Column>\n              )}\n\n              <Column customWidth='max-content'>\n                <Spacer.Vertical size={24} />\n              </Column>\n\n              <Column maxWidth={maxWidthSearch} minHeight={maxHeightSearch}>\n                {/* search */}\n                <Search\n                  backgroundGradientIconSearch={backgroundGradientIconSearch}\n                  backgroundIconSearch={backgroundIconSearch}\n                  backgroundSearch={backgroundSearch}\n                  borderSearch={borderSearch}\n                  iconSearch={iconSearch}\n                  iconWidth={iconWidth}\n                  isLoggedIn={isLoggedIn}\n                  isVisibleDropDownSearch={isVisibleDropDownSearch}\n                  linkWrapper={linkWrapper}\n                  searchPlaceholder={searchPlaceholder}\n                  site={site}\n                  validationStatus={validationStatus}\n                  {...searchProps}\n                />\n              </Column>\n\n              <Column customWidth='max-content'>\n                <Spacer.Vertical size={16} />\n              </Column>\n\n              <StoreLocatorHeader {...storeLocatorHeaderProps} />\n\n              <Row customWidth='max-content'>\n                <Spacer.Vertical size={8} />\n              </Row>\n\n              <Container\n                alignItems='center'\n                justifyContent='center'\n                position='relative'\n                width='fit-content'\n              >\n                {/* my profile dropdown */}\n                <MyProfile {...myProfileProps} />\n\n                {isAccountTooltipOpen && (\n                  <AccountTooltip {...accountTooltipProps} />\n                )}\n              </Container>\n\n              <Row customWidth='max-content'>\n                <Spacer.Vertical size={32} />\n              </Row>\n\n              {/* icon of coupons and minicart */}\n              <CouponCart {...couponCartProps} />\n            </Row>\n          </Column>\n        </BigScreen>\n\n        <SmallScreen>\n          <Column customWidth='90' maxHeight={maxHeightHeaderMovil}>\n            <Spacer.Horizontal size={12} />\n            <Column>\n              <Row alignItems='center' justifyContent='between'>\n                {/* categories */}\n                <Aisles {...aislesProps} site={site} />\n                <Spacer.Vertical size={4} />\n                {/* logo */}\n                <Row>\n                  <Link\n                    href={urlLogo}\n                    label='Logo Home'\n                    wrapper={linkWrapper}\n                  >\n                    <LogoHeader\n                      logo={logo}\n                      sizeLogoMobile={sizeLogoMobile}\n                    />\n                  </Link>\n                </Row>\n                <Row\n                  alignItems='center'\n                  justifyContent='end'\n                  maxWidth='300px'\n                >\n                  <Container\n                    alignItems='center'\n                    justifyContent='center'\n                    position='relative'\n                    width='fit-content'\n                  >\n                    {/* my profile dropdown */}\n                    <MyProfile {...myProfileProps} />\n                    {isAccountTooltipOpen && (\n                      <AccountTooltip {...accountTooltipProps} />\n                    )}\n                  </Container>\n                  <Spacer.Vertical size={16} />\n\n                  {/* icon of coupons and minicart */}\n                  <CouponCart {...couponCartProps} />\n                </Row>\n              </Row>\n              <Spacer.Horizontal size={8} />\n              {/* search */}\n              <Column\n                height={maxHeightSearch}\n                maxHeight={maxHeightSearchMovil}\n                maxWidth={maxWidthSearchMovil}\n              >\n                <Search\n                  backgroundGradientIconSearch={backgroundGradientIconSearch}\n                  backgroundIconSearch={backgroundIconSearch}\n                  backgroundSearch={backgroundSearch}\n                  borderSearch={borderSearch}\n                  iconArrowSearch={iconArrowSearch}\n                  iconArrowSize={iconArrowSize}\n                  iconSearch={iconSearch}\n                  iconWidth={iconWidth}\n                  isLoggedIn={isLoggedIn}\n                  isMobile={isMobile}\n                  isVisibleDropDownSearch={isVisibleDropDownSearch}\n                  linkWrapper={linkWrapper}\n                  searchPlaceholder={searchPlaceholder}\n                  site={site}\n                  sizeLogoMobile={sizeLogoMobile}\n                  validationStatus={validationStatus}\n                  {...searchProps}\n                />\n              </Column>\n            </Column>\n            <Spacer.Horizontal size={12} />\n          </Column>\n        </SmallScreen>\n      </Container>\n      <SmallScreen>\n        <StoreLocatorHeader {...storeLocatorHeaderProps} />\n      </SmallScreen>\n    </>\n  )\n}\n\nfunction headerPropsAreEqual(prevState, nextState) {\n  return prevState.aislesProps === nextState.aislesProps\n}\n\nexport const Header = React.memo(LayoutHeader, headerPropsAreEqual)\n","import React from 'react'\nimport { Icons } from '../../../../assets/SvgComponents/SvgIcons'\nimport { Icon } from '../../../atoms'\nimport {\n  BigScreen,\n  SmallScreen\n} from '../../../../helpers/mediaQueries'\nimport { Column } from '../../../layout'\nimport { getGlobalStyle } from '../../../../helpers'\n\ninterface LogoProps {\n  logo?: keyof (typeof Icons);\n  onClickLogo?: () => void;\n  sizeLogo?: number;\n  sizeLogoMobile?: number;\n}\n\nexport const LogoHeader = ({\n  logo,\n  sizeLogo = 150,\n  sizeLogoMobile = 107,\n  onClickLogo\n}: LogoProps): React.ReactElement<LogoProps> => {\n  return (\n    <>\n      <BigScreen>\n        <Column customWidth='max-content'>\n          <Icon\n            clickable='pointer'\n            color={getGlobalStyle('--color-icons-white')}\n            customSize={sizeLogo}\n            name={logo}\n            onClick={onClickLogo}\n          />\n        </Column>\n      </BigScreen>\n\n      <SmallScreen>\n        <Column>\n          <Icon\n            clickable='pointer'\n            color={getGlobalStyle('--color-icons-white')}\n            customSize={sizeLogoMobile}\n            name={logo}\n            onClick={onClickLogo}\n          />\n        </Column>\n      </SmallScreen>\n    </>\n  )\n}","import React from 'react'\nimport { Container, Row } from '../../../../layout'\nimport { BigScreen, SmallScreen } from '../../../../../helpers/mediaQueries'\nimport { Site } from '../../../../../shared/interfaces/Site'\nimport { MyProfileContent } from '../MyProfileContent'\nimport { ShabitName } from '../../../BanefitsAlvi/BenefitsAlvi'\nimport classNames from 'classnames'\nimport styles from '../myProfile.module.css'\n\nexport interface DropDownMyProfileProps {\n  customBannerUrl?: string\n  customClassName?: string;\n  isVisibleModalLogout?: boolean;\n  isVisibleMyProfile?: boolean;\n  site?: Site\n  userFirstName?: string\n  userShabitName?: ShabitName\n  onClickCloseLogoutMobile?: () => void;\n  onClickCloseMyProfile?: () => void;\n  onClickGoToMyCards?: () => void;\n  onClickGoToMyCoupons?: () => void;\n  onClickGoToMyLists?: () => void;\n  onClickGoToMyOrders?: () => void;\n  onClickLogout?: () => void;\n  onClickLogoutMobile?: () => void;\n  onClickBanner?: () => void\n}\n\nexport const DropDownMyProfile = ({\n  customBannerUrl,\n  customClassName,\n  isVisibleModalLogout,\n  isVisibleMyProfile,\n  site,\n  userFirstName,\n  userShabitName,\n  onClickCloseLogoutMobile,\n  onClickCloseMyProfile,\n  onClickGoToMyCards,\n  onClickGoToMyCoupons,\n  onClickGoToMyLists,\n  onClickGoToMyOrders,\n  onClickLogout,\n  onClickLogoutMobile,\n  onClickBanner\n}: DropDownMyProfileProps): React.ReactElement<DropDownMyProfileProps> => {\n\n  const myProfileContentProps: DropDownMyProfileProps = {\n    userFirstName,\n    customBannerUrl,\n    userShabitName,\n    onClickCloseMyProfile,\n    onClickGoToMyCards,\n    onClickGoToMyCoupons,\n    onClickGoToMyLists,\n    onClickGoToMyOrders,\n    onClickLogout,\n    onClickLogoutMobile,\n    onClickCloseLogoutMobile,\n    onClickBanner,\n    isVisibleMyProfile,\n    isVisibleModalLogout,\n    site\n  }\n\n  return (\n    <>\n      <BigScreen>\n        <Container\n          absoluteDefault='topRight'\n          customClassName={classNames(styles.dropDownMyProfile, customClassName)}\n          padding='50px 0 0'\n          position='absolute'\n        >\n          <Row customClassName={styles.arrowBox} position='relative' />\n          <MyProfileContent padding='12px' {...myProfileContentProps} />\n        </Container>\n      </BigScreen>\n\n      <SmallScreen>\n        <MyProfileContent {...myProfileContentProps} />\n      </SmallScreen>\n    </>\n  )\n}","import React from 'react'\nimport { Icon, Text } from '../../../atoms'\nimport {\n  Column,\n  Container,\n  Row,\n  Spacer\n} from '../../../layout'\nimport { Icons } from '../../../../assets/SvgComponents/SvgIcons'\nimport { DropDownMyProfile, DropDownMyProfileProps } from './DropDownMyProfile'\nimport { Site } from '../../../../shared/interfaces/Site'\nimport { BigScreen, SmallScreen } from '../../../../helpers/mediaQueries'\nimport { getGlobalStyle } from '../../../../helpers'\nimport { ShabitName } from '../../BanefitsAlvi/BenefitsAlvi'\n\nexport interface MyProfileProps {\n  customBannerUrl?: string\n  icon?: keyof (typeof Icons);\n  isVisibleMyProfile?: boolean;\n  isLoggedIn?: boolean;\n  isVisibleModalLogout?: boolean;\n  userFirstName?: string;\n  site?: Site;\n  userShabitName?: ShabitName\n  onClickMyProfile?: () => void;\n  onClickLogout?: () => void;\n  onClickGoToMyCoupons?: () => void;\n  onClickGoToMyLists?: () => void;\n  onClickGoToMyOrders?: () => void;\n  onClickCloseMyProfile?: () => void;\n  onClickLogoutMobile?: () => void;\n  onClickCloseLogoutMobile?: () => void;\n  onClickLogin?: () => void;\n  onClickLogo?: () => void;\n  onClickMyProfileBanner?: () => void;\n}\n\nexport const MyProfile = ({\n  customBannerUrl,\n  icon = 'User',\n  isLoggedIn,\n  isVisibleModalLogout = false,\n  isVisibleMyProfile = false,\n  site = 'unimarc',\n  userFirstName,\n  userShabitName,\n  onClickCloseLogoutMobile,\n  onClickCloseMyProfile,\n  onClickGoToMyCoupons,\n  onClickGoToMyLists,\n  onClickGoToMyOrders,\n  onClickLogin,\n  onClickLogout,\n  onClickLogoutMobile,\n  onClickMyProfile,\n  onClickMyProfileBanner\n}: MyProfileProps): React.ReactElement<MyProfileProps> => {\n  const unimarcSite = site === 'unimarc'\n  const customSize = unimarcSite ? 26 : 24\n  const sizeLogin = isLoggedIn ? 'base' : 'md'\n  const customSizeLogin = unimarcSite ? 'base' : sizeLogin\n  const nameFontWeight = unimarcSite ? 'regular' : 'semibold'\n  const sizeIconDropdown = unimarcSite ? 14 : 11\n  const customWidthContainer = unimarcSite ? 'max-content' : '100'\n  const justifyContainer = unimarcSite ? 'start' : 'center'\n\n  const dropdownMyProfileProps : DropDownMyProfileProps = {\n    customBannerUrl,\n    site,\n    userFirstName,\n    userShabitName,\n    onClickCloseLogoutMobile,\n    onClickCloseMyProfile,\n    onClickGoToMyCoupons,\n    onClickGoToMyLists,\n    onClickGoToMyOrders,\n    onClickLogout,\n    onClickLogoutMobile,\n    onClickBanner: onClickMyProfileBanner\n  }\n\n  return (\n    <>\n      <BigScreen>\n        <Container customWidth='max-content'>\n          <Row\n            alignItems='center'\n            clickable='pointer'\n            justifyContent='end'\n          >\n            <Container>\n              <Icon\n                clickable='pointer'\n                color={getGlobalStyle('--color-icons-white')}\n                customSize={customSize}\n                name={icon}\n                onClick={isLoggedIn ? onClickMyProfile : onClickLogin}\n                site={site}\n              />\n            </Container>\n            <Spacer.Vertical size={8} />\n\n            {isLoggedIn &&\n              <Column position='relative'>\n                <Row\n                  alignItems='center'\n                  customWidth='max-content'\n                  onClick={onClickMyProfile}\n                >\n                  <Text\n                    clickable='pointer'\n                    color='white'\n                    fontSize={customSizeLogin}\n                    fontWeight={nameFontWeight}\n                    underline='hover'\n                  >\n                    {userFirstName}\n                  </Text>\n                  <Spacer.Vertical size={8} />\n                  <Icon\n                    clickable='pointer'\n                    color={getGlobalStyle('--color-icons-white')}\n                    customSize={sizeIconDropdown}\n                    name='DropDownClose'\n                    site={site}\n                  />\n                </Row>\n                {isVisibleMyProfile &&\n                  <DropDownMyProfile {...dropdownMyProfileProps} />\n                }\n              </Column>\n            }\n\n            {!isLoggedIn &&\n              <Row\n                alignItems='center'\n                maxWidth='max-content'\n                onClick={onClickLogin}\n              >\n                <Text\n                  clickable='pointer'\n                  color='white'\n                  fontSize={customSizeLogin}\n                  underline='hover'\n                >\n                  Ingresar\n                </Text>\n                <Spacer.Vertical size={16} />\n              </Row>\n            }\n          </Row>\n        </Container>\n      </BigScreen>\n\n      <SmallScreen>\n        <Container>\n          {isLoggedIn &&\n            <Column>\n              <Row\n                customWidth={customWidthContainer}\n                justifyContent={justifyContainer}\n                onClick={onClickMyProfile}\n              >\n                <Text\n                  clickable='pointer'\n                  color='white'\n                  fontSize={customSizeLogin}\n                  truncate={10}\n                  underline='always'\n                >\n                  {userFirstName}\n                </Text>\n              </Row>\n              <DropDownMyProfile\n                isVisibleModalLogout={isVisibleModalLogout}\n                isVisibleMyProfile={isVisibleMyProfile}\n                {...dropdownMyProfileProps}\n              />\n            </Column>\n          }\n          {!isLoggedIn &&\n            <Column>\n              <Row customWidth='max-content' onClick={onClickLogin}>\n                <Text\n                  clickable='pointer'\n                  color='white'\n                  fontSize={customSizeLogin}\n                  underline='always'\n                >\n                  Ingresar\n                </Text>\n              </Row>\n            </Column>\n          }\n        </Container>\n      </SmallScreen>\n    </>\n  )\n}\n","export * from './Aisles'\nexport * from './CouponCart'\nexport * from './Logo'\nexport * from './MyProfile'\nexport * from './StoreLocatorHeader'\n\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".j0FjAQYVgp0CDYiRZUe1 {\\n  max-width: 0px;\\n  min-width: 280px;\\n  position: absolute;\\n  padding: 16px;\\n  top: 67px;\\n  \\n  background: linear-gradient(90deg, #FFE59C 1.92%, #EEC656 100%);\\n  box-shadow: var(--box-shadow-2xs);\\n  border-radius: 12px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./stories/organisms/Header/AccountTooltip/AccountTooltip.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,cAAc;EACd,gBAAgB;EAChB,kBAAkB;EAClB,aAAa;EACb,SAAS;;EAET,+DAA+D;EAC/D,iCAAiC;EACjC,mBAAmB;AACrB\",\"sourcesContent\":[\".tooltip {\\n  max-width: 0px;\\n  min-width: 280px;\\n  position: absolute;\\n  padding: 16px;\\n  top: 67px;\\n  \\n  background: linear-gradient(90deg, #FFE59C 1.92%, #EEC656 100%);\\n  box-shadow: var(--box-shadow-2xs);\\n  border-radius: 12px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"tooltip\": \"j0FjAQYVgp0CDYiRZUe1\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".L7jORKjCWNalvuALiYfK:after {\\n  border-bottom-color: var(--color-alvi-neutral-gray-white);\\n  border-left: 15px solid transparent;\\n  border-right: 15px solid transparent;\\n  border-width: 20px;\\n  bottom: 100%;\\n  content: \\\"\\\";\\n  height: 0;\\n  left: 1.3rem;\\n  pointer-events: none;\\n  position: absolute;\\n  width: 0;\\n}\\n\\n.u5ofxy7dcaYm1MZVgSjg:hover {\\n  background-color: var(--color-alvi-neutral-gray);\\n}\\n\\n.u5ofxy7dcaYm1MZVgSjg svg {\\n  display: none;\\n}\\n\\n.u5ofxy7dcaYm1MZVgSjg:hover svg {\\n  display: block;\\n}\\n\\n.hRxrJ2PDY6hUyiBlnJwT {\\n  overflow-y: auto;\\n}\\n\\n.hRxrJ2PDY6hUyiBlnJwT::-webkit-scrollbar {\\n  width: 7px;\\n}\\n\\n.hRxrJ2PDY6hUyiBlnJwT::-webkit-scrollbar-thumb {\\n  background-color: var(--color-neutral-dusty-gray);\\n  border-radius: var(--border-radius-sm);\\n}\\n\\n.nqXJoVIQFEOLTXhrjRMS {\\n  color: var(--color-icons-gray);\\n}\\n\\n.vcYhAK2eCdwoO8Kot2E1 {\\n  color: var(--color-neutral-black);\\n}\\n\\n.DHt0O4rys7m4zHlmw4Ea {\\n  color: var(--color-neutral-black);\\n}\\n\\n.nqXJoVIQFEOLTXhrjRMS:hover,\\n.vcYhAK2eCdwoO8Kot2E1:hover {\\n  color: var(--color-brand-lust);\\n  font-weight: var(--font-weight-normal);\\n  text-decoration: underline;\\n}\\n\\n.DHt0O4rys7m4zHlmw4Ea:hover {\\n  color: var(--color-alvi-primary-blue3) !important;\\n  font-weight: var(--font-weight-normal);\\n  text-decoration: underline;\\n}\\n\\n.JiMOmas35SillsuLsaFL:hover {\\n  color: var(--color-alvi-text-primary) !important;\\n  text-decoration: underline;\\n}\\n\\n._0qm6hTThWRlUzzgFRy76 {\\n  white-space: nowrap;\\n}\\n\\n.XblakCR_xKIGBV8HBJKd {\\n  left: -1.5rem;\\n}\\n\\n/* Aisles Alvi */\\n\\n.zsK4Gx2Vgzx3FcqilYqL {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0 5px 0 auto;\\n}\\n\\n.zsK4Gx2Vgzx3FcqilYqL span {\\n  background-color: var(--color-icons-white);\\n  border-radius: 5px;\\n  height: 2.3px;\\n  margin: 3px 0;\\n  max-height: 2.3px;\\n  min-height: 2.3px;\\n  transition: all 0.3s ease-out;\\n  width: 21px;\\n}\\n\\n.C2HEb9BfFZYohbpi8A3o:nth-child(1) {\\n  transform: rotate(47deg) translateY(5.3px) translateX(5px);\\n  width: 22px;\\n}\\n\\n.C2HEb9BfFZYohbpi8A3o:nth-child(2) {\\n  opacity: 0;\\n}\\n\\n.C2HEb9BfFZYohbpi8A3o:nth-child(3) {\\n  transform: rotate(-48deg) translateY(-6px) translateX(7px);\\n}\\n\\n/* Close Aisles */\\n.BsVaKmZbOo2HQomJkPqZ {\\n  border-radius: unset;\\n  display: none;\\n  max-height: 100vh;\\n  position: fixed;\\n  transform: translateX(-100%);\\n}\\n\\n.mrFHsU1DmsDLekCwkbi_ {\\n  animation-fill-mode: forwards;\\n  top: 48px;\\n  transform: translateX(0%);\\n  transition: 0.5s ease;\\n}\\n\\n.drpblHphDw7tQGnxImiP {\\n  animation-fill-mode: forwards;\\n  bottom: 0;\\n  left: 0;\\n  opacity: 0;\\n  position: fixed !important;\\n  top: 48px;\\n  transform: translateX(-170%);\\n  transition: 0.5s ease;\\n}\\n\\n.Q7DskqZFho651FyTgmjl {\\n  overflow-y: auto;\\n  width: 280px !important;\\n}\\n\\n.VJcCP7D9hXtk8odoFHVh {\\n  background-color: var(--color-base-white);\\n  width: 305px !important;\\n}\\n\\n.BbjiJJaBhmwzFVAsX9Bn {\\n  overflow-y: auto;\\n  width: 500px !important;\\n  min-width: 500px;\\n}\\n\\n.BbjiJJaBhmwzFVAsX9Bn::-webkit-scrollbar {\\n  width: 7px;\\n}\\n\\n.BbjiJJaBhmwzFVAsX9Bn::-webkit-scrollbar-thumb {\\n  background-color: var(--color-neutral-dusty-gray);\\n  border-radius: var(--border-radius-sm);\\n}\\n\\n.JwCZHytsCfbxkHQ6Ta3Q {\\n  overflow-y: auto;\\n  width: 305px !important;\\n  min-width: 305px !important;\\n}\\n\\n.JwCZHytsCfbxkHQ6Ta3Q::-webkit-scrollbar {\\n  width: 7px;\\n}\\n\\n.JwCZHytsCfbxkHQ6Ta3Q::-webkit-scrollbar-thumb {\\n  background-color: var(--color-neutral-dusty-gray);\\n  border-radius: var(--border-radius-sm);\\n}\\n\\n.UwIJu1SahIrQURKoNrPQ {\\n  color: var(--color-alvi-neutral-white);\\n}\\n\\n.UwIJu1SahIrQURKoNrPQ:hover {\\n  border-radius: 0px 20px 20px 0px !important;\\n  background: var(--color-alvi-primary-blue-header-gradient);\\n}\\n\\n.UwIJu1SahIrQURKoNrPQ:hover>p {\\n  color: var(--color-alvi-neutral-white) !important;\\n}\\n\\n.UwIJu1SahIrQURKoNrPQ svg {\\n  display: none;\\n}\\n\\n.UwIJu1SahIrQURKoNrPQ:hover svg {\\n  display: block;\\n}\\n\\n.W4CI9BWBJksFHhCca8s_ {\\n  color: var(--color-text-gray-light);\\n  font-size: var(--font-size-base);\\n}\\n\\n.W4CI9BWBJksFHhCca8s_:hover {\\n  color: var(--color-alvi-primary-blue);\\n  font-weight: var(--font-weight-normal);\\n  text-decoration: underline;\\n}\\n\\n.Jnz6zOWQifuPDs_rv2QM {\\n  box-shadow: 0px 4px 8px rgb(27 33 56 / 6%);\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./stories/organisms/Header/Aisles/DropDownAisles/DropDownAisles.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,yDAAyD;EACzD,mCAAmC;EACnC,oCAAoC;EACpC,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,SAAS;EACT,YAAY;EACZ,oBAAoB;EACpB,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,gDAAgD;AAClD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,iDAAiD;EACjD,sCAAsC;AACxC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;;EAEE,8BAA8B;EAC9B,sCAAsC;EACtC,0BAA0B;AAC5B;;AAEA;EACE,iDAAiD;EACjD,sCAAsC;EACtC,0BAA0B;AAC5B;;AAEA;EACE,gDAAgD;EAChD,0BAA0B;AAC5B;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA,gBAAgB;;AAEhB;EACE,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,oBAAoB;AACtB;;AAEA;EACE,0CAA0C;EAC1C,kBAAkB;EAClB,aAAa;EACb,aAAa;EACb,iBAAiB;EACjB,iBAAiB;EACjB,6BAA6B;EAC7B,WAAW;AACb;;AAEA;EACE,0DAA0D;EAC1D,WAAW;AACb;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,0DAA0D;AAC5D;;AAEA,iBAAiB;AACjB;EACE,oBAAoB;EACpB,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,4BAA4B;AAC9B;;AAEA;EACE,6BAA6B;EAC7B,SAAS;EACT,yBAAyB;EACzB,qBAAqB;AACvB;;AAEA;EACE,6BAA6B;EAC7B,SAAS;EACT,OAAO;EACP,UAAU;EACV,0BAA0B;EAC1B,SAAS;EACT,4BAA4B;EAC5B,qBAAqB;AACvB;;AAEA;EACE,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,yCAAyC;EACzC,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;EAChB,uBAAuB;EACvB,gBAAgB;AAClB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,iDAAiD;EACjD,sCAAsC;AACxC;;AAEA;EACE,gBAAgB;EAChB,uBAAuB;EACvB,2BAA2B;AAC7B;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,iDAAiD;EACjD,sCAAsC;AACxC;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,2CAA2C;EAC3C,0DAA0D;AAC5D;;AAEA;EACE,iDAAiD;AACnD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,mCAAmC;EACnC,gCAAgC;AAClC;;AAEA;EACE,qCAAqC;EACrC,sCAAsC;EACtC,0BAA0B;AAC5B;;AAEA;EACE,0CAA0C;AAC5C\",\"sourcesContent\":[\".arrowBox:after {\\n  border-bottom-color: var(--color-alvi-neutral-gray-white);\\n  border-left: 15px solid transparent;\\n  border-right: 15px solid transparent;\\n  border-width: 20px;\\n  bottom: 100%;\\n  content: \\\"\\\";\\n  height: 0;\\n  left: 1.3rem;\\n  pointer-events: none;\\n  position: absolute;\\n  width: 0;\\n}\\n\\n.categoryRow:hover {\\n  background-color: var(--color-alvi-neutral-gray);\\n}\\n\\n.categoryRow svg {\\n  display: none;\\n}\\n\\n.categoryRow:hover svg {\\n  display: block;\\n}\\n\\n.scrollBar {\\n  overflow-y: auto;\\n}\\n\\n.scrollBar::-webkit-scrollbar {\\n  width: 7px;\\n}\\n\\n.scrollBar::-webkit-scrollbar-thumb {\\n  background-color: var(--color-neutral-dusty-gray);\\n  border-radius: var(--border-radius-sm);\\n}\\n\\n.linkCategory {\\n  color: var(--color-icons-gray);\\n}\\n\\n.linkAllCategory {\\n  color: var(--color-neutral-black);\\n}\\n\\n.linkAllCategoryAlvi {\\n  color: var(--color-neutral-black);\\n}\\n\\n.linkCategory:hover,\\n.linkAllCategory:hover {\\n  color: var(--color-brand-lust);\\n  font-weight: var(--font-weight-normal);\\n  text-decoration: underline;\\n}\\n\\n.linkAllCategoryAlvi:hover {\\n  color: var(--color-alvi-primary-blue3) !important;\\n  font-weight: var(--font-weight-normal);\\n  text-decoration: underline;\\n}\\n\\n.subCategoryAlvi:hover {\\n  color: var(--color-alvi-text-primary) !important;\\n  text-decoration: underline;\\n}\\n\\n.aislesMobileTitle {\\n  white-space: nowrap;\\n}\\n\\n.aislesContainer {\\n  left: -1.5rem;\\n}\\n\\n/* Aisles Alvi */\\n\\n.BurgerMenu__container {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0 5px 0 auto;\\n}\\n\\n.BurgerMenu__container span {\\n  background-color: var(--color-icons-white);\\n  border-radius: 5px;\\n  height: 2.3px;\\n  margin: 3px 0;\\n  max-height: 2.3px;\\n  min-height: 2.3px;\\n  transition: all 0.3s ease-out;\\n  width: 21px;\\n}\\n\\n.open:nth-child(1) {\\n  transform: rotate(47deg) translateY(5.3px) translateX(5px);\\n  width: 22px;\\n}\\n\\n.open:nth-child(2) {\\n  opacity: 0;\\n}\\n\\n.open:nth-child(3) {\\n  transform: rotate(-48deg) translateY(-6px) translateX(7px);\\n}\\n\\n/* Close Aisles */\\n.closeAisles {\\n  border-radius: unset;\\n  display: none;\\n  max-height: 100vh;\\n  position: fixed;\\n  transform: translateX(-100%);\\n}\\n\\n.statusAislesOpen {\\n  animation-fill-mode: forwards;\\n  top: 48px;\\n  transform: translateX(0%);\\n  transition: 0.5s ease;\\n}\\n\\n.statusAislesClose {\\n  animation-fill-mode: forwards;\\n  bottom: 0;\\n  left: 0;\\n  opacity: 0;\\n  position: fixed !important;\\n  top: 48px;\\n  transform: translateX(-170%);\\n  transition: 0.5s ease;\\n}\\n\\n.scrollAlvi {\\n  overflow-y: auto;\\n  width: 280px !important;\\n}\\n\\n.rowWrapper_custom {\\n  background-color: var(--color-base-white);\\n  width: 305px !important;\\n}\\n\\n.scrollBarAlvi {\\n  overflow-y: auto;\\n  width: 500px !important;\\n  min-width: 500px;\\n}\\n\\n.scrollBarAlvi::-webkit-scrollbar {\\n  width: 7px;\\n}\\n\\n.scrollBarAlvi::-webkit-scrollbar-thumb {\\n  background-color: var(--color-neutral-dusty-gray);\\n  border-radius: var(--border-radius-sm);\\n}\\n\\n.scrollBarAlviStatic {\\n  overflow-y: auto;\\n  width: 305px !important;\\n  min-width: 305px !important;\\n}\\n\\n.scrollBarAlviStatic::-webkit-scrollbar {\\n  width: 7px;\\n}\\n\\n.scrollBarAlviStatic::-webkit-scrollbar-thumb {\\n  background-color: var(--color-neutral-dusty-gray);\\n  border-radius: var(--border-radius-sm);\\n}\\n\\n.categoryRowAlvi {\\n  color: var(--color-alvi-neutral-white);\\n}\\n\\n.categoryRowAlvi:hover {\\n  border-radius: 0px 20px 20px 0px !important;\\n  background: var(--color-alvi-primary-blue-header-gradient);\\n}\\n\\n.categoryRowAlvi:hover>p {\\n  color: var(--color-alvi-neutral-white) !important;\\n}\\n\\n.categoryRowAlvi svg {\\n  display: none;\\n}\\n\\n.categoryRowAlvi:hover svg {\\n  display: block;\\n}\\n\\n.linkCategoryAlvi {\\n  color: var(--color-text-gray-light);\\n  font-size: var(--font-size-base);\\n}\\n\\n.linkCategoryAlvi:hover {\\n  color: var(--color-alvi-primary-blue);\\n  font-weight: var(--font-weight-normal);\\n  text-decoration: underline;\\n}\\n\\n.headerContainerAlvi {\\n  box-shadow: 0px 4px 8px rgb(27 33 56 / 6%);\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"arrowBox\": \"L7jORKjCWNalvuALiYfK\",\n\t\"categoryRow\": \"u5ofxy7dcaYm1MZVgSjg\",\n\t\"scrollBar\": \"hRxrJ2PDY6hUyiBlnJwT\",\n\t\"linkCategory\": \"nqXJoVIQFEOLTXhrjRMS\",\n\t\"linkAllCategory\": \"vcYhAK2eCdwoO8Kot2E1\",\n\t\"linkAllCategoryAlvi\": \"DHt0O4rys7m4zHlmw4Ea\",\n\t\"subCategoryAlvi\": \"JiMOmas35SillsuLsaFL\",\n\t\"aislesMobileTitle\": \"_0qm6hTThWRlUzzgFRy76\",\n\t\"aislesContainer\": \"XblakCR_xKIGBV8HBJKd\",\n\t\"BurgerMenu__container\": \"zsK4Gx2Vgzx3FcqilYqL\",\n\t\"open\": \"C2HEb9BfFZYohbpi8A3o\",\n\t\"closeAisles\": \"BsVaKmZbOo2HQomJkPqZ\",\n\t\"statusAislesOpen\": \"mrFHsU1DmsDLekCwkbi_\",\n\t\"statusAislesClose\": \"drpblHphDw7tQGnxImiP\",\n\t\"scrollAlvi\": \"Q7DskqZFho651FyTgmjl\",\n\t\"rowWrapper_custom\": \"VJcCP7D9hXtk8odoFHVh\",\n\t\"scrollBarAlvi\": \"BbjiJJaBhmwzFVAsX9Bn\",\n\t\"scrollBarAlviStatic\": \"JwCZHytsCfbxkHQ6Ta3Q\",\n\t\"categoryRowAlvi\": \"UwIJu1SahIrQURKoNrPQ\",\n\t\"linkCategoryAlvi\": \"W4CI9BWBJksFHhCca8s_\",\n\t\"headerContainerAlvi\": \"Jnz6zOWQifuPDs_rv2QM\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".UoN_xLFJLdIoX8SUuha9 {\\n  transition: 0.3s;\\n}\\n\\n.UoN_xLFJLdIoX8SUuha9:hover {\\n  transform: scale(0.85);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./stories/organisms/Header/CouponCart/Coupon/Coupon.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;AAClB;;AAEA;EACE,sBAAsB;AACxB\",\"sourcesContent\":[\".couponIcon {\\n  transition: 0.3s;\\n}\\n\\n.couponIcon:hover {\\n  transform: scale(0.85);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"couponIcon\": \"UoN_xLFJLdIoX8SUuha9\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wfEDrwn6h6CShtWWnTYg {\\n  box-shadow: var(--box-shadow-2xs);\\n  right: 300px;\\n}\\n\\n.mdJAN6d0F4fFW6APt1fV:after {\\n  border-bottom-color: #f9f9f9;\\n  border-left: 15px solid transparent;\\n  border-right: 15px solid transparent;\\n  border-width: 20px;\\n  bottom: 100%;\\n  content: \\\"\\\";\\n  height: 0;\\n  left: 22.3rem;\\n  pointer-events: none;\\n  position: absolute;\\n  width: 0;\\n}\\n\\n.SG8FFQuBARNqoxbHouwV {\\n  align-items: center;\\n  background: var(--color-primary-red-qty-button);\\n  border-radius: 60px;\\n  height: 60px;\\n  justify-content: center;\\n  left: auto;\\n  top: -30px;\\n  width: 60px;\\n}\\n\\n.wfEDrwn6h6CShtWWnTYg img {\\n  max-width: 250px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./stories/organisms/Header/MyProfile/myProfile.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,iCAAiC;EACjC,YAAY;AACd;;AAEA;EACE,4BAA4B;EAC5B,mCAAmC;EACnC,oCAAoC;EACpC,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,SAAS;EACT,aAAa;EACb,oBAAoB;EACpB,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,mBAAmB;EACnB,+CAA+C;EAC/C,mBAAmB;EACnB,YAAY;EACZ,uBAAuB;EACvB,UAAU;EACV,UAAU;EACV,WAAW;AACb;;AAEA;EACE,gBAAgB;AAClB\",\"sourcesContent\":[\".dropDownMyProfile {\\n  box-shadow: var(--box-shadow-2xs);\\n  right: 300px;\\n}\\n\\n.arrowBox:after {\\n  border-bottom-color: #f9f9f9;\\n  border-left: 15px solid transparent;\\n  border-right: 15px solid transparent;\\n  border-width: 20px;\\n  bottom: 100%;\\n  content: \\\"\\\";\\n  height: 0;\\n  left: 22.3rem;\\n  pointer-events: none;\\n  position: absolute;\\n  width: 0;\\n}\\n\\n.iconError {\\n  align-items: center;\\n  background: var(--color-primary-red-qty-button);\\n  border-radius: 60px;\\n  height: 60px;\\n  justify-content: center;\\n  left: auto;\\n  top: -30px;\\n  width: 60px;\\n}\\n\\n.dropDownMyProfile img {\\n  max-width: 250px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"dropDownMyProfile\": \"wfEDrwn6h6CShtWWnTYg\",\n\t\"arrowBox\": \"mdJAN6d0F4fFW6APt1fV\",\n\t\"iconError\": \"SG8FFQuBARNqoxbHouwV\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./AccountTooltip.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./AccountTooltip.module.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./AccountTooltip.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./DropDownAisles.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./DropDownAisles.module.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./DropDownAisles.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./Coupon.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./Coupon.module.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./Coupon.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./myProfile.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./myProfile.module.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./myProfile.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}