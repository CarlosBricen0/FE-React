{"version":3,"file":"stories_molecules_Selector_Selector_tsx.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAGA","sources":["webpack://components/./stories/molecules/Selector/Selector.tsx"],"sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\nimport {\n  Color,\n  FontSize,\n  Icon\n} from '../../atoms'\nimport { Container, Row } from '../../layout'\nimport { getGlobalStyle } from '../../../helpers'\nimport styles from './Selector.module.css'\nimport { Icons } from '../../../assets/SvgComponents/SvgIcons'\n\nexport interface SelectorProps extends Omit<React.HTMLProps<HTMLSelectElement>, 'ref'> {\n  appearance?: 'auto' | 'none';\n  arrow?: boolean;\n  arrowColor?: string;\n  color?: Color;\n  fontSize?: FontSize;\n  iconName?: keyof (typeof Icons);\n  iconSize?: number;\n  id?: string;\n  marginLess?: boolean;\n  options: Array<number | string>;\n  padding?: string;\n  placeholder: string;\n  onChange?: (e?: React.ChangeEvent<HTMLSelectElement>) => void;\n}\n\nexport const Selector = React.forwardRef(function select({\n  appearance = 'auto',\n  arrow,\n  arrowColor = getGlobalStyle('--color-text-gray-light'),\n  color,\n  fontSize = 'base',\n  iconName = 'DropDownClose',\n  iconSize = 16,\n  id,\n  marginLess,\n  options = ['option1', 'option2', 'option3'],\n  padding,\n  placeholder = 'Selecciona una opci√≥n',\n  ...props\n}: SelectorProps, ref?: React.LegacyRef<HTMLSelectElement>): React.ReactElement<SelectorProps> {\n  return (\n    <Row>\n      <select\n        className={\n          classNames(styles.select, {\n            [styles[`select--appearance-${appearance}`]]: appearance,\n            [styles[`select--font-size-${fontSize}`]]: fontSize,\n            [styles[`select--margin-less`]]: marginLess,\n            [styles[`select__text--${color}`]]: color\n          })\n        }\n        defaultValue={placeholder}\n        id={id}\n        ref={ref}\n        style={{padding}}\n        {...props}\n      >\n        <option>{placeholder}</option>\n        {options?.map((option, index) => {\n          return <option key={index}>{option}</option>\n        })\n        }\n      </select>\n      <Container\n        hidden={!arrow}\n        margin='0 0 0 -16px'\n        maxWidth='16px'\n        padding={padding}\n        zIndex={getGlobalStyle('--z-index-5')}\n      >\n        <Icon\n          color={arrowColor}\n          customSize={iconSize}\n          name={iconName}\n        />\n      </Container>\n    </Row>\n  )\n})\n"],"names":[],"sourceRoot":""}