{"version":3,"file":"organisms-Footer-Footer-stories.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAUA;AACA;AACA;AAEA;AAAA;AAAA;AAOA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAGA;AAxGA;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAOA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AApFA;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAGA;AAtDA;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AA5GA;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAKA;AAtEA;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;ACzBA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;ACvDA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AAKA;AAEA;AACA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAGA;AAIA;AA3BA;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AAMA;AAMA;AAEA;AACA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAQA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AAAA;AACA;AAGA;AA3HA","sources":["webpack://components/./stories/organisms/Footer/BottomFooter/FormFooter/index.tsx","webpack://components/./stories/organisms/Footer/BottomFooter/SocialMediaFooter/index.tsx","webpack://components/./stories/organisms/Footer/BottomFooter/index.tsx","webpack://components/./stories/organisms/Footer/Footer.tsx","webpack://components/./stories/organisms/Footer/FooterLoader/index.tsx","webpack://components/./stories/organisms/Footer/MiddleFooter/MiddleFooterColumn/MiddleFooterContent/OnlyTitle/index.tsx","webpack://components/./stories/organisms/Footer/MiddleFooter/MiddleFooterColumn/MiddleFooterContent/SubTitleWithIcon/index.tsx","webpack://components/./stories/organisms/Footer/MiddleFooter/MiddleFooterColumn/MiddleFooterContent/TitleWithSecondTitle/index.tsx","webpack://components/./stories/organisms/Footer/MiddleFooter/MiddleFooterColumn/index.tsx","webpack://components/./stories/organisms/Footer/MiddleFooter/index.tsx","webpack://components/./stories/organisms/PromiseBrand/PromiseBrand.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  ButtonStatus,\n  Checkbox,\n  Column,\n  Input,\n  Link,\n  Row,\n  Text\n} from '../../../../..'\nimport classNames from 'classnames'\nimport { Container, Spacer } from '../../../../layout'\nimport { getGlobalStyle } from '../../../../../helpers'\nimport { Site } from '../../../../../shared/interfaces/Site'\nimport styles from './FormFooter.module.css'\n\ntype FormFooterProps = {\n  widthInput?: string;\n  site: Site\n}\n\nconst SITE_ALVI = 'alvi'\n\nexport const FormFooter = ({ widthInput= '50%', site = 'unimarc' }: FormFooterProps): React.ReactElement => {\n  const [acceptTerms,setAceptTerms] = useState(false)\n  const [statusButton, setStatusButton] = useState<ButtonStatus>('disabled')\n\n  const getSettings = (site: Site) => {\n    if (site === SITE_ALVI) {\n      return {\n        btnBorderRadius: getGlobalStyle('--border-radius-full'),\n        checkboxColor: styles.customCheckbox__alvi,\n        customStyle: styles.customInput__alvi,\n        iconColor: getGlobalStyle('--color-base-white'),\n        placeholder: 'Ingresa tu email',\n        termsUrl: 'https://www.alvi.cl/static/terminos-condiciones'\n      }\n    }\n    // UNIMARC default settings\n    return {\n      btnBorderRadius: getGlobalStyle('--border-radius-xs'),\n      checkboxColor: styles.customCheckbox__unimarc,\n      customStyle: styles.customInput__unimarc,\n      iconColor: getGlobalStyle('--color-primary-red'),\n      placeholder: 'Nombre@gmail.com',\n      termsUrl: '#'\n    }\n  }\n\n  const {\n    customStyle,\n    btnBorderRadius,\n    iconColor,\n    placeholder,\n    checkboxColor,\n    termsUrl\n  } = getSettings(site)\n\n  return (\n    <Container isWrap tagName='article'>\n      <Text fontWeight='semibold'>Únete a nuestra lista de correos</Text>\n      <Spacer.Horizontal size={12} />\n      {/* message */}\n      <Container isWrap>\n        <Text fontSize='md' fontWeight='regular'>Entérate de todas las ofertas que traemos para ti</Text>\n        <Spacer.Horizontal size={16} />\n      </Container>\n      {/* input and button */}\n      <Row customClassName={customStyle}>\n        <Input\n          borderRadius='none'\n          height='45px'\n          padding='newsletter'\n          placeholder={placeholder}\n          textAlign='left'\n          width={widthInput}\n        />\n        <Column\n          borderRadius='none'\n          className={styles.containerBtn}\n          width='113px'\n        >\n          <Button\n            borderRadius={btnBorderRadius}\n            height='45px'\n            label='Enviar'\n            minWidth='113px'\n            site={site}\n            size='large'\n            status={statusButton}\n          />\n        </Column>\n      </Row>\n      <Spacer.Horizontal size={16} />\n      {/* checkbox - T&C */}\n      <Row alignItems='center'>\n        <Checkbox\n          customClass={classNames(styles['checkbox--width'], checkboxColor)}\n          iconColor={iconColor}\n          nameIcon='Check'\n          onClick={()=> {\n            setAceptTerms(!acceptTerms)\n            setStatusButton(!acceptTerms ? 'initial' : 'disabled')\n          }}\n          site={site}\n          value={acceptTerms}\n        />\n        <Spacer.Vertical size={8} />\n        <Text\n          fontSize='md'\n          fontWeight='regular'\n          textAlign='center'\n        >\n          Acepto los&nbsp;\n        </Text>\n        <Link\n          fontSize='md'\n          fontWeight='regular'\n          href={termsUrl}\n          newTarget={true}\n          underline='always'\n        >\n          términos y condiciones\n        </Link>\n      </Row>\n    </Container>\n  )\n}","import React from 'react'\nimport {\n  Container,\n  Icon,\n  Link,\n  Row,\n  Text\n} from '../../../../..'\nimport { getGlobalStyle } from '../../../../../helpers'\nimport { Site } from '../../../../../shared/interfaces/Site'\nimport { Spacer } from '../../../../layout'\nimport styles from './SocialMediaFooter.module.css'\n\nexport const SocialMediaFooter = ({ site = 'unimarc' }: { site: Site }): React.ReactElement => {\n\n  const getURLs = () => {\n    if (site === 'alvi') {\n      return {\n        facebookLink: 'https://es-la.facebook.com/supermercadoalvi/',\n        instagramLink: 'https://www.instagram.com/clubalvi/',\n        twitterLink: 'https://twitter.com/alvichile?lang=es',\n        youtubeLink: '/'\n      }\n    }\n\n    // UNIMARC\n    return {\n      facebookLink: 'https://www.facebook.com/unimarc',\n      instagramLink: 'https://www.instagram.com/unimarc/',\n      twitterLink: 'https://twitter.com/unimarc',\n      youtubeLink: 'https://www.youtube.com/user/unimarccl'\n    }\n  }\n\n  const {\n    facebookLink,\n    instagramLink,\n    twitterLink,\n    youtubeLink\n  } = getURLs()\n\n  return (\n    <Container isWrap tagName='article'>\n      <Text fontWeight='semibold'>Síguenos</Text>\n      <Spacer.Horizontal size={12} />\n      <Row>\n        <Link href={facebookLink}>\n          <Container className={styles.facebookIcon}>\n            <Icon \n              clickable='pointer'\n              color={getGlobalStyle('--color-icons-black')}\n              name='Facebook'  \n              sizes='sm'\n            />  \n          </Container>\n        </Link>\n        {\n          site === 'unimarc' &&\n          <>\n            <Spacer.Vertical size={16} />\n            <Link href={twitterLink}>\n              <Container className={styles.twitterIcon}>\n                <Icon\n                  clickable='pointer'\n                  color={getGlobalStyle('--color-icons-black')}\n                  name='Twitter'\n                  sizes='sm'\n                />\n              </Container>\n            </Link>\n            <Spacer.Vertical size={16} />\n            <Link href={youtubeLink}>\n              <Container className={styles.youtubeIcon}>\n                <Icon \n                  clickable='pointer' \n                  color={getGlobalStyle('--color-icons-black')} \n                  name='Youtube'\n                  sizes='sm'\n                />\n              </Container>\n            </Link>\n          </>\n        }\n        <Spacer.Vertical size={16} />\n        <Link href={instagramLink}>\n          <Container className={styles.instragramIcon}>\n            <Icon \n              clickable='pointer'\n              color={getGlobalStyle('--color-icons-black')} \n              name='Instagram'\n              sizes='sm'\n            />\n          </Container>\n        </Link>\n      </Row>\n    </Container>\n  )\n}","import React from 'react'\nimport { BigScreen, SmallScreen } from '../../../../helpers/mediaQueries'\nimport {\n  Column,\n  Container,\n  Row\n} from '../../../..'\nimport { FormFooter } from './FormFooter'\nimport { PayCardFooter } from './PayCardFooter'\nimport { SocialMediaFooter } from './SocialMediaFooter'\nimport { getGlobalStyle } from '../../../../helpers'\nimport { Spacer } from '../../../layout'\nimport { Site } from '../../../../shared/interfaces/Site'\n\nexport interface BottomFooterEntriesData {\n  label?: string;\n  showNewsletter?: string;\n}\n\nexport interface BottomFooterData {\n  contentType: string;\n  entries: BottomFooterEntriesData[];\n  label: string;\n}\n\nexport interface BottomFooterProps {\n  data: BottomFooterData;\n  site: Site\n}\nexport const BottomFooter = ({ data, site = 'unimarc' }: BottomFooterProps): React.ReactElement => {\n  const { showNewsletter } = data.entries[0]\n  return (\n    <Container\n      alignItems='center'\n      backgroundColor={getGlobalStyle('--color-background-gray')}\n      isWrap\n      justifyContent='center'\n    >\n      <BigScreen>\n        <Row\n          customWidth='95'\n          maxWidth='113px'\n          minWidth='1130px'\n          tagName='section'\n        >\n          <Column customWidth='100'>\n            {JSON.parse(showNewsletter) && <FormFooter site={site} />}\n          </Column>\n          <Column customWidth='50'>\n            <SocialMediaFooter site={site} />\n          </Column>\n          <Column customWidth='44'>\n            <PayCardFooter />\n          </Column>\n        </Row>\n      </BigScreen>\n\n      <SmallScreen>\n        <Row\n          alignItems='center'\n          customWidth='90'\n          isWrap\n          justifyContent='center'\n          margin='20px'\n          tagName='section'\n        >\n          {JSON.parse(showNewsletter) &&\n            <>\n              <FormFooter site={site} widthInput='100%' />\n              <Spacer.Horizontal size={16} />\n            </>\n          }\n\n          <SocialMediaFooter site={site} />\n\n          <Spacer.Horizontal size={16} />\n\n          <PayCardFooter />\n        </Row>\n      </SmallScreen>\n      <Spacer.Horizontal size={96} />\n    </Container>\n  )\n}","import React from 'react'\nimport {\n  Column,\n  Container,\n  Row,\n  Spacer\n} from '../../layout'\nimport { BottomFooter, BottomFooterData } from './BottomFooter'\nimport { MiddleFooter } from '.'\nimport { PromiseBrandData, PromiseBrand } from '../PromiseBrand/PromiseBrand'\nimport { MiddleFooterData } from './MiddleFooter'\nimport { BigScreen, SmallScreen } from '../../../helpers/mediaQueries'\nimport { getGlobalStyle } from '../../../helpers'\nimport { Site } from '../../../shared/interfaces/Site'\nimport styles from './Footer.module.css'\n\nexport interface FooterProps {\n  dataBottomFooter: BottomFooterData[];\n  dataLinks: MiddleFooterData[];\n  dataTopFooter: PromiseBrandData[];\n  site?: Site;\n}\n\nexport const Footer = ({\n  dataBottomFooter,\n  dataLinks,\n  dataTopFooter,\n  site = 'unimarc'\n}: FooterProps): React.ReactElement<FooterProps> => {\n  return (\n    <Container\n      isWrap\n      position='relative'\n      tagName='footer'\n    >\n      <BigScreen>\n        <>\n          {/* promise brand */}\n          <Container\n            id='promisebrand'\n            isWrap\n            justifyContent='center'\n            position='absolute'\n            tagName='section'\n            top='-80'\n          >\n            <Row\n              alignItems='center'\n              customClassName={styles.containerFooter}\n              justifyContent='center'\n              maxWidth={getGlobalStyle('--width-max-desktop')}\n              position='relative'\n              tagName='article'\n            >\n              <PromiseBrand data={dataTopFooter}/>\n            </Row>\n          </Container>\n\n          {/* middle and bottom footer */}\n          <Container\n            id='middleFooter'\n            isWrap\n            tagName='section'\n          >\n            <Spacer.Horizontal backgroundColor={getGlobalStyle('--color-background-gray')} />\n\n            {/* middle footer */}\n            <Row\n              backgroundColor={getGlobalStyle('--color-background-gray')}\n              customHeight='50'\n              isWrap\n              justifyContent='center'\n              tagName='section'\n            >\n              <Container\n                customWidth='95'\n                isWrap\n                justifyContent='center'\n                maxWidth={getGlobalStyle('--width-max-desktop')}\n              >\n                <Row\n                  isWrap\n                  justifyContent='center'\n                  maxWidth='1166px'\n                  minWidth='1166px'\n                  tagName='article'\n                >\n                  <Column tagName='section'>\n                    <Row>\n                      <MiddleFooter data={dataLinks} />\n                    </Row>\n                  </Column>\n                </Row>\n                <Spacer.Horizontal size={24} />\n              </Container>\n            </Row>\n            {/* bottom footer */}\n            <Row>\n              <BottomFooter data={dataBottomFooter[0]} site={site}/>\n            </Row>\n          </Container>\n        </>\n      </BigScreen>\n\n      <SmallScreen>\n        <Container\n          backgroundColor={getGlobalStyle('--color-background-gray')}\n          isWrap\n          justifyContent='center'\n          tagName='section'\n        >\n          {/* promise brand */}\n          <Row justifyContent='center' tagName='article'>\n            <PromiseBrand data={dataTopFooter} />\n          </Row>\n          {/* middle footer */}\n          <Row\n            isWrap\n            justifyContent='center'\n            tagName='article'\n          >\n            <MiddleFooter data={dataLinks} />\n          </Row>\n          {/* bottom footer */}\n          <Row>\n            <BottomFooter data={dataBottomFooter[0]} site={site}/>\n          </Row>\n        </Container>\n      </SmallScreen>\n    </Container>\n  )\n}","import React from 'react'\nimport {\n  Backbone,\n  Column,\n  Container,\n  Row\n} from '../../../..'\nimport { BigScreen, getGlobalStyle } from '../../../../helpers'\nimport { Spacer } from '../../../layout'\nimport styles from '../Footer.module.css'\n\nexport const FooterLoader = (): React.ReactElement => {\n\n  return (\n    <BigScreen>\n      <>  \n        <Spacer.Horizontal size={96} />\n        <Container\n          backgroundColor={getGlobalStyle('--color-background-gray')}\n          isWrap\n          justifyContent='center'\n        >\n          <Column \n            alignItems='center' \n            customClassName={styles.containerFooter}\n            position='relative' \n          >\n            {/* promise brand */}\n            <Column \n              alignItems='center'\n              backgroundColor={getGlobalStyle('--color-background-white')}\n              customWidth='95' \n              maxWidth='1166px'\n              minWidth='1166px'\n            >\n              <Backbone height={150} width={100} />\n            </Column>\n\n            <Spacer.Horizontal size={32} />\n              \n            {/* middlefooter */}\n            <Column \n              customWidth='95' \n              justifyContent='center'\n              maxWidth='1166px' \n              minWidth='1166px'\n            >\n              <Row alignItems='start' justifyContent='center'>\n\n                <Container alignItems='start' isWrap>\n                  <Backbone height={400} width={100} />\n                </Container>\n\n                <Spacer.Vertical size={160} />\n\n                <Container alignItems='start' isWrap>\n                  <Backbone height={400} width={100} />\n                </Container>\n\n                <Spacer.Vertical size={160} />\n\n                <Container alignItems='start' isWrap>\n                  <Backbone height={400} width={100} />\n                </Container>\n\n                <Spacer.Vertical size={160} />\n\n                <Container alignItems='start' isWrap>\n                  <Backbone height={400} width={100} />\n                </Container>\n\n              </Row>\n            </Column>\n\n          </Column>\n        </Container >\n      </> \n    </BigScreen>\n\n  )\n    \n}","import { Spacer } from '../../../../../../layout'\nimport { Link } from '../../../../../../atoms'\nimport { MiddleFooterEntriesData } from '../../..'\nimport { getGlobalStyle } from '../../../../../../../helpers'\n\nexport const OnlyTitle = ({ title, link }: MiddleFooterEntriesData): React.ReactElement => {\n\n  if(!title) { \n    return null \n  }\n\n  return (\n    <>\n      <Link \n        color={getGlobalStyle('--color-icons-black')} \n        customWidth='100'\n        fontSize='md' \n        href={link}\n        underline='none' \n      >\n        {title}\n      </Link>\n      <Spacer.Horizontal size={8} />\n    </>\n  )\n}","import {\n  Column,\n  Row,\n  Spacer\n} from '../../../../../../layout'\nimport { Icon, Link, Text } from '../../../../../../atoms'\nimport { MiddleFooterEntriesData } from '../../..'\nimport { getGlobalStyle } from '../../../../../../../helpers'\nimport { useMediaQuery } from 'react-responsive'\n\nexport const SubTitleWithIcon = ({ \n  description, \n  icon, \n  label, \n  link,\n  subTitle \n}: MiddleFooterEntriesData): React.ReactElement => {\n  const isMobile = useMediaQuery({ maxWidth: 1279 })\n  const txtMessage = '%23AyudaUnimarc'\n  const textWsp = isMobile ?\n    `whatsapp://send?text=${txtMessage}&phone=${link}`:\n    `https://web.whatsapp.com/send?text=${txtMessage}&phone=${link}`\n  const target = isMobile ? false : true\n  const linkFinal = icon === 'Phone' ? `tel:${link}` : textWsp\n  return (\n    <>\n      <Text fontSize='md' fontWeight='semibold'>{label}</Text>\n      <Spacer.Horizontal size={8} />\n      <Row alignItems='center'>\n        <Column customWidth='15'>\n          <Icon\n            color={getGlobalStyle('--color-icons-black')}\n            name={icon}\n            sizes='sm'\n          />\n        </Column>\n        <Column>\n          <Link\n            color={getGlobalStyle('--color-icons-black')} \n            customWidth='100'\n            fontSize='xl'\n            fontWeight='semibold'\n            href={linkFinal}\n            newTarget={target}\n            underline='none'\n          >\n            {subTitle}\n          </Link>\n        </Column>\n      </Row>\n      <Spacer.Horizontal size={2} />\n      <Text color='gray' fontSize='md'>{description}</Text>\n      <Spacer.Horizontal size={8} />\n    </>\n  )\n}\n","import { Row, Spacer } from '../../../../../../layout'\nimport { Icon, Link, Text } from '../../../../../../atoms'\nimport { MiddleFooterEntriesData } from '../../..'\nimport { getGlobalStyle } from '../../../../../../../helpers'\n\nexport const TitleWithSecondTitle = ({\n  icon,\n  link,\n  secondIcon,\n  secondTitle,\n  subTitle,\n  title\n}: MiddleFooterEntriesData): React.ReactElement => {\n\n  return (\n    <>\n      <Text fontSize='md' fontWeight='semibold'>{title}</Text>\n      <Spacer.Horizontal size={8} />\n      <Row alignItems='center'>\n        <Icon \n          color={getGlobalStyle('--color-icons-black')}\n          name={icon}\n          sizes='sm'\n        />\n        <Spacer.Vertical size={8} />\n        <Link \n          color={getGlobalStyle('--color-icons-black')} \n          customWidth='100' \n          fontSize='md' \n          href={link} \n          underline='always'\n        > \n          {subTitle}\n        </Link>\n      </Row>\n      <Spacer.Horizontal size={8} />\n      <Row alignItems='center'>\n        <Icon\n          color={getGlobalStyle('--color-icons-black')}\n          name={secondIcon}\n          sizes='sm'\n        />\n        <Spacer.Vertical size={8} />\n        <Link \n          color={getGlobalStyle('--color-icons-black')} \n          customWidth='100'\n          fontSize='md' \n          href={`mailto:${secondTitle}`}\n          underline='always'\n        > \n          {secondTitle}\n        </Link>\n      </Row>\n      <Spacer.Horizontal size={8} />\n    </>\n  )\n}","import React from 'react'\nimport {\n  Column,\n  Container,\n  Spacer\n} from '../../../../layout'\nimport { BigScreen } from '../../../../../helpers/mediaQueries'\nimport { MiddleFooterData, MiddleFooterEntriesData } from '..'\nimport { Text } from '../../../../atoms'\nimport { MiddleFooterContent } from './MiddleFooterContent'\n\ninterface MiddleFooterColumnsProps {\n  item: MiddleFooterData;\n}\n\nexport const MiddleFooterColumns = ({ item }: MiddleFooterColumnsProps): React.ReactElement => {\n  const { label, entries } = item\n  return(\n    <Column \n      isWrap={true}\n      justifyContent='center' \n      maxWidth='260px'\n    >\n      <Container alignItems='start' isWrap>\n        <BigScreen>\n          <Text fontWeight='medium'>{label}</Text>\n        </BigScreen>\n        <Spacer.Horizontal size={16} />\n        { \n          entries?.length > 0 && entries.map((entry: MiddleFooterEntriesData , i:number) => {\n            return(\n              <React.Fragment key={`${item.contentType}__${i}`}>\n                <MiddleFooterContent entry={entry}/>\n              </React.Fragment>\n            )\n          })\n        }\n                    \n      </Container>\n    </Column>\n  )\n\n}","import React from 'react'\nimport { Column, Container, Row } from '../../../layout'\nimport { BigScreen,SmallScreen } from '../../../../helpers/mediaQueries'\nimport { MiddleFooterColumns } from './MiddleFooterColumn'\nimport { Acordeon } from '../../../molecules'\nimport { Divider } from '../../../atoms'\nimport { Icons } from '../../../../assets/SvgComponents/SvgIcons'\nimport { getGlobalStyle } from '../../../../helpers'\n\nexport interface MiddleFooterEntriesData {\n  description?: string;\n  entries?: [];\n  icon?: keyof (typeof Icons);\n  label?: string;\n  link?: string;\n  secondIcon?: keyof (typeof Icons);\n  secondTitle?: string;\n  subTitle?: string;\n  title?: string;\n}\n\nexport interface MiddleFooterData {\n  contentType: string;\n  entries: MiddleFooterEntriesData[];\n  label: string;\n}\n\nexport interface MiddleFooterProps {\n  data: MiddleFooterData[]\n}\n\nexport const MiddleFooter = ({ data }: MiddleFooterProps): React.ReactElement => {\n  return (\n    <>\n      {\n        data?.length > 0 && data.map((item: MiddleFooterData, i:number) => {\n          return (\n            <React.Fragment key={`${item.contentType}__${i}`}>\n              <BigScreen>\n                <Container \n                  alignItems='start'\n                  justifyContent='center'\n                  tagName='article'\n                >\n                  <Row justifyContent='center' tagName='article'>\n                    <MiddleFooterColumns item={item} />\n                  </Row>\n                </Container>\n              </BigScreen>\n\n              <SmallScreen>\n                <>\n                  <Container backgroundColor={getGlobalStyle('--color-background-gray')} tagName='section' >\n                    <Row tagName='article' >\n                      <Column\n                        alignItems='center'\n                        justifyContent='center' \n                        margin='1% 6% 1% 6%'\n                        maxWidth='100%'\n                      >\n                        <Acordeon  \n                          alignItemsIcon='end'\n                          fontWeightText='semibold' \n                          heightIcon='25px'\n                          maxWidthText='220px'\n                          minWidthText='220px'\n                          positionText='bottom' \n                          titleClose={item.label}\n                          titleOpen={item.label} \n                          underline='none'\n                        >\n                          <MiddleFooterColumns item={item} />\n                        </Acordeon>\n                      </Column>\n                    </Row>\n                  </Container>\n                  <Container margin='0% 6% 0% 6%' >\n                    <Divider verticalMargin={0} />\n                  </Container> \n                </>\n              </SmallScreen>\n            </React.Fragment>\n          )\n        })\n      }\n    </>\n  )\n}","import React from 'react'\nimport {\n  Divider,\n  Icon,\n  Link,\n  Text\n} from '../../atoms'\nimport {\n  Column,\n  Row,\n  Container,\n  Spacer\n} from '../../layout'\nimport { BigScreen, SmallScreen } from '../../../helpers/mediaQueries'\nimport { Icons } from '../../../assets/SvgComponents/SvgIcons'\nimport { getGlobalStyle } from '../../../helpers'\nimport styles from './PromiseBrand.module.css'\n\nexport interface PromiseBrandData {\n  description?: string;\n  icon?: keyof (typeof Icons);\n  id?: number;\n  label?: string;\n  link?: string;\n  title?: string;\n}\n\nexport interface PromiseBrandProps {\n  data: PromiseBrandData[];\n  background?: string;\n  customStyle?: React.CSSProperties;\n}\n\nexport const PromiseBrand = ({\n  data = [],\n  background = getGlobalStyle('--color-background-white')\n}: PromiseBrandProps): React.ReactElement => {\n  return (\n    <Container\n      backgroundColor={background}\n      className={styles['promiseBrandShadow']}\n      maxWidth='1166px'\n      tagName='section'\n    >\n      <Row\n        alignItems='center'\n        isWrap\n        justifyContent='around'\n      >\n        {data && data.map((item, i) => {\n          return (\n            <React.Fragment key={i}>\n              <BigScreen>\n                <Container maxWidth='260px' tagName='article'>\n                  {(\n                    item?.link &&\n                    item?.icon &&\n                    item?.description &&\n                    item?.title\n                  ) &&\n                    <Link href={item.link} underline='none'>\n                      <Row justifyContent='center' role={item.title} >\n                        <Column\n                          alignItems='center'\n                          clickable='pointer'\n                          isWrap\n                          justifyContent='center'\n                        >\n                          <Spacer.Horizontal size={32} />\n                          <Icon\n                            clickable='pointer'\n                            color={getGlobalStyle('--color-icons-gray')}\n                            name={item.icon}\n                            sizes='sm'\n                          />\n                          <Spacer.Horizontal size={8} />\n\n                          <Text clickable='pointer' fontWeight='semibold'>{item.title}</Text>\n                          <Spacer.Horizontal size={8} />\n                          <Text\n                            clickable='pointer'\n                            fontSize='md'\n                            textAlign='center'\n                          >\n                            {item.description}\n                          </Text>\n                          <Spacer.Horizontal size={32} />\n                        </Column>\n                      </Row>\n                    </Link>\n                  }\n                </Container>\n              </BigScreen>\n\n              <SmallScreen>\n                <Container tagName='article'>\n                  {(\n                    item?.link &&\n                    item?.icon &&\n                    item?.description &&\n                    item?.title\n                  ) &&\n                    <Link\n                      customWidth='100'\n                      href={item.link}\n                      underline='none'\n                    >\n                      <Container\n                        isWrap\n                        maxHeight='110px'\n                        padding={'1% 6% 1% 6%'}\n                        tagName='section'\n                      >\n                        {i > 0 && <Divider verticalMargin={0} />}\n                        <Row isWrap role={item.title} >\n                          <Column\n                            alignItems='center'\n                            customHeight={'75px'}\n                            customWidth='10'\n                            justifyContent='center'\n                            tagName='article'\n                          >\n                            <Icon\n                              color={getGlobalStyle('--color-icons-gray')}\n                              name={item.icon}\n                              sizes='sm'\n                            />\n                          </Column>\n\n                          <Spacer.Vertical size={4} />\n\n                          <Column\n                            alignItems='start'\n                            customHeight={'85px'}\n                            customWidth='80'\n                            justifyContent='center'\n                            tagName='article'\n                          >\n                            <Text fontWeight='semibold' textAlign='left'>{item.title}</Text>\n                            <Spacer.Horizontal size={4} />\n                            <Text fontSize='md' textAlign='left'>{item.description}</Text>\n                          </Column>\n                        </Row>\n                      </Container>\n\n                    </Link>\n                  }\n                </Container>\n              </SmallScreen>\n\n            </React.Fragment>\n          )\n        })}\n      </Row>\n    </Container>\n  )\n}"],"names":[],"sourceRoot":""}