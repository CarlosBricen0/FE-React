{"version":3,"file":"stories_organisms_ClickAndCollect_ClickAndCollect_tsx.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;ACvsources":["webpack://components/./stories/organisms/ClickAndCollect/ClickAndCollect.tsx","webpack://components/./stories/organisms/ClickAndCollect/ClickAndCollectContent/index.tsx"],"sourcesContent":["import { Container, Column, Spacer } from '../../layout'\nimport { Modal } from '../../molecules'\nimport { BigScreen, SmallScreen } from '../../../helpers/mediaQueries'\nimport { ClickAndCollectContent } from './ClickAndCollectContent'\nimport { Overlay } from '../../atoms'\nimport styles from './ClickAndCollect.module.css'\nimport { getGlobalStyle } from '../../../helpers'\nimport { ClickAndCollectProps } from './interfaces/IClickAndCollect'\n\nexport const ClickAndCollect = ({\n  comunaList,\n  comunaSelected,\n  storeSelectorButtonStatus,\n  regionList,\n  storeList,\n  closeStoreSelector,\n  changeDeliveryMethod,\n  comunaSelector,\n  regionSelector,\n  storeSelector,\n  storeSelectorButton\n}: ClickAndCollectProps): React.ReactElement => {\n\n  const clickAndCollectContentProps = {\n    closeStoreSelector,\n    comunaList,\n    comunaSelected,\n    changeDeliveryMethod,\n    comunaSelector,\n    regionList,\n    regionSelector,\n    storeList,\n    storeSelector,\n    storeSelectorButton,\n    storeSelectorButtonStatus\n  }\n  \n  return (\n    <>\n      <BigScreen>\n        <Modal\n          hiddenX\n          isOpen\n          maxWidth='495px'\n          toggle={null}\n          toggleOutside={null}\n        >\n          <Spacer.Horizontal size={24} />\n          <ClickAndCollectContent {...clickAndCollectContentProps} />\n        </Modal>\n      </BigScreen>\n      <SmallScreen>\n        <Container position='fixed' zIndex={getGlobalStyle('--z-index-20')}>\n          <Overlay />\n          <Column\n            backgroundColor={getGlobalStyle('--color-base-white')}\n            borderRadius='16px 16px 0 0'\n            customClassName={styles.toFooter}\n            customHeight='auto'\n            overflow='scroll'\n            padding='38px 14px'\n            position='fixed'\n            zIndex={getGlobalStyle('--z-index-30')}\n          >\n            <Spacer.Horizontal size={24} />\n            <ClickAndCollectContent {...clickAndCollectContentProps} />\n          </Column>\n        </Container>\n      </SmallScreen>\n    </>\n  )\n}\n","import React from 'react'\nimport { getGlobalStyle } from '../../../../helpers'\nimport {\n  Button,\n  Icon,\n  Text,\n  RadioSelector\n} from '../../../atoms'\nimport {\n  Column,\n  Container,\n  Spacer\n} from '../../../layout'\nimport { Selector } from '../../../molecules'\nimport { ClickAndCollectProps } from '../interfaces/IClickAndCollect'\n\nexport const ClickAndCollectContent = ({\n  comunaList,\n  comunaSelected,\n  storeSelectorButtonStatus,\n  regionList,\n  storeList,\n  changeDeliveryMethod,\n  closeStoreSelector,\n  comunaSelector,\n  regionSelector,\n  storeSelector,\n  storeSelectorButton\n}: ClickAndCollectProps): React.ReactElement => {\n  return (\n    <>\n      <Container>\n        <Column>\n          <Container\n            absoluteDefault='topRight'\n            maxWidth='80px'\n            padding='32px'\n            position='absolute'\n          >\n            <Icon\n              clickable='pointer'\n              color={getGlobalStyle('--color-icons-gray')}\n              customSize={18}\n              name='Close'\n              onClick={closeStoreSelector}\n            />\n          </Container>\n\n          <Container margin='0px 0px 0px 5px'>\n            <Text fontWeight='semibold'>\n              Selecciona una tienda para retirar\n            </Text>\n          </Container>\n          <Spacer.Horizontal size={24} />\n          <Column>\n            <Text fontSize='md' fontWeight='semibold'>\n              Región\n            </Text>\n            <Selector\n              onChange={regionSelector}\n              options={regionList}\n              placeholder='Seleccionar región'\n            />\n            <Spacer.Horizontal size={32} />\n            <Text fontSize='md' fontWeight='semibold'>\n              Comuna\n            </Text>\n            <Selector\n              onChange={comunaSelector}\n              options={comunaList}\n              placeholder='Seleccionar comuna'\n            />\n\n            <Spacer.Horizontal size={48} />\n            <Text\n              color='gray'\n              fontSize='md'\n              fontWeight='regular'\n            >\n              {comunaSelected.length > 0 ? `Tiendas en ${comunaSelected}` : 'Tiendas disponibles'}\n            </Text>\n            <Spacer.Horizontal size={8} />\n\n            <Container\n              maxHeight='30vh'\n              maxWidth='100%'\n              overflow='auto'\n            >\n              <Column>\n                {storeList.map((data, i) => {\n                  return (\n                    <Container \n                      alignItems='center' \n                      clickable='pointer' \n                      key={i}\n                      onClick={() => {return storeSelector(data, i)}}\n                    >\n                   \n                      <RadioSelector checked={data.selected}/>\n                  \n                      <Column margin='0px 0px 0px 10px' >\n                        <Spacer.Horizontal size={12} />\n                        <Text\n                          clickable='pointer'\n                          color='black'\n                          fontSize='md'\n                          fontWeight='semibold'\n                          isFlex\n                          textAlign='left'\n                        >\n                          {`Unimarc ${data.neighborhood}`}\n                        </Text>\n                        <Spacer.Horizontal size={2} />\n                        <Text\n                          clickable='pointer'\n                          color='gray'\n                          fontSize='md'\n                          fontWeight='regular'\n                          isFlex\n                          textAlign='left'\n                          truncate={60}\n                        >\n                          {data.formatedAddress}\n                        </Text>\n                        <Spacer.Horizontal size={8} />\n                      </Column>\n                    </Container>\n                  )\n                })}\n              </Column>\n            </Container>\n          </Column>\n          <Spacer.Horizontal size={24} />\n          <Button\n            borderRadius='24px'\n            fontWeight='600'\n            label='Confirmar tienda'\n            onClick={storeSelectorButton}\n            size='large'\n            status={storeSelectorButtonStatus}\n            width='100%'\n          />\n          <Spacer.Horizontal size={12} />\n        </Column>\n      </Container>\n      <Button\n        borderRadius='24px'\n        label='Cambiar a despacho a domicilio'\n        onClick={changeDeliveryMethod}\n        size='large'\n        type='secondary'\n        width='100%'\n      />\n    </>\n  )\n}\n"],"names":[],"sourceRoot":""}