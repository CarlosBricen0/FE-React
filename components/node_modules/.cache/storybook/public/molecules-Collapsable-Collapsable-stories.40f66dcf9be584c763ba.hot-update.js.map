{"version":3,"file":"molecules-Collapsable-Collapsable-stories.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAKA;AAKA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAGA","sources":["webpack://components/./stories/molecules/Collapsable/Collapsable.tsx"],"sourcesContent":["import { useCallback, useState } from 'react'\nimport { getGlobalStyle } from '../../../helpers'\nimport {\n  Icon,\n  Text,\n  Title\n} from '../../atoms'\nimport {\n  Column,\n  Row,\n  Spacer\n} from '../../layout'\nimport styles from './Collapsable.module.css'\n\nexport interface CollapsableProps {\n  backgroundColor?: string;\n  maxHeight?: string;\n  text?: string | HTMLElement;\n  title?: string;\n}\n\nexport const Collapsable = ({\n  backgroundColor = 'white',\n  maxHeight = '154px',\n  text,\n  title\n}: CollapsableProps) => {\n  const [display, setDisplay] = useState(false)\n\n  const handleOnClick = useCallback(() => {\n    setDisplay(!display)\n  },[display])\n\n  return (\n    <>\n      <Row\n        alignItems='center'\n        backgroundColor={backgroundColor}\n        borderRadius='32px'\n        clickable='pointer'\n        maxWidth={getGlobalStyle('--width-max-desktop')}\n        minHeight='54px'\n        onClick={handleOnClick}\n        padding='0px 24px'\n      >\n        <>\n          <Column clickable='pointer'>\n            <Title\n              color={getGlobalStyle('--color-neutral-gray-dark')}\n              customFontSize={getGlobalStyle('--font-size-lg')}\n              fontWeight='semibold'\n              headingLevel='h3'\n            >\n              {title}\n            </Title>\n          </Column>\n          <Icon\n            clickable='pointer'\n            color={getGlobalStyle('--color-neutral-gray-dark')}\n            customSize={18}\n            name='DropDownClose'\n          />\n        </>\n      </Row>\n      <Row\n        customClassName={styles[`textContainer--${display ? 'displayed' : 'collapsed'}`]}\n        maxHeight={display ? maxHeight : '0px'}\n        maxWidth={getGlobalStyle('--width-max-desktop')}\n        overflow='auto'\n        padding='0px 48px 0px 24px'\n        scrollbarHidden\n      >\n        {typeof text === 'string' ? (\n          <Text\n            color='neutral-dark'\n            customClassName={styles.text}\n            fontSize='lg'\n          >\n            {text}\n          </Text>\n        ) : (\n          <Row customClassName={styles.text}>\n            {text}\n          </Row>\n        )}\n      </Row>\n      <Spacer.Horizontal size={18} />\n      <Spacer.Horizontal size={2} />\n    </>\n  )\n}"],"names":[],"sourceRoot":""}