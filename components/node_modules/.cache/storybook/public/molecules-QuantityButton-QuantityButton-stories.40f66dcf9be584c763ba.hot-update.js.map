{"version":3,"file":"molecules-QuantityButton-QuantityButton-stories.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AA9CA;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AA2CA;AACA;AACA;AAKA;AAGA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAnHA","sources":["webpack://components/./stories/molecules/QuantityButton/AddRemoveBtn.tsx","webpack://components/./stories/molecules/QuantityButton/QuantityButton.tsx"],"sourcesContent":["import React from 'react'\nimport { getGlobalStyle } from '../../../helpers'\nimport { Icon } from '../../atoms'\nimport styles from './QuantityButton.module.css'\n\nexport interface CircleStyleProps {\n  iconColor: string;\n  sizeButton?: string;\n  sizeCircle?: number\n}\n\ninterface AddOrRemoveProps {\n  alternativeBackground?: string;\n  circleStyle?: CircleStyleProps,\n  disabled: boolean;\n  site: 'alvi' | 'unimarc';\n  type: 'right' | 'left';\n  handleShake: (props?: unknown) => void;\n  handleQuantity: (props?: unknown) => void;\n}\n\nexport const AddOrRemoveBtn = ({\n  circleStyle = {\n    iconColor: getGlobalStyle('--color-primary-red'),\n    sizeButton: '35px',\n    sizeCircle: 25\n  },\n  alternativeBackground,\n  disabled,\n  site = 'unimarc',\n  type,\n  handleShake,\n  handleQuantity\n}: AddOrRemoveProps) => {\n  const iconName = type === 'right' ? 'PlusCircle' : 'MinusCircle'\n  const iconColor = disabled ? getGlobalStyle('--color-primary-disabled') : circleStyle.iconColor\n\n  return (\n    <button\n      aria-label={type}\n      className={styles[`quantityBtn--${site}`]}\n      onClick={disabled ? handleShake : handleQuantity}\n      style={{\n        background: alternativeBackground,\n        borderRadius: circleStyle.sizeButton,\n        width: circleStyle.sizeButton,\n        height: circleStyle.sizeButton\n      }}\n      type='button'\n    >\n      <div\n        className={styles['quantityBtn--circle']}\n        style={{\n          height: circleStyle.sizeButton,\n          width: circleStyle.sizeButton\n        }}\n      >\n        <Icon\n          clickable='pointer'\n          color={iconColor}\n          customSize={circleStyle.sizeCircle}\n          name={iconName}\n          viewBox='0 0 22 22'\n        />\n      </div>\n    </button>\n  )\n}\n","import React, { useState } from 'react'\nimport { getGlobalStyle } from '../../../helpers'\nimport { Site } from '../../../shared/interfaces/Site'\nimport { Icon, Input } from '../../atoms'\nimport { Container, Row } from '../../layout'\nimport { AddOrRemoveBtn } from './AddRemoveBtn'\nimport styles from './QuantityButton.module.css'\n\nexport interface QuantityButtonStylesProps {\n  fontSize?: 'sm' | 'md' | 'lg';\n  inputMaxHeight?: string;\n  margin?: string;\n  maxHeight: string;\n  maxWidth: string;\n  minWidth?: string;\n  sizeCircle: number;\n}\n\nexport interface QuantityButtonProps {\n  alert?: string;\n  alternativeBackground?: string;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  disabledInput?: boolean;\n  disabledLess?: boolean;\n  disabledPlus?: boolean;\n  isLoading?: boolean;\n  margin?: string;\n  maxHeight?: string;\n  inputRef?: React.Ref<HTMLInputElement>;\n  maxQuantity?: number;\n  maxWidth?: string;\n  oldQuantityBtn?: boolean;\n  placeholder?: string;\n  quantity?: number;\n  quantityButtonStyles?: QuantityButtonStylesProps;\n  rebranding?: boolean\n  site?: 'unimarc' | 'alvi';\n  size?: 'md' | 'sm';\n  textAfterQuantity?: string;\n  value?: number | string;\n  handleAdd: (props?: unknown) => void;\n  handleChange?: (e?: React.ChangeEvent<HTMLInputElement> | number, props?: unknown) => void;\n  handleOnClick?: (props?: unknown) => void;\n  handleRemove: (props?: unknown) => void;\n  onBlurInput?: (e?: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e?: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst quantityParams = (site: Site, alternativeBackground: string) => {\n  return {\n    siteColor: alternativeBackground || (\n      site === 'unimarc' ?\n        getGlobalStyle('--color-primary-red-qty-button') :\n        getGlobalStyle('--color-alvi-primary-blue-gradient')\n    ),\n    iconSiteColor: site === 'unimarc' ?\n      getGlobalStyle('--color-primary-red') :\n      getGlobalStyle('--color-alvi-primary-blue')\n  }\n}\n\nconst getQuantityMessage = (\n  isMaxQuantity: boolean,\n  showValue: string | number,\n  textAfterQuantity: string\n) => {\n  if (textAfterQuantity && isMaxQuantity) {\n    return `Máx ${showValue} ${textAfterQuantity}`\n  }\n  if (textAfterQuantity && !isMaxQuantity) {\n    return `${showValue} ${textAfterQuantity}`\n  }\n  if (!textAfterQuantity && isMaxQuantity) {\n    return `Máx ${showValue}`\n  }\n  return showValue\n}\n\nexport const QuantityButton = ({\n  alternativeBackground,\n  disabled = false,\n  disabledInput = false,\n  disabledLess = false,\n  disabledPlus = false,\n  isLoading = false,\n  maxQuantity = 100,\n  quantity,\n  quantityButtonStyles = {\n    fontSize: 'md',\n    margin: '0px',\n    maxHeight: '35px',\n    maxWidth: '100%',\n    sizeCircle: 25\n  },\n  site = 'unimarc',\n  textAfterQuantity = '',\n  value,\n  handleAdd,\n  handleRemove,\n  handleChange\n}: QuantityButtonProps): React.ReactElement => {\n  const [shake, setShake] = useState(false)\n\n  const getQuantity = parseFloat(`${quantity || value}`)\n  const showValue = isLoading ? '' : value\n  const isMaxQuantity = getQuantity >= parseFloat(`${maxQuantity}`)\n  const isMinQuantity = getQuantity == 0\n  const isRightDisabled = disabled || disabledPlus || isMaxQuantity\n  const isLeftDisabled = disabled || disabledLess || isMinQuantity\n  const quantityMessage = getQuantityMessage(isMaxQuantity, showValue, textAfterQuantity)\n\n  const { siteColor, iconSiteColor } = quantityParams(site, alternativeBackground)\n\n  const handleValidateInput = (e) => {\n    if (/([a-zA-Z]|[`!@#$%^&*()_+\\-=[\\]{}':\"\\\\|,.<>/?~])/.test(e.target.value)) return\n    if (e.target.value == '' || e.target.value == null) e.target.value = 1\n\n    if (e.target.value <= maxQuantity) {\n      handleChange(e)\n    }\n  }\n\n  const addChake = () => {\n    setShake(true)\n    setTimeout(() => { return setShake(false) }, 2000)\n  }\n\n  return (\n    <Container\n      alignItems='center'\n      background={siteColor}\n      backgroundColor={siteColor}\n      borderRadius={quantityButtonStyles.maxHeight}\n      customClassName={shake ? styles['quantityBtn--shake'] : ''}\n      justifyContent='center'\n      margin={quantityButtonStyles.margin}\n      maxHeight={quantityButtonStyles.maxHeight}\n      maxWidth={quantityButtonStyles.maxWidth}\n      minWidth={quantityButtonStyles.minWidth}\n      position='relative'\n      tagName='article'\n    >\n      <AddOrRemoveBtn\n        alternativeBackground={siteColor}\n        circleStyle={{\n          iconColor: iconSiteColor,\n          sizeButton: quantityButtonStyles.maxHeight,\n          sizeCircle: quantityButtonStyles.sizeCircle\n        }}\n        disabled={isLeftDisabled}\n        handleQuantity={handleRemove}\n        handleShake={addChake}\n        site={site}\n        type='left'\n      />\n      {!isLoading ? (\n        <Input\n          background={getGlobalStyle('--color-base-transparent')}\n          color={getGlobalStyle('--color-base-white')}\n          disabled={disabled || isLoading || disabledInput || isMaxQuantity}\n          fontSize={quantityButtonStyles.fontSize}\n          height={quantityButtonStyles.maxHeight}\n          maxWidth='100%'\n          onChange={handleValidateInput}\n          type='text'\n          value={quantityMessage}\n          width='100%'\n        />\n      ) : (\n        <Row className={styles.loading}>\n          <Icon\n            color={getGlobalStyle('--color-alvi-neutral-white')}\n            customSize={20}\n            name='Loading'\n          />\n        </Row>\n      )\n      }\n      <AddOrRemoveBtn\n        alternativeBackground={siteColor}\n        circleStyle={{\n          iconColor: iconSiteColor,\n          sizeButton: quantityButtonStyles.maxHeight,\n          sizeCircle: quantityButtonStyles.sizeCircle\n        }}\n        disabled={isRightDisabled}\n        handleQuantity={handleAdd}\n        handleShake={addChake}\n        site={site}\n        type='right'\n      />\n    </Container>\n  )\n}\n"],"names":[],"sourceRoot":""}