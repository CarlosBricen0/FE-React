{"version":3,"file":"molecules-Acordeon-Acordeon-stories.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAMA;AASA;AACA;AACA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAGA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAnEA","sources":["webpack://components/./stories/molecules/Acordeon/AcordeonTitle/index.tsx"],"sourcesContent":["import {\n  Column,\n  Container,\n  Row,\n  Spacer\n} from '../../../layout/index'\nimport {\n  Button,\n  ButtonProps,\n  Icon,\n  Title\n} from '../../../atoms/index'\nimport { AcordeonProps } from '../Acordeon'\nimport { Icons } from '../../../../assets/SvgComponents/SvgIcons'\n\nimport styles from '../Acordeon.module.css'\nimport { getGlobalStyle} from '../../../../helpers'\nimport React from 'react'\nimport { ChildrenBaseContainerProps } from '../../../layout/BaseContainer/BaseContainer'\n\nexport interface AcordeonTitleProps extends AcordeonProps {\n  containerProps?: ChildrenBaseContainerProps;\n  buttonProps?: Partial<ButtonProps>;\n  titleAcordeon: string;\n  role?: string;\n  isOpen?: boolean;\n  showLine?:boolean;\n  icon: keyof (typeof Icons);\n  handleIsOpen: () => void;\n  underline?: typeof Text.arguments.underline;\n}\n\nexport const AcordeonTitle = ({\n  alignItemsIcon,\n  buttonProps,\n  containerProps,\n  fontWeightText,\n  handleIsOpen,\n  heightIcon,\n  icon,\n  maxWidthText,\n  minWidthText,\n  role = 'heading',\n  showLine,\n  sizeButton,\n  titleAcordeon,\n  underline = 'none'\n}: AcordeonTitleProps): React.ReactElement => {\n  const customWidthIcon = showLine ? '10' : '100'\n  return (\n    <Container\n      className={styles.cursorPointer}\n      onClick={handleIsOpen}  \n      role={role}\n      {...containerProps}\n    >\n      <Row alignItems='center' clickable='pointer'>\n        <Column\n          clickable='pointer'\n          maxWidth={maxWidthText}\n          minWidth={minWidthText}\n        >\n          <Title\n            fontWeight={fontWeightText}\n            headingLevel='h4'\n          >\n            <Button\n              fontWeight={fontWeightText}\n              label={titleAcordeon}\n              size={sizeButton}\n              type='semibold'\n              {...buttonProps}\n              underline={underline}\n            />\n          </Title>\n        </Column>\n        <Spacer.Vertical size={8} />\n        {showLine && \n        ( \n          <Spacer.Horizontal backgroundColor={getGlobalStyle('--color-background-gray')} size={1} />\n        )}\n        \n        <Column\n          alignItems={alignItemsIcon}\n          clickable='pointer'\n          customHeight={heightIcon}\n          customWidth={customWidthIcon}\n          justifyContent='center'\n        >\n          <Icon\n            clickable='pointer'\n            color={getGlobalStyle('--color-icons-gray')}\n            name={icon}\n            sizes='xs'\n          />\n        </Column>\n      </Row>\n    </Container>\n  )\n}"],"names":[],"sourceRoot":""}