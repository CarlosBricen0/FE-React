{"version":3,"file":"organisms-Shelf-Shelf-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAKA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://components/./helpers/currencyFormat/index.ts","webpack://components/./node_modules/css-loader/dist/runtime/getUrl.js"],"sourcesContent":["interface CurrencyFormat {\n  number: number;\n  bool?: boolean;\n}\n\nexport const currencyFormat = ({\n  number,\n  bool = true\n}: CurrencyFormat): string => {\n\n  let formatNumber = 0\n\n  // If true then divide number\n  if (bool) {\n    formatNumber = number / 100\n  }\n  // Else just assign it\n  else {\n    formatNumber = number\n  }\n\n  const formatterPeso = new Intl.NumberFormat('es-CL', {\n    style: 'currency',\n    currency: 'CLP',\n    minimumFractionDigits: 0\n  })\n\n  if (formatNumber >= 0) {\n    return formatterPeso.format(formatNumber)\n  }\n\n  return '- ' + formatterPeso.format(Math.abs(formatNumber))\n}","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};"],"names":[],"sourceRoot":""}