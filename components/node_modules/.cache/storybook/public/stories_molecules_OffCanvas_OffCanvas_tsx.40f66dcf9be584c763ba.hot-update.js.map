{"version":3,"file":"stories_molecules_OffCanvas_OffCanvas_tsx.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAGA;AAIA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAOA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AAEA;AAGA;AACA;AAEA;AAIA","sources":["webpack://components/./stories/molecules/OffCanvas/OffCanvas.tsx"],"sourcesContent":["import classNames from 'classnames'\nimport { useEffect, useState } from 'react'\nimport { getGlobalStyle } from '../../../helpers'\nimport { FontSize, Text } from '../../atoms'\nimport { Icon } from '../../atoms/Icon/Icon'\nimport { Row } from '../../layout'\nimport { JustifyContent, Position } from '../../layout/BaseContainer/BaseContainer'\nimport { Column } from '../../layout/Column/Column'\nimport { Container } from '../../layout/Container/Container'\nimport styles from './OffCanvas.module.css'\n\nenum OffCanvaDirections {\n  LEFT = 'left',\n  RIGHT = 'right'\n}\n\ntype TextWeight = 'none' | 'hairline' | 'thin' | 'light' | 'normal' | 'medium' | 'semibold' | 'bold' | 'extrabold' | 'black';\ntype Align = 'start' | 'center' | 'end'\n\ninterface OffCanvaProps {\n  backgroundColor?: string\n  children: React.ReactNode\n  className?: string\n  direction: string\n  fullScreen?: boolean\n  // Footer\n  footerComponent?: React.ReactNode\n  footerHeight?: string\n  footerPadding?: string\n\n  // Header\n  headerComponent?: React.ReactNode\n  headerHeight?: string\n  headerPadding?: string\n  headerText?: string\n  headerTextAlign?: Align\n  headerTextSize?: FontSize\n  headerTextWeight?: TextWeight\n\n  isMobile?: boolean\n  isOpen: boolean\n  justifyContent?: JustifyContent;\n  level?: '1' | '2' | '3'\n  padding?: string\n  position?: Position\n  width?: string\n  toggleOutside?: () => void\n}\n\nexport const OffCanvas = ({\n  backgroundColor = getGlobalStyle('--color-neutral-gray-white'),\n  children,\n  className,\n  direction = OffCanvaDirections.RIGHT,\n  fullScreen,\n  footerComponent = null,\n  footerHeight = '165px',\n  footerPadding = '16px',\n  headerComponent = null,\n  headerHeight = '75px',\n  headerPadding = '24px',\n  headerText = 'Header',\n  headerTextAlign,\n  headerTextSize,\n  headerTextWeight,\n  isMobile = false,\n  isOpen = false,\n  level = '1',\n  position = null,\n  justifyContent,\n  width = '376px',\n  padding = '16px 11px 16px 16px',\n  toggleOutside = () => { return }\n}: OffCanvaProps): React.ReactElement => {\n\n  const [activeClass, setActiveClass] = useState(styles.offCanvas__container)\n\n  const containerFoterHeight = footerComponent ? footerHeight : '0px'\n  const containerWidth = isMobile ? '100%' : width\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflowY = 'hidden'\n      document.body.style.paddingRight = '15px'\n      setActiveClass(styles[`offCanvas__slide--${direction}`])\n    } else {\n      document.body.style.overflowY = 'auto'\n      document.body.style.paddingRight = '0'\n      setActiveClass(styles[`offCanvas__container--${direction}`])\n    }\n  }, [isOpen])\n\n  return (\n    <>\n      {\n        isOpen && (\n          <>\n            {/* overlay */}\n            <Container\n              className={classNames(\n                styles.offCanvas__bg,\n                styles[`offCanvas__fullScreen--${direction}`],\n                {\n                  [styles['offCanvas__fullScreen']]: fullScreen,\n                  [styles[`offCanvas__level-${level}`]]: !!level\n                }\n              )}\n              position={position}\n            >\n\n              <Container\n                customHeight='100%'\n                customWidth='100%'\n                onClick={toggleOutside}\n                position='absolute'\n              />\n              {/* OffCanva container */}\n              <Container\n                alignItems='center'\n                backgroundColor={backgroundColor}\n                className={classNames(\n                  className,\n                  activeClass)}\n                customHeight='100%'\n                justifyContent='center'\n                overflow='hidden'\n                position='fixed'\n                width={containerWidth}\n              >\n                {/* Header */}\n                <Row id='Offcanvas__header' tagName='section'>\n                  <Column\n                    alignItems='center'\n                    backgroundColor={getGlobalStyle('--color-base-white')}\n                    boxShadow={getGlobalStyle('--box-shadow-2xs')}\n                    customHeight={headerHeight}\n                    justifyContent='center'\n                    padding={headerPadding}\n                    width='100%'\n                  >\n                    <Row>\n\n                      <Column>\n                        {\n                          headerComponent\n                        }\n                        {!headerComponent && (\n                          <Text\n                            customClassName={classNames(styles.offCanvas__headerTitle, {\n                              [styles[`align--${headerTextAlign}`]]: headerTextAlign,\n                              [styles[`text-size--${headerTextSize}`]]: headerTextSize,\n                              [styles[`text-weight--${headerTextWeight}`]]: headerTextWeight\n                            })}\n                          >\n                            {headerText}\n                          </Text>\n                        )}\n                      </Column>\n                      <Column\n                        borderRadius={getGlobalStyle('--border-radius-full')}\n                        className={styles.offCanvas__close}\n                        clickable='pointer'\n                        justifyContent='start'\n                        maxWidth='max-content'\n                        onClick={toggleOutside}\n                        padding='10px'\n                      >\n                        <Icon\n                          clickable='pointer'\n                          color={getGlobalStyle('--color-neutral-black')}\n                          customSize={17}\n                          name='Close'\n                        />\n                      </Column>\n                    </Row>\n                  </Column>\n                </Row>\n                {/* content */}\n                <Row id='Offcanvas__container' tagName='section' >\n                  <Column\n                    alignItems='center'\n                    className={styles.offCanvas__container}\n                    justifyContent={justifyContent}\n                    margin='0 5px 0 0'\n                    maxHeight={`calc(calc( 100vh - ${containerFoterHeight}) - ${headerHeight}) `}\n                    overflow='auto'\n                    padding={padding}\n                  >\n                    {children}\n                  </Column>\n                </Row>\n\n                {/* Footer */}\n                {\n                  footerComponent && (\n                    <Row\n                      className={styles.offCanvas__footer}\n                      id='Offcanvas__footer'\n                      position='absolute'\n                      tagName='section'\n                    >\n                      <Column\n                        alignItems='center'\n                        backgroundColor={getGlobalStyle('--color-base-white')}\n                        borderRadius={`\n                          ${getGlobalStyle('--border-radius-md')} \n                          ${getGlobalStyle('--border-radius-md')} \n                          0 0\n                        `}\n                        customHeight={footerHeight}\n                        justifyContent='center'\n                        maxWidth={width}\n                        padding={footerPadding}\n                        width='100%'\n                      >\n                        {\n                          footerComponent\n                        }\n                      </Column>\n                    </Row>\n                  )\n                }\n\n              </Container>\n            </Container>\n          </>\n        )\n      }\n    </>\n  )\n}\n"],"names":[],"sourceRoot":""}