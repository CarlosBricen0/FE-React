{"version":3,"file":"molecules-CartIcon-CartIcon-stories.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAKA;AACA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AAIA;AA5FA","sources":["webpack://components/./stories/molecules/CartIcon/CartIcon.tsx"],"sourcesContent":["import React from 'react'\nimport { Icons } from '../../../assets/SvgComponents/SvgIcons'\nimport { getGlobalStyle } from '../../../helpers'\nimport {\n  FontSize,\n  Icon,\n  Text\n} from '../../atoms/index'\nimport { Column, Container } from '../../layout/index'\nimport styles from './CartIcon.module.css'\n\nexport type ColorQuantity = 'primary' | 'secondary' | 'gray' | 'inactive' | 'black' | 'white' | 'success' | 'error' | 'warning' | 'blue';\n\nexport interface CartIconProps {\n  backgroundQuantity?: string;\n  colorIcon?: string;\n  colorLoaderQuantity?: string;\n  colorQuantity?: ColorQuantity;\n  customSizesIcon?: number;\n  customSizesQuantity?: FontSize;\n  customSizesQuantityContainer?: string;\n  icon?: keyof (typeof Icons);\n  quantity?: number;\n  quantityLoading?: boolean;\n  site?: 'unimarc' | 'alvi';\n  total?: string;\n  onClickCart?: () => void;\n}\n\nexport const CartIcon = ({\n  backgroundQuantity = 'white',\n  colorIcon = 'white',\n  colorLoaderQuantity = getGlobalStyle('--color-primary-red-dark'),\n  colorQuantity = 'primary',\n  customSizesIcon = 24,\n  customSizesQuantity = 'sm',\n  customSizesQuantityContainer,\n  icon = 'Cart',\n  quantity = 96,\n  quantityLoading = false,\n  site = 'unimarc',\n  total,\n  onClickCart\n}: CartIconProps): React.ReactElement<CartIconProps> => {\n  const unimarcSite = site === 'unimarc'\n  const classNameSite = unimarcSite ? '' : styles.containerQuantityAlvi\n  const styleLoading = unimarcSite ? 'loading' : 'loading-alvi'\n  const customHeight = total ? '50px' : '35px'\n  return (\n    <Column\n      customHeight={customHeight}\n      minWidth='35px'\n      onClick={onClickCart}\n      position='relative'\n    >\n      <Column\n        absoluteDefault='bottomLeft'\n        alignItems='center'\n        justifyContent='center'\n        position='absolute'\n      >\n        <div className={styles.cartIcon}>\n          <Icon\n            clickable='pointer'\n            color={colorIcon}\n            customSize={customSizesIcon}\n            name={icon}\n          />\n        </div>\n        { total &&\n          <Text\n            color='white'\n            fontSize='xs'\n            lineHeight='15px'\n          >\n            {total}\n          </Text>\n        }\n      </Column>\n      {quantity > 0 && (\n        <Container\n          absoluteDefault='topRight'\n          alignItems='center'\n          backgroundColor={backgroundQuantity}\n          borderRadius='50%'\n          customClassName={classNameSite}\n          customHeight={customSizesQuantityContainer}\n          height='100%'\n          justifyContent='center'\n          maxWidth={customSizesQuantityContainer}\n          minWidth={unimarcSite ? 'initial' : customSizesQuantityContainer}\n          position='absolute'\n          role='quantityBalloon'\n        >\n          {quantityLoading && (\n            <Container customHeight='inherit' position='absolute'>\n              <div className={styles[styleLoading]} >\n                <Icon\n                  color={colorLoaderQuantity}\n                  customSize={unimarcSite ? 15 : 19}\n                  name='Loading'\n                />\n              </div>\n            </Container>\n          )}\n          {!quantityLoading && (\n            <Text\n              clickable='pointer'\n              color={colorQuantity}\n              fontSize={unimarcSite ? 'xs' : customSizesQuantity}\n              fontWeight='semibold'\n              textAlign='center'\n            >\n              {quantity}\n            </Text>\n          )}\n        </Container>\n      )\n      }\n    </Column >\n  )\n}"],"names":[],"sourceRoot":""}