{"version":3,"file":"molecules-SelectOrderBy-SelectOrderBy-stories.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAMA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAaxGA","sources":["webpack://components/./stories/molecules/SelectOrderBy/SelectOrderBy.tsx"],"sourcesContent":["import React,\n{\n  useEffect,\n  useRef,\n  useState\n} from 'react'\nimport classNames from 'classnames'\nimport {\n  Column,\n  Container,\n  Row\n} from '../../layout'\nimport { Icon, Text } from '../../atoms'\nimport { getGlobalStyle } from '../../../helpers'\nimport styles from './SelectOrderBy.module.css'\n\ninterface Option {\n  orderKey: string;\n  value: string;\n}\n\nexport interface SelectByOptions {\n  options?: Array<Option>;\n  selected?: string;\n  onClick?: (e: string) => void;\n}\n\nexport const SelectOrderBy = ({\n  options = [\n    { orderKey: 'a', value: 'Recomendados' },\n    { orderKey: 'b', value: 'Precio mayor a menor' },\n    { orderKey: 'c', value: 'Precio menor a mayor' },\n    { orderKey: 'd', value: 'De la A la Z' },\n    { orderKey: 'e', value: 'De la Z a la A' },\n    { orderKey: 'f', value: 'Más comprados' },\n    { orderKey: 'g', value: 'Más nuevos' },\n    { orderKey: 'h', value: 'Mejores descuentos' }\n  ],\n  onClick = () => { return undefined }\n}: SelectByOptions): React.ReactElement<SelectByOptions> => {\n  const [itemSelected, setItemSelected] = useState(options?.[0]?.value)\n  const [showOptions, setShowOptions] = useState(false)\n  const onCloseRef = useRef(null)\n\n  const handleShowOptions = () => {\n    setShowOptions(!showOptions)\n  }\n\n  useEffect(() => {\n    const clickOutside = (e) => {\n      if(onCloseRef?.current?.contains(e?.target)) {\n        return\n      }\n      setShowOptions(false)\n    }\n\n    document.body.addEventListener('mousedown', clickOutside)\n    return () => {\n      document.body.removeEventListener('mousedown', clickOutside)\n    }\n  }, [showOptions])\n\n  const onOptionClick = (e) => {\n    setItemSelected(e?.target?.innerHTML)\n    setShowOptions(false)\n    onClick(e?.target?.innerHTML)\n  }\n\n  return (\n    <Container isWrap>\n      <Row>\n        <Text\n          customClassName={styles.textCursor}\n          customColor={getGlobalStyle('--color-neutral-dusty-gray')}\n          type='span'\n        >\n          Ordenar por\n        </Text>\n        <Text\n          customClassName={styles.separator}\n          customColor={getGlobalStyle('--color-neutral-dusty-gray')}\n          type='span'\n        >\n          |\n        </Text>\n        <div\n          className={styles.clickContainer}\n          onClick={handleShowOptions}\n          ref={onCloseRef}\n        >\n          <Text\n            customClassName={`${styles.selectedText} ${styles.textCursor}`}\n            fontWeight='semibold'\n            type='div'\n          >\n            {itemSelected}\n          </Text>\n          <div className={styles.iconContainer}>\n            <Icon\n              color={getGlobalStyle('--color-neutral-black')}\n              customSize={16}\n              name={!showOptions ? 'DropDownCloseV2' : 'DropDownOpenV2'}\n            />\n          </div>\n        </div>\n      </Row>\n      <Column\n        borderRadius='8px'\n        className={classNames(styles.optionsContainer, {\n          [styles[`display--options`]]: showOptions,\n          [styles[`hide--options`]]: !showOptions\n        })}\n        maxWidth='240px'\n        width='100%'\n      >\n        <ul className={styles.ul}>\n          {options?.map?.((option) => {\n            return (\n              <li\n                className={styles.list}\n                key={option.orderKey}\n                onClick={onOptionClick}\n                value={option?.value}\n              >\n                {option?.value}\n              </li>)\n          })}\n        </ul>\n      </Column>\n    </Container>\n  )\n}"],"names":[],"sourceRoot":""}