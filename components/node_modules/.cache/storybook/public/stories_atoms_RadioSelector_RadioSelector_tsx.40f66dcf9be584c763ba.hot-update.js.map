{"version":3,"file":"stories_atoms_RadioSelector_RadioSelector_tsx.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAIA","sources":["webpack://components/./stories/atoms/RadioSelector/RadioSelector.tsx"],"sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\nimport { Icon } from '../Icon/Icon'\nimport styles from './RadioSelector.module.css'\nimport { Icons } from '../../../assets/SvgComponents/SvgIcons'\nimport { getGlobalStyle } from '../../../helpers'\n\nexport type TypeRadio = 'green'\n\nexport interface RadioSelectorProps extends Omit<React.HTMLProps<HTMLInputElement>, 'ref'> {\n  checked?: boolean;\n  customClassName?: string;\n  disabled?: boolean;\n  isStoreLocator?: boolean;\n  nameIcon?: keyof (typeof Icons);\n  site?: 'alvi' | 'unimarc';\n  type?: TypeRadio;\n  value?: string;\n  onClick?: () => void;\n  onChange?: (e?: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const RadioSelector = React.forwardRef(function RadioSelector({\n  checked,\n  customClassName,\n  disabled = false,\n  isStoreLocator = false,\n  nameIcon,\n  site = 'unimarc',\n  type,\n  value,\n  onClick,\n  ...props\n}: RadioSelectorProps, ref?: React.LegacyRef<HTMLInputElement>): React.ReactElement<RadioSelectorProps>{\n\n  const classes = site === 'alvi' ? styles.radio__alvi : styles.radio\n\n  return (\n    <div className={classNames(styles.container, customClassName)} onClick={onClick}>\n      <input \n        checked={checked}\n        className={classNames(classes,{[styles[`radio__${type}`]]: type})}\n        disabled={disabled}\n        ref={ref}\n        role='radio'\n        type='radio'\n        value={value}\n        {...props}\n        readOnly\n      />\n      { (isStoreLocator && site === 'alvi') ? \n        <Icon\n          color={getGlobalStyle('--color-alvi-neutral-gray-light')}\n          customSize={45}\n          name={nameIcon}\n          site='alvi'\n        /> \n        :\n        <label htmlFor={styles.radio}></label>\n      }\n    </div>\n  )\n})"],"names":[],"sourceRoot":""}