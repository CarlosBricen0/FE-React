{"version":3,"file":"molecules-InputAdornment-InputAdornment-stories.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AAIA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAGA","sources":["webpack://components/./stories/molecules/InputAdornment/InputAdornment.tsx"],"sourcesContent":["import React, { useRef } from 'react'\nimport {\n  Row,\n  Column,\n  Container\n} from '../../layout/index'\nimport {\n  Input,\n  InputProps\n} from '../../atoms/index'\nimport { getGlobalStyle } from '../../../helpers'\n\nexport interface InputAdornmentProps extends Omit<InputProps, 'border'> {\n  background?: string;\n  border?: string;\n  id?: string;\n  inputAdornmentEnd?: React.ReactNode | string;\n  inputAdornmentStart?: React.ReactNode | string;\n  inputWidth?: string;\n  padding?: string,\n  placeholderColor?: string;\n  titleInput?: string;\n  type?: string;\n  width?: string;\n}\n\nexport const InputAdornment = React.forwardRef(function InputAdornment({\n  background = getGlobalStyle('--color-base-white'),\n  border,\n  borderRadius = '8px',\n  customClassName,\n  fontSize = 'base',\n  height,\n  id,\n  inputAdornmentEnd,\n  inputAdornmentStart,\n  inputWidth = '100%',\n  padding,\n  placeholder,\n  placeholderColor,\n  textAlign = 'left',\n  titleInput,\n  type,\n  width = '100',\n  ...props\n}: InputAdornmentProps, ref): React.ReactElement<InputAdornmentProps> {\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  return (\n    <Container\n      customClassName={customClassName}\n      ref={ref}\n    >\n      <Row\n        alignItems='center'\n        background={background}\n        border={border}\n        borderRadius={borderRadius}\n        customHeight={height}\n        customWidth={width}\n        justifyContent='between'\n        onClick={() => {\n          inputRef?.current?.focus()\n        }}\n        padding={padding}\n      >\n        {inputAdornmentStart && (\n          <Column\n            clickable='pointer'\n            maxWidth='min-content'\n            padding='0 5px 0 0'\n          >\n            {inputAdornmentStart}\n          </Column>\n        )}\n        <Input\n          background='transparent'\n          fontSize={fontSize}\n          id={id}\n          placeholder={placeholder}\n          placeholderColor={placeholderColor}\n          ref={inputRef}\n          textAlign={textAlign}\n          title={titleInput}\n          type={type ? type : 'text'}\n          width={inputWidth}\n          {...props}\n        />\n        {inputAdornmentEnd && (\n          <Column\n            clickable='pointer'\n            maxWidth='min-content'\n            padding='0 0 0 5px'\n          >\n            {inputAdornmentEnd}\n          </Column>\n        )}\n      </Row>\n    </Container>\n  )\n})"],"names":[],"sourceRoot":""}