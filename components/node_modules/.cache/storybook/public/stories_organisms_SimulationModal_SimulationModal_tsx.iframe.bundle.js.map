{"version":3,"file":"stories_organisms_SimulationModal_SimulationModal_tsx.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AAKA;AACA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAEA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAGA;AA5GA;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://components/./stories/organisms/SimulationModal/ContentModalSimulation.tsx","webpack://components/./stories/organisms/SimulationModal/ContentModalSimulationButtons.tsx","webpack://components/./stories/organisms/SimulationModal/ModalShelf.tsx","webpack://components/./stories/organisms/SimulationModal/SimulationModal.tsx","webpack://components/./stories/organisms/SimulationModal/SimulationModal.module.css","webpack://components/./stories/organisms/SimulationModal/SimulationModal.module.css?5e7b"],"sourcesContent":["import React from 'react'\nimport { getGlobalStyle } from '../../../helpers'\nimport {\n  ButtonStatus,\n  Divider,\n  Icon,\n  Text,\n  Title\n} from '../../atoms'\nimport {\n  Column,\n  Container,\n  Spacer\n} from '../../layout'\nimport { ContentModalSimulationButtons } from './ContentModalSimulationButtons'\nimport { ModalShelf } from './ModalShelf'\nimport { SimulationItem } from './SimulationModal'\n\ninterface ContentModalSimulationProps {\n  buttonStatus?: ButtonStatus;\n  content?: string;\n  labelPrimary?: string;\n  labelSecondary?: string;\n  items?: SimulationItem[];\n  title?: string;\n  isMobile?: boolean;\n  action?: () => void;\n  handleKeepAddress?: () => void;\n}\n\nexport const ContentModalSimulation = ({\n  buttonStatus,\n  isMobile,\n  content,\n  title = '¿Quieres cambiar tu dirección?',\n  labelPrimary = 'Aceptar',\n  labelSecondary,\n  items,\n  action,\n  handleKeepAddress\n}: ContentModalSimulationProps) => {\n  const contentModalSimulationButtonsProps = ({\n    buttonStatus,\n    isMobile,\n    labelPrimary,\n    labelSecondary,\n    action,\n    handleKeepAddress\n  })\n\n  return (\n    <>\n      <Container padding='11.5px 0px 18.5px 0px'>\n        <Title\n          color={getGlobalStyle('--color-icons-black')}\n          customFontSize={getGlobalStyle(`--font-size-2xl`)}\n          fontWeight='semibold'\n          headingLevel='h5'\n          text={title}\n        />\n      </Container>\n      {!isMobile && (\n        <Container\n          absoluteDefault='topRight'\n          disabled={true}\n          left='442px'\n          maxWidth='40px'\n          onClick={buttonStatus === 'loading' ? null : handleKeepAddress}\n          padding='26.5px 0px'\n          position='absolute'\n        >\n          <Icon\n            clickable='pointer'\n            color={getGlobalStyle('--color-icons-black')}\n            customSize={30}\n            name='Close2'\n          />\n        </Container>\n      )}\n      <Divider\n        color={getGlobalStyle('--color-neutral-gray')}\n        thickness={1}\n        verticalMargin={0}\n      />\n      <Spacer.Horizontal size={16}/>\n      <Container customHeight={isMobile ? '80vh' : '382px'} overflow='auto'>\n        <Column>\n          <Text fontSize={isMobile ? 'md' : 'base'}>\n            {content ||\n              'Hay productos no disponibles para tu nueva dirección. Puedes sustituirlos en el carro o mantener la dirección actual y continuar con los productos.'\n            }\n          </Text>\n          <Spacer.Horizontal size={16}/>\n          <Spacer.Horizontal size={2}/>\n          <Spacer.Horizontal size={1}/>\n          {items?.map((item) => {\n            return (\n              <Column key={item.id}>\n                <Container>\n                  <ModalShelf item={item}/>\n                </Container>\n                <Spacer.Horizontal size={16}/>\n                <Spacer.Horizontal size={2}/>\n                <Spacer.Horizontal size={1}/>\n              </Column>\n            )\n          })}\n        </Column>\n      </Container>\n      <ContentModalSimulationButtons {...contentModalSimulationButtonsProps}/>\n    </>\n  )\n}","import React from 'react'\nimport { getGlobalStyle } from '../../../helpers'\nimport { Button, ButtonStatus } from '../../atoms'\nimport {\n  Column,\n  Row,\n  Spacer\n} from '../../layout'\nimport styles from './SimulationModal.module.css'\n\ninterface ContentModalSimulationButtonsProps {\n  buttonStatus?: ButtonStatus;\n  isMobile?: boolean;\n  labelPrimary?: string;\n  labelSecondary?: string;\n  action?: () => void;\n  handleKeepAddress?: () => void;\n}\n\nexport const ContentModalSimulationButtons = ({\n  buttonStatus,\n  isMobile,\n  labelPrimary = 'Aceptar',\n  labelSecondary,\n  action,\n  handleKeepAddress\n}: ContentModalSimulationButtonsProps) => {\n\n  return (\n    <Row\n      className={styles.spacerShadow}\n      justifyContent='between'\n      margin={isMobile ? '0 0 0 -12px' : '0'}\n      minWidth={isMobile ? '100vw' : '495px'}\n      padding={isMobile ? '24px 24px 0px 24px' : '16px 16px 0px 16px'}\n      position='relative'\n    >\n      {isMobile ? (\n        <>\n          {labelSecondary ? (\n            <>\n              <Row>\n                <Button\n                  borderRadius='24px'\n                  fontWeight={getGlobalStyle('--font-weight-semibold')}\n                  height='45px'\n                  label={labelPrimary}\n                  minWidth='223.5px'\n                  onClick={handleKeepAddress}\n                  status={buttonStatus}\n                  width='100%'\n                />\n              </Row>\n              <Spacer.Horizontal size={8}/>\n              <Row>\n                <Button\n                  borderRadius={getGlobalStyle('--border-radius-lg')}\n                  fontWeight={getGlobalStyle('--font-weight-semibold')}\n                  height='45px'\n                  label={labelSecondary}\n                  minWidth='223.5px'\n                  onClick={action}\n                  status={buttonStatus}\n                  type='secondary'\n                  width='100%'\n                />\n              </Row>\n            </>\n          ) : (\n            <Button\n              borderRadius={getGlobalStyle('--border-radius-lg')}\n              fontWeight={getGlobalStyle('--font-weight-semibold')}\n              label={labelPrimary}\n              minWidth='223.5px'\n              onClick={handleKeepAddress}\n              status={buttonStatus}\n              type={labelSecondary ? 'secondary' : 'primary'}\n              width='100%'\n            />\n          )}\n        </>\n      ) : (\n        <Column>\n          {labelSecondary ? (\n            <Row justifyContent='between'>\n              <Column maxWidth='max-content'>\n                <Button\n                  borderRadius={getGlobalStyle('--border-radius-lg')}\n                  fontWeight={getGlobalStyle('--font-weight-semibold')}\n                  label={labelPrimary}\n                  minWidth='223.5px'\n                  onClick={handleKeepAddress}\n                  status={buttonStatus}\n                  type='secondary'\n                  width='100%'\n                />\n              </Column>\n              <Column maxWidth='max-content'>\n                <Row>\n                  <Button\n                    borderRadius='24px'\n                    fontWeight={getGlobalStyle('--font-weight-semibold')}\n                    label={labelSecondary}\n                    minWidth='223.5px'\n                    onClick={action}\n                    status={buttonStatus}\n                    width='100%'\n                  />\n                </Row>\n              </Column>\n            </Row>\n          ) : (\n            <Button\n              borderRadius={getGlobalStyle('--border-radius-lg')}\n              fontWeight={getGlobalStyle('--font-weight-semibold')}\n              label={labelPrimary}\n              minWidth='223.5px'\n              onClick={handleKeepAddress}\n              status={buttonStatus}\n              type={labelSecondary ? 'secondary' : 'primary'}\n              width='100%'\n            />\n          )}\n        </Column>\n      )}\n    </Row>\n  )\n}","import React from 'react'\nimport { Picture, Text } from '../../atoms'\nimport { Column, Row, Spacer } from '../../layout'\nimport { SimulationItem } from './SimulationModal'\nimport styles from './SimulationModal.module.css'\n\nexport const ModalShelf = ({item}: {item: SimulationItem}) => {\n  const itemQuantity = `${item?.quantity} ${item?.measurementUnit}`\n  return (\n    <>\n      <Row key={item?.id}>\n        <Column maxWidth='20%'>\n          <Picture\n            alt={item?.name}\n            border='none'\n            borderRadius='none'\n            className={styles.outOfStock}\n            height='70px'\n            src={item?.image}\n            width='70px'\n          />\n        </Column>\n        <Column>\n          <Row>\n            <Text fontSize='md' fontWeight='semibold'>{item?.brandName}</Text>\n          </Row>\n          <Row>\n            <Text fontSize='md' >{item?.name}</Text>\n          </Row>\n          <Row>\n            <Text color='neutral-dark' fontSize='sm'>{itemQuantity}</Text>\n          </Row>\n          <Row>\n            <Text fontSize='sm' fontWeight='semibold'>Cantidad: {itemQuantity}</Text>\n          </Row>\n          <Spacer.Horizontal size={8}/>\n          <Row>\n            <Text fontSize='md' fontWeight='semibold'>{item?.sellingPrice}</Text>\n          </Row>\n        </Column>\n      </Row>\n    </>\n  )\n}","import { useEffect, useState } from 'react'\nimport { BigScreen, SmallScreen } from '../../../helpers'\nimport { ButtonStatus } from '../../atoms'\nimport { Column } from '../../layout'\nimport { Modal } from '../../molecules'\nimport { ContentModalSimulation } from './ContentModalSimulation'\n\nexport interface SimulationItem {\n  brandName: string;\n  id: string;\n  image: string;\n  measurementUnit: string;\n  name: string;\n  sellingPrice: string;\n  quantity: string;\n}\n\nexport interface SimulationModalProps {\n  buttonStatus?: ButtonStatus;\n  content?: string;\n  isOpen?: boolean;\n  labelPrimary?: string;\n  labelSecondary?: string;\n  items?: SimulationItem[];\n  title?: string;\n  action?: () => void;\n  handleKeepAddress?: () => void;\n  handleModal?: () => void;\n}\n\nexport const SimulationModal = ({\n  buttonStatus,\n  content,\n  isOpen = true,\n  labelPrimary,\n  labelSecondary,\n  items = [],\n  title,\n  action,\n  handleKeepAddress,\n  handleModal = () => { return }\n}: SimulationModalProps): React.ReactElement => {\n  const [screenHeight, setScreenHeight] = useState(`${(window.innerHeight * 0.94).toString()}px`)\n\n  useEffect(() => {\n    const resizeEvent = () => {\n      setScreenHeight(`${(window.innerHeight * 0.94).toString()}px`)\n    }\n    window.addEventListener('resize', resizeEvent)\n    return () => {\n      window.removeEventListener('resize', resizeEvent)\n    }\n  }, [window.innerHeight])\n\n  const contentModalSimulationProps = {\n    buttonStatus,\n    content,\n    labelPrimary,\n    labelSecondary,\n    items,\n    title,\n    action,\n    handleKeepAddress\n  }\n\n  const contentModalSimulationPropsMobile = {\n    ...contentModalSimulationProps,\n    isMobile: true\n  }\n\n  return (\n    <>\n      <BigScreen>\n        <Modal\n          hiddenX\n          isOpen={isOpen}\n          maxWidth='495px'\n          minHeight='550px'\n          toggleOutside={handleModal}\n        >\n          <ContentModalSimulation {...contentModalSimulationProps}/>\n        </Modal>\n      </BigScreen>\n      <SmallScreen>\n        <Modal\n          fullScreen\n          hiddenX\n          isOpen={isOpen}\n          marginFullScreen='1vh 0 0 0'\n          minHeightFullScreen={screenHeight}\n          padding='20px 12px'\n          toggle={handleKeepAddress}\n          toggleOutside={handleKeepAddress}\n        >\n          <Column customHeight={screenHeight} maxWidth='100vw'>\n            <ContentModalSimulation {...contentModalSimulationPropsMobile}/>\n          </Column>\n        </Modal>\n      </SmallScreen>\n    </>\n  )\n}","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".K4bHXeYOESzjjmTbt58o {\\n  mix-blend-mode: luminosity;\\n}\\n\\n.HXFOT0Ei0c558QcjWPtt {\\n  box-shadow: 0px -2px 2px 0px rgba(198, 198, 198, 0.3);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./stories/organisms/SimulationModal/SimulationModal.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,0BAA0B;AAC5B;;AAEA;EACE,qDAAqD;AACvD\",\"sourcesContent\":[\".outOfStock {\\n  mix-blend-mode: luminosity;\\n}\\n\\n.spacerShadow {\\n  box-shadow: 0px -2px 2px 0px rgba(198, 198, 198, 0.3);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"outOfStock\": \"K4bHXeYOESzjjmTbt58o\",\n\t\"spacerShadow\": \"HXFOT0Ei0c558QcjWPtt\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./SimulationModal.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./SimulationModal.module.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./SimulationModal.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}