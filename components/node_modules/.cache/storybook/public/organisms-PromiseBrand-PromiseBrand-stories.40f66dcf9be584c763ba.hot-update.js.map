{"version":3,"file":"organisms-PromiseBrand-PromiseBrand-stories.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAMA;AAMA;AAEA;AACA;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAQA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AAAA;AACA;AAGA;AA3HA","sources":["webpack://components/./stories/organisms/PromiseBrand/PromiseBrand.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Divider,\n  Icon,\n  Link,\n  Text\n} from '../../atoms'\nimport {\n  Column,\n  Row,\n  Container,\n  Spacer\n} from '../../layout'\nimport { BigScreen, SmallScreen } from '../../../helpers/mediaQueries'\nimport { Icons } from '../../../assets/SvgComponents/SvgIcons'\nimport { getGlobalStyle } from '../../../helpers'\nimport styles from './PromiseBrand.module.css'\n\nexport interface PromiseBrandData {\n  description?: string;\n  icon?: keyof (typeof Icons);\n  id?: number;\n  label?: string;\n  link?: string;\n  title?: string;\n}\n\nexport interface PromiseBrandProps {\n  data: PromiseBrandData[];\n  background?: string;\n  customStyle?: React.CSSProperties;\n}\n\nexport const PromiseBrand = ({\n  data = [],\n  background = getGlobalStyle('--color-background-white')\n}: PromiseBrandProps): React.ReactElement => {\n  return (\n    <Container\n      backgroundColor={background}\n      className={styles['promiseBrandShadow']}\n      maxWidth='1166px'\n      tagName='section'\n    >\n      <Row\n        alignItems='center'\n        isWrap\n        justifyContent='around'\n      >\n        {data && data.map((item, i) => {\n          return (\n            <React.Fragment key={i}>\n              <BigScreen>\n                <Container maxWidth='260px' tagName='article'>\n                  {(\n                    item?.link &&\n                    item?.icon &&\n                    item?.description &&\n                    item?.title\n                  ) &&\n                    <Link href={item.link} underline='none'>\n                      <Row justifyContent='center' role={item.title} >\n                        <Column\n                          alignItems='center'\n                          clickable='pointer'\n                          isWrap\n                          justifyContent='center'\n                        >\n                          <Spacer.Horizontal size={32} />\n                          <Icon\n                            clickable='pointer'\n                            color={getGlobalStyle('--color-icons-gray')}\n                            name={item.icon}\n                            sizes='sm'\n                          />\n                          <Spacer.Horizontal size={8} />\n\n                          <Text clickable='pointer' fontWeight='semibold'>{item.title}</Text>\n                          <Spacer.Horizontal size={8} />\n                          <Text\n                            clickable='pointer'\n                            fontSize='md'\n                            textAlign='center'\n                          >\n                            {item.description}\n                          </Text>\n                          <Spacer.Horizontal size={32} />\n                        </Column>\n                      </Row>\n                    </Link>\n                  }\n                </Container>\n              </BigScreen>\n\n              <SmallScreen>\n                <Container tagName='article'>\n                  {(\n                    item?.link &&\n                    item?.icon &&\n                    item?.description &&\n                    item?.title\n                  ) &&\n                    <Link\n                      customWidth='100'\n                      href={item.link}\n                      underline='none'\n                    >\n                      <Container\n                        isWrap\n                        maxHeight='110px'\n                        padding={'1% 6% 1% 6%'}\n                        tagName='section'\n                      >\n                        {i > 0 && <Divider verticalMargin={0} />}\n                        <Row isWrap role={item.title} >\n                          <Column\n                            alignItems='center'\n                            customHeight={'75px'}\n                            customWidth='10'\n                            justifyContent='center'\n                            tagName='article'\n                          >\n                            <Icon\n                              color={getGlobalStyle('--color-icons-gray')}\n                              name={item.icon}\n                              sizes='sm'\n                            />\n                          </Column>\n\n                          <Spacer.Vertical size={4} />\n\n                          <Column\n                            alignItems='start'\n                            customHeight={'85px'}\n                            customWidth='80'\n                            justifyContent='center'\n                            tagName='article'\n                          >\n                            <Text fontWeight='semibold' textAlign='left'>{item.title}</Text>\n                            <Spacer.Horizontal size={4} />\n                            <Text fontSize='md' textAlign='left'>{item.description}</Text>\n                          </Column>\n                        </Row>\n                      </Container>\n\n                    </Link>\n                  }\n                </Container>\n              </SmallScreen>\n\n            </React.Fragment>\n          )\n        })}\n      </Row>\n    </Container>\n  )\n}"],"names":[],"sourceRoot":""}