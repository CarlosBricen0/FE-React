{"version":3,"file":"stories_layout_BaseContainer_BaseContainer_tsx.df3709abbccf388e533e.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sources":["webpack://components/./stories/layout/BaseContainer/BaseContainer.tsx"],"sourcesContent":["import React, { CSSProperties } from 'react'\nimport classNames from 'classnames'\nimport styles from './baseContainer.module.css'\n\ntype AbsoluteDefault = 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight'\nexport type AlignItems = 'center' | 'start' | 'end' | 'baseline' | 'stretch'\ntype BorderEdge = 'none' | 'right' | 'left' | 'all' | 'bottom'\nexport type JustifyContent = 'center' | 'start' | 'end' | 'between' | 'around'\ntype Overflow = 'scroll' | 'hidden' | 'auto' | 'visible'\nexport type Position = 'initial' | 'absolute' | 'relative' | 'static' | 'fixed' | 'sticky'\ntype TagName = 'body' | 'header' | 'footer' | 'main' | 'section' | 'aside' | 'div' | string\n\nexport interface BaseContainerProps extends React.HTMLProps<HTMLDivElement> {\n  absoluteDefault?: AbsoluteDefault;\n  alignItems?: AlignItems;\n  alignSelf?: AlignItems;\n  background?: string;\n  backgroundColor?: string;\n  block?: boolean;\n  border?: string;\n  borderColor?: string;\n  borderEdge?: BorderEdge;\n  borderRadius?: string;\n  boxShadow?: string;\n  boxSizing?: 'border-box' | 'content-box'\n  children?: React.ReactNode;\n  clickable?: string;\n  customClassName?: string;\n  customHeight?: string;\n  customWidth?: string;\n  flexDirection?: 'row' | 'column' | false;\n  gap?: CSSProperties['gap'];\n  grid?: boolean;\n  gridTemplateColumns?: number;\n  hidden?: boolean;\n  isPlayground?: boolean;\n  isWrap?: boolean;\n  justifyContent?: JustifyContent;\n  left?: string;\n  margin?: string;\n  maxHeight?: string;\n  maxWidth?: string;\n  minHeight?: string;\n  minWidth?: string;\n  overflow?: Overflow;\n  padding?: string;\n  position?: Position;\n  role?: string;\n  scrollbarHidden?: boolean;\n  tagName?: TagName;\n  top?: string;\n  touchAction?: CSSProperties['touchAction'];\n  visibility?: CSSProperties['visibility'];\n  zIndex?: string;\n  val?: boolean | (() => void);\n  onClick?: (e?: unknown) => void;\n  onBlur?: (e?: unknown) => void;\n}\n\nexport type ChildrenBaseContainerProps = Omit<BaseContainerProps, 'flexDirection' | 'ref'>\n\nexport const BaseContainer = React.forwardRef(function BaseContainer({\n  absoluteDefault = 'topLeft',\n  alignItems = 'center',\n  alignSelf,\n  background,\n  backgroundColor,\n  block = false,\n  border,\n  borderEdge = 'none',\n  borderRadius,\n  borderColor= 'none',\n  boxShadow,\n  boxSizing,\n  children,\n  clickable = 'auto',\n  customClassName,\n  customHeight = 'auto',\n  customWidth = '100',\n  flexDirection,\n  gap,\n  grid,\n  gridTemplateColumns,\n  hidden,\n  isPlayground = false,\n  isWrap = false,\n  justifyContent = 'center',\n  left,\n  margin,\n  maxHeight = 'initial',\n  maxWidth = 'initial',\n  minHeight = 'initial',\n  minWidth = 'initial',\n  overflow,\n  padding,\n  position = 'initial',\n  role = '',\n  scrollbarHidden,\n  tagName = 'div',\n  top,\n  touchAction,\n  visibility,\n  zIndex,\n  onClick = () => { return null },\n  ...props\n}: BaseContainerProps, ref): React.ReactElement {\n  const currentWidth = props.width ?? (/max-/.test(customWidth) ? 'max-content' : `${customWidth}%`)\n  const currentPosition = position && top ? `${top}px` : ''\n  return React.createElement(\n    tagName,\n    {\n      className: classNames(styles.container, customClassName, {\n        [styles['is-playground']]: isPlayground,\n        [styles['is-wrap']]: isWrap,\n        [styles[`justify-${justifyContent}`]]: justifyContent,\n        [styles[`align-${alignItems}`]]: alignItems,\n        [styles[`flex-direction--${flexDirection}`]]: flexDirection,\n        [styles[`border-edge--${borderEdge}`]]: borderEdge,\n        [styles[`absolute-default--${absoluteDefault}`]]: absoluteDefault,\n        [styles[`overflow--${overflow}`]]: overflow,\n        [styles['display--block']]: block,\n        [styles['display--grid']]: grid,\n        [styles['display--none']]: hidden,\n        [styles['scrollbar--hidden']]: scrollbarHidden\n      }),\n      style: {\n        alignSelf,\n        background,\n        backgroundColor,\n        border,\n        borderRadius,\n        borderColor,\n        boxShadow,\n        boxSizing,\n        cursor: clickable,\n        gap,\n        gridTemplateColumns: gridTemplateColumns && `repeat(${gridTemplateColumns}, minmax(0, 1fr))`,\n        height: customHeight,\n        left,\n        margin,\n        maxHeight,\n        maxWidth,\n        minHeight,\n        minWidth,\n        padding,\n        position,\n        top: currentPosition,\n        touchAction,\n        visibility,\n        width: currentWidth,\n        zIndex\n      },\n      role,\n      ref,\n      onClick,\n      ...props\n    },\n    children\n  )\n})"],"names":[],"sourceRoot":""}