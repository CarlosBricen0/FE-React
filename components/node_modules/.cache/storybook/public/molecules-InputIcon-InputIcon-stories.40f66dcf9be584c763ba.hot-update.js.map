{"version":3,"file":"molecules-InputIcon-InputIcon-stories.40f66dcf9be584c763ba.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AAIA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AA3HA","sources":["webpack://components/./stories/molecules/InputAdornment/InputAdornment.tsx","webpack://components/./stories/molecules/InputIcon/InputIcon.tsx"],"sourcesContent":["import React, { useRef } from 'react'\nimport {\n  Row,\n  Column,\n  Container\n} from '../../layout/index'\nimport {\n  Input,\n  InputProps\n} from '../../atoms/index'\nimport { getGlobalStyle } from '../../../helpers'\n\nexport interface InputAdornmentProps extends Omit<InputProps, 'border'> {\n  background?: string;\n  border?: string;\n  id?: string;\n  inputAdornmentEnd?: React.ReactNode | string;\n  inputAdornmentStart?: React.ReactNode | string;\n  inputWidth?: string;\n  padding?: string,\n  placeholderColor?: string;\n  titleInput?: string;\n  type?: string;\n  width?: string;\n}\n\nexport const InputAdornment = React.forwardRef(function InputAdornment({\n  background = getGlobalStyle('--color-base-white'),\n  border,\n  borderRadius = '8px',\n  customClassName,\n  fontSize = 'base',\n  height,\n  id,\n  inputAdornmentEnd,\n  inputAdornmentStart,\n  inputWidth = '100%',\n  padding,\n  placeholder,\n  placeholderColor,\n  textAlign = 'left',\n  titleInput,\n  type,\n  width = '100',\n  ...props\n}: InputAdornmentProps, ref): React.ReactElement<InputAdornmentProps> {\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  return (\n    <Container\n      customClassName={customClassName}\n      ref={ref}\n    >\n      <Row\n        alignItems='center'\n        background={background}\n        border={border}\n        borderRadius={borderRadius}\n        customHeight={height}\n        customWidth={width}\n        justifyContent='between'\n        onClick={() => {\n          inputRef?.current?.focus()\n        }}\n        padding={padding}\n      >\n        {inputAdornmentStart && (\n          <Column\n            clickable='pointer'\n            maxWidth='min-content'\n            padding='0 5px 0 0'\n          >\n            {inputAdornmentStart}\n          </Column>\n        )}\n        <Input\n          background='transparent'\n          fontSize={fontSize}\n          id={id}\n          placeholder={placeholder}\n          placeholderColor={placeholderColor}\n          ref={inputRef}\n          textAlign={textAlign}\n          title={titleInput}\n          type={type ? type : 'text'}\n          width={inputWidth}\n          {...props}\n        />\n        {inputAdornmentEnd && (\n          <Column\n            clickable='pointer'\n            maxWidth='min-content'\n            padding='0 0 0 5px'\n          >\n            {inputAdornmentEnd}\n          </Column>\n        )}\n      </Row>\n    </Container>\n  )\n})","import React from 'react'\nimport { Row, Column } from '../../layout'\nimport { Icon } from '../../atoms'\nimport { Icons } from '../../../assets/SvgComponents/SvgIcons'\nimport { InputAdornment } from '../InputAdornment/InputAdornment'\nimport { getGlobalStyle } from '../../../helpers'\n\ntype FontSize = 'base' | 'xs' | 'sm' | 'md' | 'lg'\ntype TextAlignInput = 'left' | 'center' | 'right' | 'justify'\nexport interface InputIconProps {\n  autofocus?: boolean;\n  background?: string;\n  backgroundGradientIconSearch?: string;\n  backgroundIcon?: string;\n  border?: string;\n  borderRadius?: string;\n  clearButton?: boolean;\n  colorIcon?: string;\n  customPadding?: string;\n  customSizeIcon?: number;\n  fontSize?: FontSize;\n  height?: string;\n  icon?: keyof (typeof Icons);\n  iconArrowSize?: number;\n  iconBorderRadius?: string;\n  iconWidth?: string;\n  id?:string;\n  inputAdornmentRef?: React.MutableRefObject<HTMLDivElement>;\n  inputCustomClass?: string;\n  inputWidth?: string;\n  isMobile?: boolean;\n  padding?: string,\n  placeholder?: string;\n  placeholderColor?: string;\n  placeholderFocus?: string;\n  site?: 'unimarc' | 'alvi';\n  textAlignInput?: TextAlignInput;\n  titleSearch?: string;\n  value?: string;\n  width?: string;\n  onBlurSearch?: (e?: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPressSearch?: (e?: React.KeyboardEvent<HTMLInputElement>) => void;\n  onChangeSearch?: (e?: React.ChangeEvent<HTMLInputElement>) => void;\n  onClearInput?: (e?: React.ChangeEvent<HTMLInputElement>) => void;\n  onClickSearch?: () => void;\n  onFocusSearch?: (e?: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const InputIcon = ({\n  autofocus = false,\n  background = getGlobalStyle('--color-base-white'),\n  backgroundGradientIconSearch,\n  backgroundIcon = getGlobalStyle('--color-base-transparent'),\n  border,\n  borderRadius = getGlobalStyle('--border-radius-2xs'),\n  clearButton = false,\n  colorIcon = '#000',\n  customPadding,\n  customSizeIcon = 20,\n  fontSize = 'base',\n  height = '40px',\n  icon = 'SearchCart',\n  iconBorderRadius = '8px',\n  iconWidth = '15',\n  id,\n  inputAdornmentRef,\n  inputCustomClass,\n  inputWidth = '100%',\n  padding = '10px',\n  placeholder,\n  placeholderColor,\n  placeholderFocus,\n  site = 'unimarc',\n  textAlignInput = 'left',\n  titleSearch = 'titleSearch',\n  value,\n  width = '100',\n  onBlurSearch,\n  onChangeSearch,\n  onClearInput,\n  onClickSearch,\n  onKeyPressSearch,\n  onFocusSearch\n}: InputIconProps): React.ReactElement<InputIconProps> => {\n  const unimarcSite = site === 'unimarc'\n  const alviHeight = '40px'\n  const customHeight = unimarcSite ? height : alviHeight\n  const customSizeInputIcon = unimarcSite ? customSizeIcon : 21\n\n  const ClearIcon = () => {\n    return (\n      <Column\n        alignItems='start'\n        borderRadius='8px'\n        clickable='pointer'\n        customHeight='100%'\n        customWidth={iconWidth}\n        justifyContent='center'\n        onClick={onClearInput}\n      >\n        <Icon\n          clickable='pointer'\n          color={getGlobalStyle('--color-icons-gray')}\n          customSize={16}\n          name='Close'\n        />\n      </Column>\n    )\n  }\n\n  return (\n    <Row\n      alignItems='center'\n      backgroundColor={background}\n      border={border}\n      borderRadius={borderRadius}\n      customHeight={customHeight}\n      customWidth={width}\n      justifyContent='center'\n      padding={customPadding}\n    >\n      <Column className={inputCustomClass} padding={padding}>\n        <form\n          aria-label='Search bar form'\n          id='search-product'\n          onSubmit={(e) => {e.preventDefault()}}\n        >\n          <InputAdornment\n            autoFocus={autofocus}\n            fontSize={fontSize}\n            id={id}\n            inputAdornmentEnd={clearButton && <ClearIcon />}\n            onBlur={onBlurSearch}\n            onChange={onChangeSearch}\n            onFocus={(e) => {\n              if (e.target.value) {\n                onFocusSearch(e)\n              }\n            }}\n            onKeyDown={onKeyPressSearch}\n            placeholder={placeholder}\n            placeholderColor={placeholderColor}\n            placeholderFocus={placeholderFocus}\n            ref={inputAdornmentRef}\n            textAlign={textAlignInput}\n            title={titleSearch}\n            value={value}\n            width={inputWidth}\n          />\n        </form>\n      </Column>\n      <Column\n        alignItems='center'\n        background={backgroundGradientIconSearch}\n        backgroundColor={backgroundIcon}\n        borderRadius={iconBorderRadius}\n        clickable='pointer'\n        customHeight='100%'\n        customWidth={iconWidth}\n        justifyContent='center'\n        onClick={onClickSearch}\n      >\n        <Icon\n          clickable='pointer'\n          color={colorIcon}\n          customSize={customSizeInputIcon}\n          name={icon}\n        />\n      </Column>\n    </Row>\n  )\n}\n"],"names":[],"sourceRoot":""}